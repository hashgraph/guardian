{
    "id": "689d5badaf8487e6c32c8a2a",
    "uuid": "5d22bf31-33d8-4378-b1c5-1947a4eda5df",
    "name": "VM0033-v1.0.3_8_14",
    "version": "Dry Run",
    "description": "This methodology outlines procedures for estimating net greenhouse gas (GHG) emission reductions and removals from tidal wetland restoration projects.",
    "topicDescription": "Methodology for Tidal Wetland Restoration Projects",
    "projectSchema": "#2e15431c-85d5-4bc8-83fc-6225aa162b43",
    "categories": [
      "65afb95a36032d4ea6775c6f",
      "65afb95936032d4ea6775c56",
      "65afb95936032d4ea6775c5d"
    ],
    "status": "DRY-RUN",
    "creator": "did:hedera:testnet:FGikPC1ksdDz4sHfEX34nn16UxJ4mbE9n6dPdGadgiyQ_0.0.4967862",
    "owner": "did:hedera:testnet:FGikPC1ksdDz4sHfEX34nn16UxJ4mbE9n6dPdGadgiyQ_0.0.4967862",
    "topicId": "0.0.6572308",
    "instanceTopicId": "0.0.1755791999156",
    "synchronizationTopicId": null,
    "policyTag": "Tag_1755141809495",
    "codeVersion": "1.5.1",
    "createDate": "2025-08-14T03:44:45.247Z",
    "policyRoles": [
      "Project_Proponent",
      "VVB"
    ],
    "policyNavigation": [
      {
        "role": "Project_Proponent",
        "steps": [
          {
            "name": "Projects",
            "block": "Projects_pp",
            "level": 1
          },
          {
            "name": "Create Project",
            "block": "Projects_pp",
            "level": 2
          },
          {
            "name": "Monitoring Reports",
            "block": "Monitoring_Reports_pp",
            "level": 1
          },
          {
            "name": "Validation & Verifications",
            "block": "Validation_and_Verification_PP",
            "level": 1
          },
          {
            "name": "Validation Reports",
            "block": "validation_reports_pp",
            "level": 2
          },
          {
            "name": "Verification Reports",
            "block": "verification_reports_pp",
            "level": 2
          },
          {
            "name": "Tokens",
            "block": "tokens",
            "level": 1
          }
        ]
      },
      {
        "role": "VVB",
        "steps": [
          {
            "name": "VVB Documents",
            "block": "VVB Documents",
            "level": 1
          },
          {
            "name": "Projects",
            "block": "Projects_vvb",
            "level": 1
          },
          {
            "name": "Monitoring Reports",
            "block": "Monitoring_Reports_vvb",
            "level": 1
          },
          {
            "name": "Validation & Verifications",
            "block": "Validation_and_Verification_vvb",
            "level": 1
          },
          {
            "name": "Validation Reports",
            "block": "validation_reports_vvb",
            "level": 2
          },
          {
            "name": "Verification Reports",
            "block": "verification_reports_vvb",
            "level": 2
          }
        ]
      },
      {
        "role": "NO_ROLE",
        "steps": [
          {
            "name": "Choose a role",
            "block": "Choose_Roles",
            "level": 1
          }
        ]
      },
      {
        "role": "OWNER",
        "steps": [
          {
            "name": "VVBs",
            "block": "approve_VVB",
            "level": 1
          },
          {
            "name": "Project Pipeline",
            "block": "project_Pipeline",
            "level": 1
          },
          {
            "name": "Monitoring Reports",
            "block": "Monitoring_Reports_verra",
            "level": 1
          },
          {
            "name": "Validation & Verifications",
            "block": "Validation_and_Verification_verra",
            "level": 1
          },
          {
            "name": "Validation Reports",
            "block": "validation_reports_verra",
            "level": 2
          },
          {
            "name": "Verification Reports",
            "block": "verification_reports_verra",
            "level": 2
          },
          {
            "name": "Verified Presentations",
            "block": "VP",
            "level": 1
          }
        ]
      }
    ],
    "policyTopics": [
      {
        "type": "any",
        "name": "Project",
        "description": "",
        "static": true,
        "memoObj": "topic"
      }
    ],
    "policyTokens": [
      {
        "templateTokenTag": "VCU",
        "tokenName": "Verified Carbon Unit",
        "tokenSymbol": "VCU",
        "decimals": ""
      }
    ],
    "policyGroups": [],
    "config": {
      "blockType": "interfaceContainerBlock",
      "id": "3473e595-c312-41e6-95b4-f07883f593c4",
      "uiMetaData": {
        "type": "blank"
      },
      "permissions": [
        "ANY_ROLE"
      ],
      "defaultActive": true,
      "onErrorAction": "no-action",
      "tag": "",
      "children": [
        {
          "id": "955dc204-1db1-488d-8aec-b4185249e00c",
          "blockType": "policyRolesBlock",
          "defaultActive": true,
          "uiMetaData": {
            "title": "Roles",
            "description": "Choose Roles"
          },
          "roles": [
            "Project_Proponent",
            "VVB"
          ],
          "permissions": [
            "NO_ROLE"
          ],
          "onErrorAction": "no-action",
          "tag": "Choose_Roles",
          "children": [],
          "events": [],
          "artifacts": []
        },
        {
          "id": "62628fc5-d96d-4948-9666-5db5c6399f47",
          "blockType": "interfaceContainerBlock",
          "defaultActive": true,
          "uiMetaData": {
            "type": "tabs"
          },
          "permissions": [
            "OWNER"
          ],
          "onErrorAction": "no-action",
          "tag": "Verra_header",
          "children": [
            {
              "id": "5de9b842-b4e2-498c-b9a4-4321cf39b824",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "uiMetaData": {
                "type": "blank",
                "title": "Approve VVB"
              },
              "permissions": [
                "OWNER"
              ],
              "onErrorAction": "no-action",
              "tag": "approve_VVB",
              "children": [
                {
                  "id": "14d69df0-bb61-4c65-abaf-4507cde54521",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Owner",
                        "name": "document.issuer",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Text",
                        "name": "document.credentialSubject.0.field0",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Operation",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "approve_documents_btn",
                        "width": "250px",
                        "bindGroup": "vvb_grid_verra_documents_to_approve"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Revoke",
                        "name": "",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "revoke_vvb_verra_btn",
                        "bindGroup": "vvb_grid_verra_documents_approved",
                        "width": "100px"
                      },
                      {
                        "title": "Operation",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "250px"
                      }
                    ]
                  },
                  "permissions": [
                    "OWNER"
                  ],
                  "dependencies": [
                    "save_new_approve_document"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "vvb_grid_verra",
                  "children": [
                    {
                      "id": "e206551f-d96a-4b4f-b2a5-3f12182cbd67",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": true,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "value": "vvb",
                          "field": "type",
                          "type": "equal"
                        },
                        {
                          "value": "Waiting for Approval",
                          "field": "option.status",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                      "onErrorAction": "no-action",
                      "tag": "vvb_grid_verra_documents_to_approve",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "18d1f380-77d3-49bb-aaa0-09a9dbe29d9c",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "approved_vvb",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                      "onlyOwnDocuments": false,
                      "uiMetaData": {
                        "type": "blank"
                      },
                      "tag": "vvb_grid_verra_documents_approved",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "eb1ee4f5-9b3c-4350-b5a8-516bbea728c8",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "rejected_vvb",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                      "onlyOwnDocuments": false,
                      "uiMetaData": {
                        "type": "blank"
                      },
                      "tag": "vvb_grid_verra_documents_approved_rejected",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "d1f538e5-b881-41a6-b1c6-9bb6b807f7fd",
                      "blockType": "historyAddon",
                      "defaultActive": false,
                      "permissions": [
                        "ANY_ROLE"
                      ],
                      "onErrorAction": "no-action",
                      "tag": "history_addon_35a0bfb0-72a2-4dde-a107-ce356544a9c7",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "95890b13-cc6f-4d03-afde-323c6337498d",
                  "blockType": "buttonBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "buttons": [
                      {
                        "tag": "Button_0",
                        "name": "Approve",
                        "type": "selector",
                        "filters": [],
                        "field": "option.status",
                        "value": "APPROVED",
                        "uiClass": "btn-approve"
                      },
                      {
                        "tag": "Button_1",
                        "name": "Reject",
                        "type": "selector-dialog",
                        "filters": [],
                        "title": "Reject",
                        "description": "Enter reject reason",
                        "field": "option.status",
                        "value": "REJECTED",
                        "uiClass": "btn-reject"
                      }
                    ]
                  },
                  "tag": "approve_documents_btn",
                  "children": [],
                  "events": [
                    {
                      "target": "update_approve_document_status",
                      "source": "approve_documents_btn",
                      "input": "RunEvent",
                      "output": "Button_0",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "update_approve_document_status_2",
                      "source": "approve_documents_btn",
                      "input": "RunEvent",
                      "output": "Button_1",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "de9959bf-308c-4acc-b2df-0296a4d20c37",
                  "blockType": "buttonBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "buttons": [
                      {
                        "tag": "Button_0",
                        "name": "Revoke",
                        "type": "selector-dialog",
                        "filters": [
                          {
                            "value": "Revoked",
                            "field": "option.status",
                            "type": "not_equal"
                          }
                        ],
                        "title": "Revoke",
                        "description": "Enter revoke reason"
                      }
                    ]
                  },
                  "tag": "revoke_vvb_verra_btn",
                  "children": [],
                  "events": [
                    {
                      "target": "revoke_vvb_verra",
                      "source": "revoke_vvb_verra_btn",
                      "input": "RunEvent",
                      "output": "Button_0",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "43998439-0c4e-4e0f-8f96-7e61edd2782a",
                  "blockType": "revocationBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER",
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "updatePrevDoc": true,
                  "prevDocStatus": "Waiting for Approval",
                  "tag": "revoke_vvb_verra",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "628fb405-4ee1-4b94-8d16-e0ab78015c9d",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER",
                    "VVB"
                  ],
                  "uiMetaData": {},
                  "entityType": "",
                  "dataType": "",
                  "onErrorAction": "no-action",
                  "options": [
                    {
                      "name": "status",
                      "value": "Revoked"
                    }
                  ],
                  "dataSource": "database",
                  "documentType": "document",
                  "stopPropagation": false,
                  "tag": "save_revoke_vvb_verra",
                  "children": [],
                  "events": [
                    {
                      "target": "vvb_grid_verra",
                      "source": "save_revoke_vvb_verra",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "434c15c1-ec35-401c-a4fa-7d4942132ecb",
                  "blockType": "switchBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "executionFlow": "firstTrue",
                  "conditions": [
                    {
                      "type": "equal",
                      "value": "true == true",
                      "actor": "owner",
                      "target": "wait_for_approve",
                      "tag": "Condition_0"
                    }
                  ],
                  "tag": "return_vvb_to_wait",
                  "children": [],
                  "events": [
                    {
                      "target": "wait_for_approve",
                      "source": "return_vvb_to_wait",
                      "input": "RunEvent",
                      "output": "Condition_0",
                      "actor": "owner",
                      "disabled": false
                    },
                    {
                      "target": "",
                      "source": "return_vvb_to_wait",
                      "input": "RunEvent",
                      "output": "Condition_0",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "62348007-5cf6-481e-b7d3-da2c16041447",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "uiMetaData": {
                "title": "Project Pipeline",
                "type": "blank"
              },
              "permissions": [
                "OWNER"
              ],
              "onErrorAction": "no-action",
              "tag": "project_Pipeline",
              "children": [
                {
                  "id": "c7007b77-24a0-4bbc-b257-ff02e396877d",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.project_details.G5",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Status",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "150px"
                      },
                      {
                        "title": "Add",
                        "name": "add",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "add_project",
                        "bindGroup": "project_grid_verra_waiting_to_add_projects",
                        "width": "150px"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link",
                        "width": "150px"
                      }
                    ],
                    "type": "blank"
                  },
                  "permissions": [
                    "OWNER"
                  ],
                  "dependencies": [
                    "reject_project_status",
                    "save_assign",
                    "save_project",
                    "save_reassign_project"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "project_grid_verra",
                  "children": [
                    {
                      "id": "f4b3078f-2a03-44a3-9d44-743948355bc8",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": true,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "value": "Waiting to be Added",
                          "field": "option.status"
                        },
                        {
                          "value": "project",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onErrorAction": "no-action",
                      "tag": "project_grid_verra_waiting_to_add_projects",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "c8b2eb76-78dd-46da-a87e-1a8900efd3fe",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": true,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "not_equal",
                          "field": "option.status",
                          "value": "Waiting to be Added"
                        },
                        {
                          "value": "project",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onErrorAction": "no-action",
                      "tag": "project_grid_verra_not_waiting_to_add_projects",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "55d1b52a-3bc1-4ec8-a047-82adf21ad5a8",
                      "blockType": "filtersAddon",
                      "defaultActive": true,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "options": [],
                        "content": "Project Name"
                      },
                      "type": "dropdown",
                      "queryType": "equal",
                      "canBeEmpty": true,
                      "field": "document.credentialSubject.0.project_details.G5",
                      "optionName": "document.credentialSubject.0.project_details.G5",
                      "optionValue": "document.credentialSubject.0.project_details.G5",
                      "tag": "filter_project_grid_verra",
                      "children": [
                        {
                          "id": "af7c883e-49b6-490f-83ab-cdc2da654447",
                          "blockType": "documentsSourceAddon",
                          "defaultActive": false,
                          "permissions": [
                            "OWNER"
                          ],
                          "onErrorAction": "no-action",
                          "filters": [],
                          "dataType": "vc-documents",
                          "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                          "tag": "filter_project_grid_verra_all",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "61fbb920-3f3a-4e26-aabe-a32c75d685a4",
                  "blockType": "buttonBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {
                    "options": [
                      {
                        "title": "",
                        "name": "Add",
                        "tooltip": "",
                        "type": "text",
                        "value": "Waiting to Validate",
                        "uiClass": "btn-approve",
                        "bindBlock": "save_added",
                        "tag": "Option_0"
                      }
                    ],
                    "content": "VVB",
                    "buttons": [
                      {
                        "tag": "Option_0",
                        "name": "Add",
                        "type": "selector",
                        "filters": [],
                        "field": "option.status",
                        "value": "Waiting to Validate",
                        "uiClass": "btn-approve"
                      },
                      {
                        "tag": "Option_1",
                        "name": "Reject",
                        "type": "selector-dialog",
                        "filters": [],
                        "title": "Reject",
                        "description": "Enter reject reason",
                        "field": "option.status",
                        "value": "REJECTED",
                        "uiClass": "btn-reject"
                      }
                    ]
                  },
                  "type": "selector",
                  "name": "document.credentialSubject.0.id",
                  "value": "document.credentialSubject.0.id",
                  "field": "option.status",
                  "bindBlock": "save_assign",
                  "onErrorAction": "no-action",
                  "tag": "add_project",
                  "children": [],
                  "events": [
                    {
                      "target": "save_added",
                      "source": "add_project",
                      "input": "RunEvent",
                      "output": "Option_0",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "revoke_project_pp",
                      "source": "add_project",
                      "input": "RunEvent",
                      "output": "Option_1",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "1d5032db-48cb-4020-b0ac-57e10be0d217",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {},
                  "dataType": "",
                  "entityType": "project",
                  "options": [],
                  "onErrorAction": "no-action",
                  "dataSource": "database",
                  "documentType": "vc",
                  "tag": "save_added",
                  "children": [],
                  "events": [
                    {
                      "target": "project_grid_pp_2",
                      "source": "save_added",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "e7cbac3c-60f2-4e90-ac5e-11d6b7acd2c6",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "permissions": [
                "OWNER"
              ],
              "uiMetaData": {
                "type": "blank",
                "title": "Monitoring Reports"
              },
              "onErrorAction": "no-action",
              "tag": "Monitoring_Reports_verra",
              "children": [
                {
                  "id": "168190e8-ddef-4b6e-8dbf-2bbaa6ae5103",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.project_details.G5",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Status",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "150px"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      }
                    ]
                  },
                  "dependencies": [
                    "save_mint_status",
                    "save_reassign_report"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "report_grid_verra",
                  "children": [
                    {
                      "id": "a695cc51-f4f9-4f88-94ce-22a9b5d195cf",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "field": "option.status",
                          "value": "Verified"
                        },
                        {
                          "value": "approved_report",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "onErrorAction": "no-action",
                      "tag": "report_grid_verra_verified_approved_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "d454a61b-1182-4048-983c-2c7f3855d3d9",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "field": "option.status",
                          "value": "Minting"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "onErrorAction": "no-action",
                      "tag": "report_grid_verra_minting_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "15ebc532-cdc2-4e82-8534-bd0f97292239",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "value": "Minted",
                          "field": "option.status"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "onErrorAction": "no-action",
                      "tag": "report_grid_verra_minted_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "d51a5a4a-bd64-4116-8281-3a191ad4a291",
                      "blockType": "historyAddon",
                      "defaultActive": false,
                      "permissions": [
                        "ANY_ROLE"
                      ],
                      "onErrorAction": "no-action",
                      "timelineLabelPath": "",
                      "timelineDescriptionPath": "",
                      "tag": "history_addon_97744a6d-4bd6-4281-9075-3695b76475f1",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "b4599aad-9d24-440b-a50d-1b6e52cd85ac",
                      "blockType": "filtersAddon",
                      "defaultActive": true,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "options": [],
                        "content": "Project Name"
                      },
                      "type": "dropdown",
                      "canBeEmpty": true,
                      "field": "document.credentialSubject.0.project_details.G5",
                      "optionName": "document.credentialSubject.0.project_details.G5",
                      "optionValue": "document.credentialSubject.0.project_details.G5",
                      "tag": "filter_addon_report_grid_verra",
                      "children": [
                        {
                          "id": "b00deaa6-0cc8-4a6b-8d26-d83f49d054c3",
                          "blockType": "documentsSourceAddon",
                          "defaultActive": false,
                          "permissions": [
                            "OWNER"
                          ],
                          "onErrorAction": "no-action",
                          "filters": [],
                          "dataType": "vc-documents",
                          "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                          "tag": "report_grid_verra_all",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "a282ed00-13c5-4b37-8a10-8443e966a2aa",
                  "blockType": "buttonBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {
                    "options": [
                      {
                        "title": "",
                        "name": "Mint",
                        "tooltip": "",
                        "type": "text",
                        "value": "Minting",
                        "uiClass": "btn-approve",
                        "bindBlock": "save_mint_status",
                        "tag": "Option_0"
                      }
                    ],
                    "content": "VVB",
                    "buttons": [
                      {
                        "tag": "Option_0",
                        "name": "Mint",
                        "type": "selector",
                        "filters": [],
                        "field": "option.status",
                        "value": "Minting",
                        "uiClass": "btn-approve"
                      },
                      {
                        "tag": "mint_reject_button",
                        "name": "Reject",
                        "type": "selector",
                        "filters": [],
                        "field": "option.status",
                        "value": "REJECTED",
                        "uiClass": "btn-reject"
                      }
                    ]
                  },
                  "type": "selector",
                  "field": "option.status",
                  "onErrorAction": "no-action",
                  "tag": "mint_token_verra",
                  "children": [],
                  "events": [
                    {
                      "target": "save_mint_status",
                      "source": "mint_token_verra",
                      "input": "RunEvent",
                      "output": "Option_0",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "f2ed4815-799f-4463-93ed-c58f30e8624f",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {},
                  "options": [],
                  "entityType": "verification_report",
                  "dataType": "",
                  "onErrorAction": "no-action",
                  "dataSource": "database",
                  "documentType": "vc",
                  "tag": "save_mint_status",
                  "children": [],
                  "events": [
                    {
                      "target": "verification_reports_pp",
                      "source": "save_mint_status",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "verification_reports_vvb",
                      "source": "save_mint_status",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "fd14505b-d416-4d86-a4d0-73498d6efa1b",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "database",
                  "entityType": "approved_report",
                  "tag": "save_approved_report",
                  "children": [],
                  "events": [
                    {
                      "target": "report_grid_verra",
                      "source": "save_approved_report",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "report_grid_pp",
                      "source": "save_approved_report",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "report_grid_vvb",
                      "source": "save_approved_report",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "tokens_grid",
                      "source": "save_approved_report",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "90612b4e-393f-4c62-94f8-6cad6ee6a348",
                  "blockType": "mintDocumentBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {},
                  "rule": "total_vcus",
                  "onErrorAction": "no-action",
                  "accountType": "default",
                  "useTemplate": false,
                  "tokenId": "4b31fced-8931-4dc6-ac09-7951a3d2160b",
                  "tag": "mintToken",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "51b3b4ec-b14f-4c3f-aa0e-9901cf08143d",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {},
                  "options": [
                    {
                      "variable": "",
                      "role": "",
                      "value": "Minted",
                      "name": "status"
                    }
                  ],
                  "dataType": "",
                  "entityType": "verification_report",
                  "onErrorAction": "no-action",
                  "dataSource": "database",
                  "documentType": "vc",
                  "tag": "save_mint_status_2",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "d5be57cb-6cae-4f62-8f9a-bde2f2c5de04",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [
                    {
                      "name": "status",
                      "value": "Minted"
                    }
                  ],
                  "dataSource": "database",
                  "entityType": "approved_report",
                  "tag": "save_approved_report_mint_status",
                  "children": [],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "c2107019-ce46-443c-8f11-c9e8c6b9114f",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "permissions": [
                "OWNER"
              ],
              "onErrorAction": "no-action",
              "uiMetaData": {
                "type": "tabs",
                "title": "Validation & Verifications"
              },
              "tag": "Validation_and_Verification_verra",
              "children": [
                {
                  "id": "00571e0b-97d0-4ac5-9c81-9ee86ef3bce6",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.ref",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Status",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "250px"
                      },
                      {
                        "title": "Operation",
                        "name": "operation",
                        "tooltip": "",
                        "type": "block",
                        "bindGroup": "validation_reports_verra_all_reports",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "approve_validation_report_btn",
                        "bindBlocks": [],
                        "width": "150px"
                      }
                    ],
                    "title": "Validation Reports"
                  },
                  "tag": "validation_reports_verra",
                  "children": [
                    {
                      "id": "27c3b4c7-ce32-4da0-8c9e-3bb88e1de5f2",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "validation_report",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#965d3157-4b05-42e1-ba43-ce3a35cbd022",
                      "onlyOwnDocuments": false,
                      "tag": "validation_reports_verra_all_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "6488a3ef-df14-4c46-8d55-6c388f7080e4",
                  "blockType": "buttonBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "buttons": [
                      {
                        "tag": "Approve_Button_Validation",
                        "name": "Approve",
                        "type": "selector",
                        "filters": [],
                        "field": "option.status",
                        "value": "APPROVED",
                        "uiClass": "btn-approve"
                      },
                      {
                        "tag": "Reject_Button_Validation",
                        "name": "Reject",
                        "type": "selector-dialog",
                        "filters": [],
                        "title": "Reject",
                        "description": "Enter reject reason",
                        "field": "option.status",
                        "value": "REJECTED",
                        "uiClass": "btn-reject"
                      }
                    ]
                  },
                  "tag": "approve_validation_report_btn",
                  "children": [],
                  "events": [
                    {
                      "target": "save_validation_report_status",
                      "source": "approve_validation_report_btn",
                      "input": "RunEvent",
                      "output": "Approve_Button_Validation",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "4819ca40-a1a6-4094-aaa4-771d06d17834",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "database",
                  "entityType": "validation_report",
                  "stopPropagation": true,
                  "tag": "save_validation_report_status",
                  "children": [],
                  "events": [
                    {
                      "target": "validation_reports_pp",
                      "source": "save_validation_report_status",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "validation_reports_vvb",
                      "source": "save_validation_report_status",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "66de7ad7-1097-40a5-8174-3dac04d808fd",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.ref",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Status",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "250px"
                      },
                      {
                        "title": "Operation",
                        "name": "operation",
                        "tooltip": "",
                        "type": "block",
                        "bindGroup": "verification_reports_verra_all_reports",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "mint_token_verra",
                        "bindBlocks": [],
                        "width": "150px"
                      }
                    ]
                  },
                  "tag": "verification_reports_verra",
                  "children": [
                    {
                      "id": "056f9094-465a-4463-a375-b1a71147fb62",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "verification_report",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#db915f2a-0740-4006-ab0f-63a8f914f1b7",
                      "tag": "verification_reports_verra_all_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "53bc6fd0-0366-47de-a34a-c305c6b7ecb9",
                  "blockType": "buttonBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "buttons": [
                      {
                        "tag": "Approve_Button_Verification",
                        "name": "Verify",
                        "type": "selector",
                        "filters": [],
                        "value": "APPROVED",
                        "uiClass": "btn-approve",
                        "field": "option.status"
                      },
                      {
                        "tag": "Reject_Button_Verification",
                        "name": "Reject",
                        "type": "selector-dialog",
                        "filters": [],
                        "title": "Reject",
                        "description": "Enter reject reason",
                        "value": "REJECTED",
                        "field": "option.status",
                        "uiClass": "btn-reject"
                      }
                    ]
                  },
                  "tag": "approve_verification_report_btn",
                  "children": [],
                  "events": [
                    {
                      "target": "save_verification_report_status",
                      "source": "approve_verification_report_btn",
                      "input": "RunEvent",
                      "output": "Approve_Button_Verification",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "a4da976f-65f5-44fc-b4ea-15488c5ae0ef",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "database",
                  "entityType": "verification_report",
                  "tag": "save_verification_report_status",
                  "children": [],
                  "events": [
                    {
                      "target": "verification_reports_pp",
                      "source": "save_verification_report_status",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "verification_reports_vvb",
                      "source": "save_verification_report_status",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "63ac28bc-7937-4706-aaec-dae4cc27676c",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "permissions": [
                "OWNER"
              ],
              "uiMetaData": {
                "type": "blank",
                "title": "Token History"
              },
              "onErrorAction": "no-action",
              "tag": "VP",
              "children": [
                {
                  "id": "b9b4d9fd-0394-4781-ae42-3c22b352049b",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "HASH",
                        "name": "hash",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Project",
                        "name": "document.verifiableCredential.0.credentialSubject.0.field0.field0",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Date",
                        "name": "updateDate",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Amount",
                        "name": "document.verifiableCredential.1.credentialSubject.0.amount",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "TrustChain",
                        "name": "hash",
                        "tooltip": "",
                        "type": "button",
                        "action": "link",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "trustChainBlock",
                        "content": "View TrustChain",
                        "width": "150px"
                      }
                    ]
                  },
                  "onErrorAction": "no-action",
                  "tag": "vp_grid",
                  "children": [
                    {
                      "id": "795ddf73-be33-4c92-98f5-1f1c954a5401",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [],
                      "dataType": "vp-documents",
                      "onErrorAction": "no-action",
                      "tag": "vp_grid_vp_documents",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "7c1c6a5f-d0b9-44e8-837f-6cd21340e932",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "permissions": [
                "OWNER"
              ],
              "uiMetaData": {
                "type": "blank",
                "title": "Trust Chain"
              },
              "onErrorAction": "no-action",
              "tag": "TrustChain",
              "children": [
                {
                  "id": "a96be140-9c3c-4aef-bd75-c29473093691",
                  "blockType": "reportBlock",
                  "defaultActive": true,
                  "permissions": [
                    "OWNER"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "tag": "trustChainBlock",
                  "children": [
                    {
                      "id": "cb9b211a-600b-42f0-ad9b-8caf2fd7850b",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "field": "document.id",
                          "value": "actionId",
                          "typeValue": "variable",
                          "type": "equal"
                        }
                      ],
                      "variables": [
                        {
                          "name": "mint_token_relationships",
                          "value": "relationships"
                        }
                      ],
                      "icon": "mint",
                      "title": "Mint Token",
                      "description": "Mint VCUs",
                      "visible": true,
                      "onErrorAction": "no-action",
                      "iconType": "COMMON",
                      "dynamicFilters": [],
                      "tag": "MintTokenItem",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "421de131-295d-4091-b70d-b879cc400979",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "type": "in",
                          "typeValue": "variable",
                          "field": "messageId",
                          "value": "mint_token_relationships"
                        },
                        {
                          "type": "equal",
                          "typeValue": "value",
                          "field": "type",
                          "value": "approved_report"
                        }
                      ],
                      "variables": [
                        {
                          "value": "relationships",
                          "name": "rep_mon_ver_relationships"
                        }
                      ],
                      "visible": true,
                      "title": "Monitoring Report",
                      "description": "Monitoring Report Verified ",
                      "icon": "report",
                      "onErrorAction": "no-action",
                      "iconType": "COMMON",
                      "tag": "ReportMonitoringReportVerified ",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "8f49918e-b5e2-4a30-bdd5-7737e98cb0fb",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "type": "in",
                          "typeValue": "variable",
                          "field": "messageId",
                          "value": "rep_mon_ver_relationships"
                        },
                        {
                          "type": "equal",
                          "typeValue": "value",
                          "field": "type",
                          "value": "report"
                        }
                      ],
                      "variables": [
                        {
                          "name": "auto_mon_rep_relationships",
                          "value": "relationships"
                        }
                      ],
                      "visible": true,
                      "description": "Automatic completion of MonitoringReport fields",
                      "title": "Monitoring Report",
                      "iconType": "COMMON",
                      "tag": "AutomaticMonitoringReport",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "86320852-4a3c-4797-9399-60533f25d091",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "type": "in",
                          "typeValue": "variable",
                          "field": "messageId",
                          "value": "auto_mon_rep_relationships"
                        },
                        {
                          "type": "equal",
                          "typeValue": "value",
                          "field": "type",
                          "value": "report_form"
                        }
                      ],
                      "variables": [
                        {
                          "name": "rep_mon_rep_relationships",
                          "value": "relationships"
                        }
                      ],
                      "visible": true,
                      "description": "Monitoring Report Created",
                      "title": "Monitoring Report",
                      "iconType": "COMMON",
                      "tag": "ReportMonitoringReportCreated",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "934035a7-3980-4dc0-9e3c-13dec4f6305b",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "filters": [
                        {
                          "value": "rep_mon_rep_relationships",
                          "typeValue": "variable",
                          "type": "in",
                          "field": "messageId"
                        },
                        {
                          "type": "equal",
                          "typeValue": "value",
                          "field": "type",
                          "value": "approved_project"
                        }
                      ],
                      "variables": [
                        {
                          "name": "rep_pro_val_relationships",
                          "value": "relationships"
                        }
                      ],
                      "visible": true,
                      "title": "Project",
                      "description": "Project Validation",
                      "icon": "project",
                      "onErrorAction": "no-action",
                      "iconType": "COMMON",
                      "tag": "ReportProjectValidation",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "45cbdb30-0a46-4b0a-a06b-90a7187383f7",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "rep_pro_val_relationships",
                          "typeValue": "variable",
                          "type": "in",
                          "field": "messageId"
                        },
                        {
                          "type": "equal",
                          "typeValue": "value",
                          "field": "type",
                          "value": "project"
                        }
                      ],
                      "variables": [
                        {
                          "name": "auto_pro_relationships",
                          "value": "relationships"
                        }
                      ],
                      "visible": true,
                      "description": "Automatic completion of Project fields",
                      "title": "Project",
                      "iconType": "COMMON",
                      "tag": "AutomaticProject",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "620db802-bcc9-42ce-9b3b-c8c7a01a6ea0",
                      "blockType": "reportItemBlock",
                      "defaultActive": false,
                      "permissions": [
                        "OWNER"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "auto_pro_relationships",
                          "typeValue": "variable",
                          "type": "in",
                          "field": "messageId"
                        },
                        {
                          "type": "equal",
                          "typeValue": "value",
                          "field": "type",
                          "value": "project_form"
                        }
                      ],
                      "variables": [],
                      "visible": true,
                      "title": "Project",
                      "description": "Project Created",
                      "iconType": "COMMON",
                      "tag": "ReportProjectCreated",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            }
          ],
          "events": [],
          "artifacts": []
        },
        {
          "id": "0509ff35-6011-4945-849a-c39d690f0c8a",
          "blockType": "interfaceContainerBlock",
          "defaultActive": true,
          "uiMetaData": {
            "type": "tabs"
          },
          "permissions": [
            "Project_Proponent"
          ],
          "onErrorAction": "no-action",
          "tag": "Project_Proponent_header",
          "children": [
            {
              "id": "97b083df-0de2-49df-80eb-ae880f6fc7e5",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "uiMetaData": {
                "type": "blank",
                "title": "Projects"
              },
              "permissions": [
                "Project_Proponent"
              ],
              "onErrorAction": "no-action",
              "tag": "Projects_pp",
              "children": [
                {
                  "id": "021d7c4b-945d-4618-b521-34f24c31fde3",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.project_details.G5",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Status",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "170px"
                      },
                      {
                        "title": "Assign",
                        "name": "assignedTo",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "assign_vvb",
                        "bindGroup": "project_grid_pp_2_waiting_to_validate_projects",
                        "width": "150px"
                      },
                      {
                        "title": "Assign",
                        "name": "assignedTo",
                        "tooltip": "",
                        "type": "text",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "",
                        "bindGroup": "project_grid_pp_2_validated_projects",
                        "width": "150px"
                      },
                      {
                        "title": "Add Report",
                        "name": "report",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "add_report_bnt",
                        "bindGroup": "project_grid_pp_2_validated_projects",
                        "width": "150px"
                      },
                      {
                        "title": "View Reports",
                        "name": "document.credentialSubject.0.id",
                        "tooltip": "",
                        "type": "button",
                        "action": "link",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "report_grid_pp",
                        "content": "View Reports",
                        "bindGroup": "project_grid_pp_2_validated_projects",
                        "width": "150px"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Revoke",
                        "name": "",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "revoke_project_pp_btn",
                        "width": "100px",
                        "bindGroup": "project_grid_pp_2_waiting_to_add_projects"
                      },
                      {
                        "title": "Revoke",
                        "name": "",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "revoke_project_pp_btn",
                        "width": "100px",
                        "bindGroup": "project_grid_pp_2_waiting_to_validate_projects"
                      },
                      {
                        "title": "Revoke",
                        "name": "",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "revoke_project_pp_btn",
                        "width": "100px",
                        "bindGroup": "project_grid_pp_2_validated_projects_own"
                      }
                    ]
                  },
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "dependencies": [
                    "reject_project_status",
                    "save_added",
                    "save_assign",
                    "save_project",
                    "save_reassign_project",
                    "save_report"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "project_grid_pp_2",
                  "children": [
                    {
                      "id": "8d2ace18-5a17-4e99-a539-7d9cec50efa1",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "field": "option.status",
                          "value": "Waiting to be Added"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onlyOwnDocuments": true,
                      "onErrorAction": "no-action",
                      "tag": "project_grid_pp_2_waiting_to_add_projects",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "c6945821-f7cf-4bf0-b8b2-4d24b4938497",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "field": "option.status",
                          "value": "Waiting to Validate"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onlyOwnDocuments": true,
                      "onErrorAction": "no-action",
                      "tag": "project_grid_pp_2_waiting_to_validate_projects",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "7f477271-a597-4720-a302-3797b475f237",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "title": "",
                          "name": "",
                          "tooltip": "",
                          "type": "equal",
                          "field": "option.status",
                          "value": "Validated"
                        },
                        {
                          "value": "approved_project",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onlyOwnDocuments": true,
                      "onErrorAction": "no-action",
                      "tag": "project_grid_pp_2_validated_projects",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "1e29b129-eabd-485b-9f9e-31694fd702c0",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "value": "project",
                          "field": "type",
                          "type": "equal"
                        },
                        {
                          "value": "Waiting to be Added,Waiting to Validate",
                          "field": "option.status",
                          "type": "not_in"
                        },
                        {
                          "value": "REJECTED",
                          "field": "option.status",
                          "type": "not_equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onlyOwnDocuments": true,
                      "onErrorAction": "no-action",
                      "tag": "project_grid_pp_2_validated_projects_own",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "28f7d748-7c85-423b-be5c-80baa7c0348d",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "project",
                          "field": "type",
                          "type": "equal"
                        },
                        {
                          "value": "Waiting to be Added,Waiting to Validate",
                          "field": "option.status",
                          "type": "not_in"
                        },
                        {
                          "value": "REJECTED",
                          "field": "option.status",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onlyOwnDocuments": true,
                      "tag": "project_grid_pp_2_rejected_projects_own",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "aa9e9737-c6ce-4deb-8fe1-1e3bb4e5390e",
                      "blockType": "historyAddon",
                      "defaultActive": false,
                      "permissions": [
                        "ANY_ROLE"
                      ],
                      "onErrorAction": "no-action",
                      "tag": "history_addon_4f31ccda-2486-4cc8-8c7b-647283e8f093",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "8e4c9ace-b039-4974-944c-a424e326e84d",
                      "blockType": "filtersAddon",
                      "defaultActive": true,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "options": [],
                        "title": "",
                        "content": "Project Name"
                      },
                      "type": "dropdown",
                      "queryType": "equal",
                      "field": "document.credentialSubject.0.project_details.G5",
                      "optionName": "document.credentialSubject.0.project_details.G5",
                      "optionValue": "document.credentialSubject.0.project_details.G5",
                      "canBeEmpty": true,
                      "tag": "filter_by_project",
                      "children": [
                        {
                          "id": "78cb35c8-ce5b-4416-9c25-a2d2df352dee",
                          "blockType": "documentsSourceAddon",
                          "defaultActive": false,
                          "permissions": [
                            "Project_Proponent"
                          ],
                          "onErrorAction": "no-action",
                          "filters": [],
                          "dataType": "vc-documents",
                          "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                          "tag": "project_grid_pp_2_projects",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "819d94e8-7d1d-43c1-a228-9b6fa1982e3f",
                      "blockType": "dataTransformationAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "expression": "(function calc() {\n  const jsons = [];\n  if (documents && documents.length > 0) {\n    documents.forEach((doc) => {\n      const document = doc.document;\n\n      const json = {\n        id: '',\n        projectNumber: null,\n        accountId: '',\n        standardTemplate: '',\n        standardTemplateName: '',\n        methodologyTemplateTitle: '',\n        methodologyTemplate: '',\n        projectName: '',\n        projectDescription: '',\n        website: null,\n        projectSubmissionStatus: 'Draft',\n        fetchProjectBoundaryFromCalculationInput: false,\n        estimatedProjectStartDate: '',\n        creditPeriod: {\n          startDate: '',\n          endDate: '',\n        },\n        projectSize: null,\n        averageAnnualVolume: null,\n        integratedModules: null,\n        integratedTools: null,\n        integratedMethodologies: null,\n        projectType: '14',\n        useManualCalculation: null,\n        locations: [],\n        projectProponents: [''],\n        projectProponentsWithDetails: null,\n        vcs: {\n          afoluActivities: [],\n          projectValidatorId: null,\n          additionalProjectTypes: [],\n          earlyAction: null,\n        },\n        ccb: {\n          ccbStandard: null,\n          ccbStandardName: null,\n          projectTypeId: null,\n          distinctions: [],\n          auditorSiteVisitStartDate: null,\n          auditorSiteVisitEndDate: null,\n          ccbVerifierList: [],\n          projectValidatorId: null,\n        },\n        sdVista: null,\n        plasticWRP: null,\n        registryDocumentUploadData: null,\n        calculationInputs: {\n          projectBoundaryProject: ['', '', '', '', '', '', '', '', '', ''],\n          projectBoundaryBaseline: ['', '', '', '', '', '', '', '', '', ''],\n        },\n        otherJsonContents: {\n          cover: {\n            version: '',\n            projectId: '',\n            dateOfIssue: '',\n            projectTitle: '',\n            projectWebsite: '',\n            projectLifeTime: {\n              endDate: null,\n              startDate: null,\n            },\n            standardVersion: '',\n            accountingPeriod: {\n              endDate: null,\n              startDate: null,\n            },\n            expectedSchedule: '',\n            projectProponent: '',\n            verificationBody: '',\n            goldLevelCriteria: '',\n            recentDateOfIssue: '',\n            ccbStandardVersion: '',\n            documentPreparedBy: '',\n            historyOfCcbStatus: '',\n            multipleProjectLocation: null,\n          },\n          climate: {\n            monitoring: {\n              monitorPlan: {\n                descriptionPlan: '',\n              },\n              monitoringPlanAndResult: {\n                monitoringDescription: '',\n              },\n              dataAndParameterForMonitoring: {\n                nerError: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                callochWps: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                areaStratum: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                submergence: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                vegetationCover: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                herbaceousProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                herbaceousBaseline: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                woodproductInventory: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                herbAnnualStockChange: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                projectstratumSoilTest: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                treeCarbonStockProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                abovegroundShrubBiomass: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                emissionProxyCh4Project: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                emissionProxyN2oProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                shrubCarbonStockProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                fireReductionPremiumData: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                ghgEmissionsProxyProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                projectfieldCollectedSoc: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                baselinefieldCollectedSoc: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                soilCarbonStockCh4Project: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                soilCarbonStockN2oProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                co2EmissionsProjectScenario: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                woodyaverageBaselineProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                herbAnnualStockChangeProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                ipccEmissionFactorCh4Project: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                ipccEmissionFactorN2oProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                herbAnnualStockChangeBaseline: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                generalinputsSoilInsituProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                generalinputsSoilErosionProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                generalinputsSoilExcavationProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                changeIncarbonStockTreeShrubProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                fieldCollectedAnnualSocChangeProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                fieldCollectedAnnualSocChangeBaseline: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n                co2EmissionsFromFossilFuelCombustionProject: {\n                  comments: '',\n                  sourceOfData: '',\n                  justification: '',\n                  purposeOfData: '',\n                  valuesApplied: '',\n                  qaOrQcProcedures: '',\n                  calculationMethod: '',\n                  monitoringEquipment: '',\n                  monitoringFrequency: '',\n                },\n              },\n              dataAndParameterForValidation: {},\n            },\n            quantification: {\n              socCapApproach: null,\n              projectBoundary: {\n                greenHouseGases: {\n                  project: null,\n                  baseline: null,\n                },\n              },\n              calculationSheet: null,\n              netGHGemissionCDR: '',\n              quantificationData: {\n                leakage: {\n                  generalText: null,\n                  ecologicalLeakage: null,\n                  activityShiftingLeakageAndMarketLeakage: null,\n                },\n                projectEmission: {\n                  generalText: null,\n                  generalApproach: null,\n                  accountingForSeaLevelRise: null,\n                  netGhgEmissionsAndRemovalsFromSoil: {\n                    general: null,\n                    netNonCo2Emissions: null,\n                    ch4EmissionsFromSoil: null,\n                    co2EmissionsFromSoil: {\n                      approach: null,\n                      deductionForAllochthonousCarbon: null,\n                    },\n                    n2oEmissionsFromSoil: null,\n                    emissionsFromFossilFuelUse: null,\n                  },\n                  netCarbonStockChangeInBiomassCarbonPoolsInProjectScenario:\n                    null,\n                },\n                baselineEmission: {\n                  generalText: null,\n                  generalApproach: null,\n                  accountingForSeaLevelRise: null,\n                  netGhgEmissionsFromSoilInBaselineScenario: {\n                    general: null,\n                    baseline: null,\n                    ch4EmissionsFromSoil: {\n                      emission: null,\n                      modeling: null,\n                      defaultFactors: null,\n                      emissionFactors: null,\n                      publishedValues: null,\n                      fieldCollectedData: null,\n                      proxyBasedApproach: null,\n                    },\n                    n2oEmissionsFromSoil: {\n                      emission: null,\n                      modeling: null,\n                      defaultFactors: null,\n                      emissionFactors: null,\n                      publishedValues: null,\n                      fieldCollectedData: null,\n                      proxyBasedApproach: null,\n                    },\n                    co2EmissionsFromErodedSoil: {\n                      emission: null,\n                      modeling: null,\n                      defaultFactors: null,\n                      publishedValues: null,\n                      fieldCollectedData: null,\n                      proxyBasedApproach: null,\n                      historicalDataOrChronosequences: null,\n                    },\n                    co2EmissionsFromSoilInSitu: {\n                      emission: null,\n                      modeling: null,\n                      defaultFactors: null,\n                      publishedValues: null,\n                      soilCH4Approach: {},\n                      soilN2OApproach: {},\n                      fieldCollectedData: null,\n                      proxyBasedApproach: null,\n                      soilInsituApproach: {},\n                      deductionForAllochthonousCarbon: null,\n                      historicalDataOrChronosequences: null,\n                    },\n                    co2EmissionsFromSoilExposed: {\n                      emission: null,\n                      modeling: null,\n                      defaultFactors: null,\n                      publishedValues: null,\n                      fieldCollectedData: null,\n                      proxyBasedApproach: null,\n                      historicalDataOrChronosequences: null,\n                    },\n                  },\n                  emissionsFromFossilFuelUseInBaselineScenario: null,\n                  netCarbonStockChangeInBiomassCarbonPoolsInBaselineScenario:\n                    null,\n                },\n                fireReductionPremium: null,\n                netGhgEmissionReductionsAndRemovals: {\n                  buffer: {},\n                  claimable: {},\n                  nerrweCap: {},\n                  nerrweMax: null,\n                  frpTextArea: {},\n                  creditingPeriod: {},\n                  fireReductionPremium: {},\n                  nerrweCapJustification: {},\n                  estimationOfUncertainty: null,\n                  calculationOfVerifiedCarbonUnits: null,\n                  fireReductionPremiumJustification: {},\n                  netGhgEmissionReductionDescription: null,\n                  calculationOfNetGhgEmissionsReductions: null,\n                },\n              },\n              ghgEmissionReduction: {\n                lta: {\n                  checkboxValue: '',\n                  textAreaValue: '',\n                },\n                loss: '',\n                benefit: '',\n                credits: {\n                  checkboxValue: '',\n                  textAreaValue: '',\n                },\n                harvesting: '',\n                riskRating: '',\n                riskReport: {\n                  checkboxValue: '',\n                  textAreaValue: '',\n                },\n              },\n              netGhgEmissionReduction: null,\n              calculationEngineSelection: '',\n              netGhgEmissionReductionYear: null,\n              emissionReductionFromStockLoss: null,\n              netGhgEmissionReductionInstance: null,\n              netGhgEmissionReductionsDifferencePercentOfProject: null,\n            },\n            optionalCriterion: {\n              goldLevelValidation: '',\n              climateChangeImpacts: '',\n              measuresNeededAndDesigned: '',\n              optionalCriterionGoldLevel: '',\n              regionalClimateChangeScenarios: '',\n            },\n            applicationOfMethodology: {\n              additionality: {\n                unfcc: '',\n                nonAnnex: '',\n                framework: '',\n                additionality: '',\n                projectMethod: '',\n                additionalityMethods: '',\n                nonAnnexNoExplanation: '',\n                nonAnnexYesExplanation: '',\n              },\n              projectBoundary: {\n                file: '',\n                fileText: '',\n                bufferZones: {},\n                socCapApproach: {},\n                stratification: '',\n                greenHouseGases: {\n                  project: [\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                  ],\n                  baseline: [\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                    {\n                      source: '',\n                      sources: [\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                        {\n                          gas: '',\n                          justification: '',\n                          justificationPlaceholder: '',\n                        },\n                      ],\n                      statusType: '',\n                    },\n                  ],\n                },\n                seaLevelProjection: '',\n                geographicBoundaries: '',\n                socCapApproachJustification: {},\n                emissionReductionFromStockLoss: null,\n                emissionReductionJustification: {},\n              },\n              baselineScenario: {\n                baselineScenario: '',\n                plausibleBaselineScenario: '',\n                reassessmentOfTheBaselineScenario: '',\n              },\n              methodologyDeviations: {\n                textareaInputValue: '',\n                radioButtonConditionValue: '',\n              },\n              applicationOfMethodology: {\n                projectArea: '',\n                liveTreeVegetation: '',\n                restoreTidalWetlands: '',\n                rewettingAndFireManagement: '',\n                threatOfFrequentOnSiteFires: '',\n                projectActivitiesCombination: '',\n                prescribedBurningOfHerbaceous: '',\n                afforestationReforestationRevegetation: '',\n              },\n              multipleMethodologyTitle: [\n                {\n                  type: '',\n                  title: '',\n                  version: '',\n                  referenceId: null,\n                  referenceCode: '',\n                },\n              ],\n              multipleApplicationOfMethodologies: {\n                amsic: {\n                  limits: '',\n                  biomass: '',\n                  leakage: '',\n                  charcoal: '',\n                  co_fired: '',\n                  retrofit: '',\n                  electricity: '',\n                  refrigerants: '',\n                  solidBiomass: '',\n                  thermalEnergy: '',\n                  capacitylimits: '',\n                  utilizesbiogas: '',\n                  emissionReductions: '',\n                  greenfieldProjects: '',\n                  projectParticipant: '',\n                  demonstrateMethodology: '',\n                },\n                amsid: {\n                  retrofit: '',\n                  renewable: '',\n                  case_biomass: '',\n                  co_generation: '',\n                  agro_industries: '',\n                  hydroPowerPlants: '',\n                  renewable_energy: '',\n                  applicableCondition: '',\n                  demonstrateMethodology: '',\n                },\n                amsie: {\n                  dieselGenerators: '',\n                  renewableBiomass: '',\n                  underMethodology: '',\n                  'describePDDPoA-DD': '',\n                  projectActivities: '',\n                  electricCookstoves: '',\n                  projectParticipants: '',\n                  demonstrateMethodology: '',\n                },\n                tool5: {\n                  electricityGenerated: null,\n                  electricityConsumption: null,\n                  notApplicableInCaptiveRenewable: '',\n                },\n                VM0008: {\n                  dwelling: '',\n                  categoryA: '',\n                  categoryB: '',\n                  categoryC: '',\n                  categoryD: '',\n                  geoRegion: '',\n                  modelling: '',\n                  coolingSystem: '',\n                  weatherization: '',\n                  vacancyPermitted: '',\n                  capacityOfAppliance: '',\n                  applicableConditions: '',\n                  demonstarateActivity: '',\n                  performanceBenchmark: '',\n                  replacementAppliances: '',\n                },\n                am0009: {\n                  additional: '',\n                  applicabilityStepOne: '',\n                  applicabilityStepSix: '',\n                  applicabilityStepTwo: '',\n                  applicabilityStepFive: '',\n                  applicabilityStepFour: '',\n                  applicabilityStepThree: '',\n                  demonstrateMethodology: '',\n                  demonstrateMethodology1: '',\n                },\n                am0023: {\n                  applicable: '',\n                  combinedTool: '',\n                  notApplicable: '',\n                  demonstrateMethodology: '',\n                  finalApplicableCondiiton: '',\n                },\n                amsiig: {\n                  cookstoves: '',\n                  biomassCases: '',\n                  nonRenewable: '',\n                  aggregateEnergy: '',\n                  emissionReductions1: '',\n                  emissionReductions2: '',\n                },\n                custom: {\n                  projectActivityHelpText: '',\n                },\n                tool16: {\n                  applicability: '',\n                  biomassResidues: '',\n                  forestPlantation: '',\n                  projectActivities: '',\n                },\n                tool18: {\n                  urbanPassengerTransport: '',\n                  estimatingBaselineEmissions: null,\n                },\n                tool30: {\n                  applicability: '',\n                },\n                tool33: {\n                  applicability: '',\n                  baselineEmission: '',\n                },\n                vm0001: {\n                  dataSystems: '',\n                  hvacSystems: '',\n                  HFCLeakageRates: '',\n                  refrigerantCharge: '',\n                  infraRedInstallation: '',\n                  refrigerationSystems: '',\n                  withinThUnitedStates: '',\n                },\n                vm0003: {\n                  forestManagement: '',\n                  thereMayBeNoLeakage: '',\n                  forestsMustBeCertifiedBy: '',\n                  forestsWhichAreNotSubject: '',\n                  projectProponentsMustHave: '',\n                  ifFireIsUsedAsPartOfForest: '',\n                  theProjectDoesNotEncompass: '',\n                  projectProponentsMustDefine: '',\n                },\n                vm0010: {\n                  projectScenario: '',\n                  baselineScenario: '',\n                  forestManagement: '',\n                  limitedToActivities: '',\n                  forestLandBoundaries: '',\n                  demonstrateMethodology: '',\n                  forestInventoryMethods: '',\n                  applicabilityConditions: '',\n                },\n                vm0033: {\n                  ifmOrRedd: '',\n                  projectArea: '',\n                  commercialForestry: '',\n                  liveTreeVegetation: '',\n                  lowerTheWaterTable: '',\n                  nitrogenFertilizer: '',\n                  ifmOrapplicableRedd: '',\n                  burningOfOrganicSoil: '',\n                  restoreTidalWetlands: '',\n                  applicabilityConditions: '',\n                  hydrologicalConnectivity: '',\n                  rewettingAndFireManagement: '',\n                  threatOfFrequentOnSiteFires: '',\n                  projectActivitiesCombination: '',\n                  prescribedBurningOfHerbaceous: '',\n                  afforestationReforestationRevegetation: '',\n                },\n                vm0038: {\n                  ownership: '',\n                  evCharging: '',\n                  annualEmission: '',\n                  doubleCounting: '',\n                  applicableFleets: '',\n                  projectProponents: '',\n                  applicableFleetsDesc: '',\n                },\n                vm0041: {\n                  feedIngredient: '',\n                  manureEmissions: '',\n                  ruminantAnimals: '',\n                  projectProponent: '',\n                  emissionReductions: '',\n                  livestockProducers: '',\n                  entericFermentation: '',\n                  demonstrateMethodology: '',\n                },\n                vm0042: {\n                  notApplicable: {\n                    wetLand: '',\n                    peerReviewed: '',\n                    projectModelWetland: '',\n                    projectModelSimulations: '',\n                  },\n                  nativeEcosystems: '',\n                  sustainedReduction: '',\n                  croplandOrGrassland: '',\n                  agriculturalManagement: '',\n                  demonstrateMethodology: '',\n                },\n                vm0043: {\n                  co2Source: '',\n                  co2Emission: '',\n                  concreteProduce: '',\n                  concreteMaterial: '',\n                  readyMixConcrete: '',\n                  recycledConcrete: '',\n                  concreteManufacture: '',\n                  supplementaryMaterial: '',\n                },\n                vm0044: {\n                  otherEvidence: '',\n                  feedstockDecay: '',\n                  projectActivity: '',\n                  theWasteBiomass: '',\n                  mineralAdditives: '',\n                  theFeedstockUsed: '',\n                  feedstockImported: '',\n                  lowOrHighTechnology: '',\n                  nonSoilApplications: '',\n                  soilAmendmentOnLand: '',\n                  theBiocharProducers: '',\n                  feedstockPurelyGrown: '',\n                  methodologyIsApplicable: '',\n                  projectActivityHelpText: '',\n                  theFeedstockUsedHelpText: '',\n                  methodologyNotAppliedSoil: '',\n                  methodologyNotAppliedBiochar: '',\n                  methodologyNotAppliedNonSoil: '',\n                  biocharIsEligibleToBeUtilized: '',\n                  biocharMadeFromASingleOrMixed: '',\n                  projectProponentsMustDemonstrate: '',\n                },\n                vm0045: {\n                  applicable: {\n                    location: '',\n                    netCarbonEmissions: '',\n                  },\n                  notApplicable: {\n                    frequency: '',\n                    hydrology: '',\n                    deadWoodStocks: '',\n                  },\n                  demonstrateMethodology: '',\n                },\n                vm0047: {\n                  file: '',\n                  areaBased: {\n                    hectareText: '',\n                    herbivoryText: '',\n                    projectActivitieshectare: '',\n                    projectActivitiesherbivory: '',\n                  },\n                  tidalText: '',\n                  censusBased: {\n                    censusText: '',\n                    biomassText: '',\n                    contiguousText: '',\n                    attestationText: '',\n                    identifiableText: '',\n                    regenerationText: '',\n                    soilDisturbanceText: '',\n                    projectActivitiesCensus: '',\n                    projectActivitiesBiomass: '',\n                    projectActivitiesContiguous: '',\n                    projectActivitiesAttestation: '',\n                    projectActivitiesDisturbance: '',\n                    projectActivitiesIdentifiable: '',\n                    projectActivitiesRegeneration: '',\n                  },\n                  justification: '',\n                  fileJustification: '',\n                  justificationText: '',\n                  approachJustification: '',\n                  demonstrateMethodology: '',\n                  projectActivitiesTidal: '',\n                  projectActivityIncrease: '',\n                  projectActivitiesOrganic: '',\n                  projectActivitiesOrganicText: '',\n                  projectActivitiesPreparation: '',\n                  projectActivityJustification: '',\n                  afforestationReforestationRevegetation: '',\n                },\n                vm0048: {\n                  reddActivities: '',\n                  reddApplicability: '',\n                },\n                vm0049: {\n                  vm0049: {\n                    conditionOne: {\n                      regulations: '',\n                      refrigeration: '',\n                      sequestration: '',\n                      projectactivity: '',\n                      captureactivities: '',\n                      storageactivities: '',\n                      globallyApplicable: '',\n                      transportactivities: '',\n                    },\n                    conditionTwo: {\n                      divertco2: '',\n                      captureco2: '',\n                      extractCo2: '',\n                      produceco2: '',\n                      utilization: '',\n                      reduceEnergy: '',\n                    },\n                  },\n                  bioenergy: {\n                    conditionOne: {\n                      transportLeg: '',\n                      projectactivity: '',\n                    },\n                  },\n                  airCapture: {\n                    conditionOne: {\n                      projectactivity: '',\n                      captureactivities: '',\n                      storageactivities: '',\n                      transportactivities: '',\n                    },\n                    conditionTwo: {\n                      projectactivity: '',\n                      captureactivities: '',\n                    },\n                  },\n                  airStorage: {\n                    conditionOne: {\n                      salineAquifers: '',\n                      projectactivity: '',\n                      captureactivities: '',\n                      transportactivities: '',\n                    },\n                    conditionTwo: {\n                      enhancedGas: '',\n                      storageSite: '',\n                      projectactivity: '',\n                      captureactivities: '',\n                    },\n                  },\n                  airTransport: {\n                    conditionOne: {\n                      transportLeg: '',\n                      projectactivity: '',\n                      captureactivities: '',\n                      transportactivities: '',\n                    },\n                    conditionTwo: {\n                      upgrades: '',\n                      projectactivity: '',\n                      captureactivities: '',\n                    },\n                  },\n                  applicableFleets: '',\n                },\n                vm0050: {\n                  notes: '',\n                  retrofit: '',\n                  lpgComply: '',\n                  renewable: '',\n                  singlePot: '',\n                  fuelSwitch: '',\n                  regulations: '',\n                  replacement: '',\n                  distribution: '',\n                  projectDevices: '',\n                  reduceEmission: '',\n                  biomassResidues: '',\n                  electricProject: '',\n                  energyEfficienty: '',\n                  renewableBiomass: '',\n                  targetPopulation: '',\n                  demonstrateMethod: '',\n                  productionProcess: '',\n                  renewableCharcoal: '',\n                  electricitySources: '',\n                  inefficientBaseline: '',\n                  projectDevicesTextArea: '',\n                  projectActivityDropdownone: '',\n                  projectActivityDropdowntwo: '',\n                },\n                vmfood: {\n                  normalText: '',\n                  firstCondition: '',\n                  thirdCondition: '',\n                  secondCondition: '',\n                },\n                acm0001: {\n                  SWDS: '',\n                  kiln: '',\n                  manure: '',\n                  justify: '',\n                  network: '',\n                  instance: '',\n                  crediting: '',\n                  releaseLFG: '',\n                  farmsManure: '',\n                  farmsLivestock: '',\n                  anaerobicLagoons: '',\n                  demonstrateMethodology: '',\n                },\n                acm0003: {\n                  manure: '',\n                  farmsManure: '',\n                  farmsLivestock: '',\n                  anaerobicLagoons: '',\n                  demonstrateMethodology: '',\n                },\n                acm0006: {\n                  manure: '',\n                  bioMass: '',\n                  fossilFuels: '',\n                  projectPlant: '',\n                  biomassResidues: '',\n                  biomassChemically: '',\n                  demonstrateMethodology: '',\n                },\n                acm0008: {\n                  methane: '',\n                  castmines: '',\n                  farmsManure: '',\n                  methanediluted: '',\n                  surfacedrainage: '',\n                  destructionofcbm: '',\n                  emissionReduction: '',\n                  applicableCondition: '',\n                  demonstrateMethodology: '',\n                },\n                acm0010: {\n                  aWMS: '',\n                  manure: '',\n                  farmsManure: '',\n                  annualAverage: '',\n                  farmsLivestock: '',\n                  anaerobicLagoons: '',\n                  minimumRetention: '',\n                  ' anaerobicTreatment': '',\n                  demonstrateMethodology: '',\n                  applicabilityConditions: '',\n                },\n                amsiiid: {\n                  projectScenario: '',\n                  baselineScenario: '',\n                  forestManagement: '',\n                  limitedToActivities: '',\n                  livestockPopulation: '',\n                  forestLandBoundaries: '',\n                  demonstrateMethodology: '',\n                  forestInventoryMethods: '',\n                  applicabilityConditions: '',\n                },\n                amsiiig: {\n                  swds: '',\n                  landfillGas: '',\n                  organicWaste: '',\n                  projectScenario: '',\n                  baselineScenario: '',\n                  aggregateEmission: '',\n                  forestLandBoundaries: '',\n                  demonstrateMethodology: '',\n                  applicabilityConditions: '',\n                },\n                vmd0055: {\n                  condition: {\n                    applicableFleets: '',\n                    projectProponent: '',\n                    demonstrateMethodology: '',\n                  },\n                  conditionOne: {\n                    wetlands: '',\n                    agriculture: '',\n                    doubleCounting: '',\n                    wetlandvegetation: '',\n                    applicabilityConditions: '',\n                  },\n                },\n                vmr0006: {\n                  biomass: '',\n                  normalText: '',\n                  energyLevel: '',\n                  mediumSized: '',\n                  gridConnected: '',\n                  renewableBiomass: '',\n                  integrationofaBESS: '',\n                  moreThanOneBiomass: '',\n                  applicabilityYConditions: '',\n                },\n                amsiiibm: {\n                  projectScenario: '',\n                  baselineScenario: '',\n                  forestManagement: '',\n                  integrationofaBESS: '',\n                  limitedToActivities: '',\n                  forestLandBoundaries: '',\n                  demonstrateMethodology: '',\n                  forestInventoryMethods: '',\n                  applicabilityConditions: '',\n                },\n                pwrm0001: {\n                  output: null,\n                  result: null,\n                  weight: null,\n                  plastic: null,\n                  sources: null,\n                  activity: null,\n                  disposed: null,\n                  material: null,\n                  movement: null,\n                  collection: null,\n                  description: null,\n                  destinations: null,\n                  demonstrateMethodology: '',\n                },\n                pwrm0002: {\n                  stream: null,\n                  compete: null,\n                  measure: null,\n                  imported: null,\n                  recycled: null,\n                  available: null,\n                  feedstock: null,\n                  hazardous: null,\n                  activities: null,\n                  mechanical: null,\n                  description: null,\n                  contamination: null,\n                  depolymerization: null,\n                  demonstrateMethodology: '',\n                },\n                acm0003v9: {\n                  efficiency: '',\n                  fossilFuel: '',\n                  biomassProcess: '',\n                  biomassResidues: '',\n                  projectActivities: '',\n                  demonstrateMethodology: '',\n                },\n                acm0002v21: {\n                  hydroPower: '',\n                  gridConnected: '',\n                  hydroPowerPlant: '',\n                  integrationofaBESS: '',\n                  applicabilityCondition: '',\n                  demonstrateMethodology: '',\n                  methodologyNotApplicable: '',\n                  integratedHydroPowerPlant: '',\n                  retrofitsReplacementsCapacityAdditions: '',\n                },\n                acm0002v22: {\n                  psp: '',\n                  hydroPower: '',\n                  gridConnected: '',\n                  hydroPowerPlant: '',\n                  integrationofaBESS: '',\n                  projectActivityType: '',\n                  applicabilityCondition: '',\n                  demonstrateMethodology: '',\n                  methodologyNotApplicable: '',\n                  integratedHydroPowerPlant: '',\n                  powerGenerationTechnology: '',\n                  retrofitsReplacementsCapacityAdditions: '',\n                },\n              },\n              notApplicableApplicationOfMethodology: {\n                ifmOrRedd: '',\n                commercialForestry: '',\n                lowerTheWaterTable: '',\n                nitrogenFertilizer: '',\n                burningOfOrganicSoil: '',\n                hydrologicalConnectivity: '',\n              },\n            },\n          },\n          appendix: {\n            file: '',\n            appendixList: [\n              {\n                code: '',\n                file: '',\n                title: '',\n                canRemove: null,\n                description: '',\n              },\n            ],\n            projectRisksTable: [\n              {\n                risk: '',\n                impact: '',\n                actions: '',\n                riskIdentified: '',\n              },\n              {\n                risk: '',\n                impact: '',\n                actions: '',\n                riskIdentified: '',\n              },\n              {\n                risk: '',\n                impact: '',\n                actions: '',\n                riskIdentified: '',\n              },\n            ],\n            identificationTable: [\n              {\n                stakeholder: '',\n                relevanceToTheProject: '',\n                stakeholder_placeholder: '',\n              },\n            ],\n            theoryOfChangeTable: [\n              {\n                impacts: '',\n                outputs: '',\n                outcomes: '',\n                objectives: '',\n                expectedClimate: [\n                  {\n                    impacts: '',\n                    outputs: '',\n                    outcomes: '',\n                  },\n                ],\n                activityDescription: '',\n              },\n            ],\n            calculationOutputList: '',\n            commerciallySensitive: [\n              {\n                section: '',\n                information: '',\n                justifocation: '',\n              },\n            ],\n          },\n          community: {\n            withoutProject: {\n              highConservationValues: {\n                highConservationValue: [\n                  {\n                    focalArea: '',\n                    qualifyingAttribute: '',\n                    focalArea_placeholder: '',\n                    highConservationValue: '',\n                    qualifyingAttribute_placeholder: '',\n                    highConservationValue_placeholder: '',\n                  },\n                ],\n              },\n              withoutProjectScenario: '',\n              descriptionsOfCommunities: '',\n              communitiesAndCommunityGroups: '',\n            },\n            impactMonitoring: {\n              communityMonitoringPlan: '',\n              monitoringPlanDissemination: '',\n            },\n            stakeholderImpact: {\n              impactsOnStakeholders: '',\n              netImpactsOnStakeholders: '',\n              mitigationOfNegativeImpacts: '',\n            },\n            exceptionalBenefits: {\n              benefits: '',\n              governance: '',\n              development: '',\n              communication: '',\n              impactOnWoman: '',\n              benefitSharing: [\n                {\n                  process: '',\n                  description: '',\n                  placeholder: '',\n                },\n                {\n                  process: '',\n                  description: '',\n                  placeholder: '',\n                },\n                {\n                  process: '',\n                  description: '',\n                  placeholder: '',\n                },\n              ],\n              marginalizedGroups: {\n                impact: [\n                  {\n                    benefitAccess: '',\n                    communityGroup: '',\n                    negativeImpacts: '',\n                    netPostiveImpacts: '',\n                    benefitAccess_placeholder: '',\n                    communityGroup_placeholder: '',\n                    negativeImpacts_placeholder: '',\n                    netPostiveImpacts_placeholder: '',\n                  },\n                ],\n              },\n              participationRisks: '',\n              exceptionalCriteria: '',\n              goldLevelValidation: '',\n              benefitSharingTextBox: '',\n              optionalCriterionGoldLevel: '',\n            },\n            netPositiveCommunity: {\n              conservationValues: '',\n              netPositiveCommunity: '',\n              negativeCommunityImpact: '',\n              expectedCommunityImpacts: {\n                impact: [\n                  {\n                    impacts: '',\n                    communityGroup: '',\n                    changeInWellbeing: '',\n                    impacts_placeholder: '',\n                    'typeOfBenefit/Cost/Risk': '',\n                    communityGroup_placeholder: '',\n                    changeInWellbeing_placeholder: '',\n                    'typeOfBenefit/Cost/Risk_placeholder': '',\n                  },\n                ],\n              },\n            },\n          },\n          biodiversity: {\n            offsiteImpacts: {\n              negativeImpacts: {\n                impacts: [\n                  {\n                    offsite: '',\n                    mitigation: '',\n                  },\n                ],\n              },\n              netOffsiteBenefits: '',\n            },\n            positiveImpacts: {\n              speciesUsed: [\n                {\n                  species: '',\n                  mitigation: '',\n                  justification: '',\n                  classification: '',\n                },\n              ],\n              gmoExclusion: '',\n              wasteProducts: '',\n              expectedChanges: {\n                expectedChanges: [\n                  {\n                    estimatedChange: '',\n                    biodiversityElement: '',\n                    justificationOfChange: '',\n                    estimatedChange_placeholder: '',\n                    biodiversityElement_placeholder: '',\n                  },\n                ],\n              },\n              invasiveSpecies: [\n                {\n                  species: '',\n                  mitigation: '',\n                },\n              ],\n              speciesInvasive: null,\n              mitigationMeasures: '',\n              netPositiveImpacts: '',\n              inputsJustification: {\n                inputs: [\n                  {\n                    name: '',\n                    name_placeholder: '',\n                    justificationOfUse: '',\n                    potentialAdverseEffect: '',\n                    justificationOfUse_placeholder: '',\n                    potentialAdverseEffect_placeholder: '',\n                  },\n                ],\n                inputsTextarea: '',\n              },\n              highConservationValues: '',\n              impactsOfNonNativeSpecies: {\n                impact: [\n                  {\n                    species: '',\n                    justificationOfUse: '',\n                    potentialAdverseEffect: '',\n                  },\n                ],\n                impactTextarea: '',\n              },\n              expectedBiodiversityChanges: '',\n              negativeBiodiversityImpacts: '',\n            },\n            impactMonitoring: {\n              monitoringPlan: '',\n              monitoringPlanDissemination: '',\n            },\n            exceptionalBenefits: {\n              optionalCriterion: '',\n              goldLevelValidation: '',\n              conservationPriorityStatus: '',\n              optionalCriterionGoldLevel: '',\n              triggerSpeciesPopulationTrends: {\n                triggerPopulation: [\n                  {\n                    triggerSpecies: '',\n                    populationTrend: '',\n                    withProjectScenario: '',\n                    withoutProjectScenario: '',\n                    triggerSpecies_placeholder: '',\n                    populationTrend_placeholder: '',\n                    withProjectScenario_placeholder: '',\n                    withoutProjectScenario_placeholder: '',\n                  },\n                ],\n              },\n            },\n            biodiversityScenario: {\n              conditions: '',\n              speciesAndHabit: {\n                speciesTable: [\n                  {\n                    process: '',\n                    procedure: '',\n                    process_placeholder: '',\n                    procedure_placeholder: '',\n                  },\n                ],\n              },\n              conservationValues: {\n                highConservationValue: [\n                  {\n                    focalArea: '',\n                    qualifyingAttribute: '',\n                    focalArea_placeholder: '',\n                    highConservationValue: '',\n                    qualifyingAttribute_placeholder: '',\n                    highConservationValue_placeholder: '',\n                  },\n                ],\n              },\n              withoutProjectScenario: '',\n              speciesAndHabittextArea: '',\n              highConservationValueTextArea: '',\n            },\n          },\n          projectDetails: {\n            doubleClaiming: {\n              doubleClaimingPrograms: {\n                emissions: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                supplyChain: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                noDoubleClaiming: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                environmentalCredit: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                supplyChainProjectProponent: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n              },\n            },\n            otherInformation: {\n              participationUnderOtherGhcPrograms: {\n                doubleIssuance: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                projectsRejected: null,\n                projectsRegistered: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                projectsUnderProgram: {\n                  textareaInputValue: '',\n                  radioButtonConditionValue: '',\n                },\n                projectsRejectedTextArea: null,\n              },\n            },\n            managementCapacity: {\n              financialHealth: '',\n              avoidanceOfCorruption: '',\n              requiredTechnicalSkills: '',\n              managementTeamExperience: '',\n              projectGovernanceStructures: '',\n              projectManagementPartnership: '',\n              commerciallySensitiveInformation: '',\n            },\n            additionalInformation: {\n              leakageManagement: '',\n              furtherInformation: '',\n            },\n            stakeholderEngagement: {\n              workerTraining: '',\n              commentReceived: {\n                commentReceived: [\n                  {\n                    summary: '',\n                    actionsNeeded: '',\n                    commentReceived: '',\n                    summary_placeholder: '',\n                    actionsNeeded_placeholder: '',\n                  },\n                ],\n              },\n              risksFromProject: '',\n              stakeholderChannel: '',\n              communityEmployment: '',\n              informationalMeeting: '',\n              siteVisitInformation: '',\n              continuedConsultation: '',\n              accessibilityOfFeedback: '',\n              stakeholderConsultation: {\n                stakeholderConsultation: [\n                  {\n                    date: '',\n                    input: '',\n                    outcome: '',\n                    process: '',\n                    date_placeholder: '',\n                    input_placeholder: '',\n                    outcome_placeholder: '',\n                    process_placeholder: '',\n                  },\n                ],\n                stakeholderConsultationTextBox: '',\n              },\n              stakeholderDescriptions: '',\n              feedbackGrievanceRedress: {\n                feedbackGrievance: '',\n                feedbackGrievanceRedress: [\n                  {\n                    process: '',\n                    procedure: '',\n                    process_placeholder: '',\n                    procedure_placeholder: '',\n                  },\n                ],\n              },\n              informationToStakeholder: '',\n              stakeholderParticipation: '',\n              stakeholderIdentification: '',\n              antiDiscriminationAssurance: '',\n              occupationalSafetyAssessment: '',\n              communityCostsRisksSAndBenefits: '',\n              stakeholderAccessToProjectDocuments: '',\n              disseminationOfSummaryProjectDocuments: '',\n            },\n            legalStatusAndPropertyRights: {\n              approvals: '',\n              freeConsent: {\n                freeConsent: [\n                  {\n                    status: '',\n                    process: '',\n                    placeholder: '',\n                  },\n                  {\n                    status: '',\n                    process: '',\n                    placeholder: '',\n                  },\n                ],\n              },\n              humanRights: '',\n              relevantLaws: '',\n              benefitSharing: {\n                benefitSharing: [\n                  {\n                    status: '',\n                    process: '',\n                    placeholder: '',\n                  },\n                  {\n                    status: '',\n                    process: '',\n                    placeholder: '',\n                  },\n                  {\n                    status: '',\n                    process: '',\n                    placeholder: '',\n                  },\n                ],\n              },\n              ongoingDisputes: '',\n              indigenousPeople: '',\n              nationalAndLocalLaws: '',\n              statutoryPropertyRights: '',\n              propertyRightsProtection: '',\n              recognitionOfPropertyRights: '',\n              illegalActivityIdentification: '',\n            },\n            withoutProjectLandUseScenario: {\n              benefitsToBeUsedAsOffsets: '',\n              mostLikelyScenarioJustification: '',\n              landUseScenariosWithoutTheProject: '',\n              communityAndBiodiversityAdditionality: '',\n            },\n            projectGoalsDesignAndViability: {\n              kmlFile: null,\n              auditHistory: '',\n              projectScale: '',\n              justification: '',\n              projectZoneMap: '',\n              projectIndicate: '',\n              projectOwnership: '',\n              projectProponent: null,\n              projectStartDate: '',\n              socialParameters: '',\n              benefitPermanence: '',\n              risksToTheProject: {\n                risks: [\n                  {\n                    date: '',\n                    impacts: '',\n                    actionsNeeded: '',\n                  },\n                ],\n                riskstextarea: null,\n              },\n              generalEligibility: '',\n              physicalParameters: '',\n              projectDetailsTable: null,\n              transferEligibility: '',\n              groupedProjectDesign: '',\n              projectLocationAreas: '',\n              sectoralScopeDetails: {\n                projectType: '',\n                sectoralScope: '14',\n                projectCategory: '',\n              },\n              projectConfigurations: '',\n              projectZoneMapKmlFile: null,\n              ImplementationSchedule: {\n                implementation: [\n                  {\n                    date: '',\n                    milestone: '',\n                  },\n                ],\n                implementationTextArea: null,\n              },\n              sustainableDevelopment: '',\n              differencesInAssessment: '',\n              financialSustainability: '',\n              creditingPeriodJustifyText: '',\n              ccbBenefitsAssessmentPeriod: '',\n              summaryDescriptionOfTheProject: '',\n              otherEntitiesInvolvedInTheProject: null,\n              projectActivitiesAndTheoryOfChange: '',\n              benefitsAssessmentAndCreditingPeriod: {\n                period: null,\n                endDate: null,\n                startDate: null,\n                description: '',\n                checkBoxOption: null,\n                annualAverageErs: null,\n                totalEstimatedErs: null,\n                totalNumberOfYears: null,\n                projectCreditingYears: null,\n              },\n              CCBbenefitsAssessmentAndCreditingPeriod: {\n                startDate: '',\n                creditingPeriod: '',\n                ccbbenefitsAssessmentPeriod: '',\n              },\n            },\n          },\n          summaryOfProjectBenefits: {\n            summary: '',\n            uniqueBenefits: [\n              {\n                outCome: '',\n                section: '',\n              },\n            ],\n            standardizedBenefits: [\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n                footNotes: {\n                  1: '',\n                  2: '',\n                  3: '',\n                },\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n                footNotes: {\n                  4: '',\n                },\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n                footNotes: {\n                  5: '',\n                  6: '',\n                },\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n                footNotes: {\n                  7: '',\n                },\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n                footNotes: {\n                  8: '',\n                },\n              },\n              {\n                metrics: [\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                  {\n                    metric: '',\n                    section: '',\n                    estimate: '',\n                    achievementProjectLifeTime: '',\n                    achievementMonitoringPeriod: '',\n                  },\n                ],\n                category: '',\n                footNotes: {\n                  9: '',\n                  10: '',\n                  11: '',\n                },\n              },\n            ],\n          },\n        },\n      };\n\n      function setDeepValue(obj, path, value) {\n        const keys = path.split('.');\n        let curr = obj;\n        for (let i = 0; i < keys.length - 1; i++) {\n          if (!(keys[i] in curr)) curr[keys[i]] = {};\n          curr = curr[keys[i]];\n        }\n        curr[keys[keys.length - 1]] = value;\n      }\n\n      setDeepValue(\n        json,\n        'accountId',\n        document.credentialSubject[0]?.project_details?.project_hub_account_id,\n      );\n      setDeepValue(\n        json,\n        'methodologyTemplateTitle',\n        document.credentialSubject[0]?.project_details?.G296[0].G7,\n      );\n      setDeepValue(\n        json,\n        'methodologyTemplate',\n        document.credentialSubject[0]?.project_details?.G296[0].G6,\n      );\n      setDeepValue(\n        json,\n        'projectName',\n        document.credentialSubject[0]?.project_details?.G5,\n      );\n      setDeepValue(\n        json,\n        'projectDescription',\n        document.credentialSubject[0]?.project_details?.registry_vcs\n          ?.vcs_project_description,\n      );\n      setDeepValue(\n        json,\n        'website',\n        document.credentialSubject[0]?.project_details?.G7,\n      );\n      setDeepValue(\n        json,\n        'estimatedProjectStartDate',\n        document.credentialSubject[0]?.project_details?.G175,\n      );\n      setDeepValue(\n        json,\n        'creditPeriod.startDate',\n        document.credentialSubject[0]?.project_details?.G179,\n      );\n      setDeepValue(\n        json,\n        'creditPeriod.endDate',\n        document.credentialSubject[0]?.project_details?.G180,\n      );\n      setDeepValue(\n        json,\n        'projectSize',\n        document.credentialSubject[0]?.project_details?.G185,\n      );\n      // setDeepValue(\n      //   json,\n      //   'projectType',\n      //   document.credentialSubject[0]?.project_details?.G143.G7,\n      // );\n      // TODO: Will need to update this when project hub fixes bug with G40[0]\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.version',\n        document.credentialSubject[0]?.project_details?.G16,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.projectId',\n        document.credentialSubject[0]?.project_details?.G6,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.dateOfIssue',\n        document.credentialSubject[0]?.project_details?.G14,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.projectTitle',\n        document.credentialSubject[0]?.project_details?.G5,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.projectWebsite',\n        document.credentialSubject[0]?.project_details?.G7,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.projectLifeTime.endDate',\n        document.credentialSubject[0]?.project_details?.G8.G6,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.projectLifeTime.startDate',\n        document.credentialSubject[0]?.project_details?.G8.G5,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.standardVersion',\n        document.credentialSubject[0]?.project_details?.G17,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.accountingPeriod.endDate',\n        document.credentialSubject[0]?.project_details?.G11.G6,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.accountingPeriod.startDate',\n        document.credentialSubject[0]?.project_details?.G11.G5,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.expectedSchedule',\n        document.credentialSubject[0]?.project_details?.G44,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.projectProponent',\n        document.credentialSubject[0]?.project_details?.G40,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.verificationBody',\n        document.credentialSubject[0]?.project_details?.G41,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.goldLevelCriteria',\n        document.credentialSubject[0]?.project_details?.G43,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.recentDateOfIssue',\n        document.credentialSubject[0]?.project_details?.G15,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.ccbStandardVersion',\n        document.credentialSubject[0]?.project_details?.G18,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.documentPreparedBy',\n        document.credentialSubject[0]?.project_details?.G45,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.cover.historyOfCcbStatus',\n        document.credentialSubject[0]?.project_details?.G42,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.monitoring.monitorPlan.descriptionPlan',\n        document.credentialSubject[0]?.project_details?.G737,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.monitoring.monitoringPlanAndResult.monitoringDescription',\n        document.credentialSubject[0]?.project_details?.G739,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.leakage.ecologicalLeakage',\n        document.credentialSubject[0]?.project_details?.G401,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.leakage.activityShiftingLeakageAndMarketLeakage',\n        document.credentialSubject[0]?.project_details?.G400,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.generalApproach',\n        document.credentialSubject[0]?.project_details?.G387,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.accountingForSeaLevelRise',\n        document.credentialSubject[0]?.project_details?.G388,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.general',\n        document.credentialSubject[0]?.project_details?.G391,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.netNonCo2Emissions',\n        document.credentialSubject[0]?.project_details?.G397,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.ch4EmissionsFromSoil',\n        document.credentialSubject[0]?.project_details?.G395,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.co2EmissionsFromSoil.approach',\n        document.credentialSubject[0]?.project_details?.G393,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.co2EmissionsFromSoil.deductionForAllochthonousCarbon',\n        document.credentialSubject[0]?.project_details?.G394,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.n2oEmissionsFromSoil',\n        document.credentialSubject[0]?.project_details?.G396,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netGhgEmissionsAndRemovalsFromSoil.emissionsFromFossilFuelUse',\n        document.credentialSubject[0]?.project_details?.G398,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.projectEmission.netCarbonStockChangeInBiomassCarbonPoolsInProjectScenario',\n        document.credentialSubject[0]?.project_details?.G389,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.generalApproach',\n        document.credentialSubject[0]?.project_details?.G341,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.accountingForSeaLevelRise',\n        document.credentialSubject[0]?.project_details?.G342,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.general',\n        document.credentialSubject[0]?.project_details?.G345,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.baseline',\n        document.credentialSubject[0]?.project_details?.G344,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.emission',\n        document.credentialSubject[0]?.project_details?.G371,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.modeling',\n        document.credentialSubject[0]?.project_details?.G375,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.defaultFactors',\n        document.credentialSubject[0]?.project_details?.G374,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.emissionFactors',\n        document.credentialSubject[0]?.project_details?.G376,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.publishedValues',\n        document.credentialSubject[0]?.project_details?.G373,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.proxyBasedApproach',\n        document.credentialSubject[0]?.project_details?.G372,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.emission',\n        document.credentialSubject[0]?.project_details?.G377,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.modeling',\n        document.credentialSubject[0]?.project_details?.G383,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.defaultFactors',\n        document.credentialSubject[0]?.project_details?.G382,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.emissionFactors',\n        document.credentialSubject[0]?.project_details?.G384,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.publishedValues',\n        document.credentialSubject[0]?.project_details?.G381,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.fieldCollectedData',\n        document.credentialSubject[0]?.project_details?.G380,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.n2oEmissionsFromSoil.proxyBasedApproach',\n        document.credentialSubject[0]?.project_details?.G379,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.emission',\n        document.credentialSubject[0]?.project_details?.G355,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.modeling',\n        document.credentialSubject[0]?.project_details?.G359,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.defaultFactors',\n        document.credentialSubject[0]?.project_details?.G358,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.publishedValues',\n        document.credentialSubject[0]?.project_details?.G357,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.fieldCollectedData',\n        document.credentialSubject[0]?.project_details?.G360,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.proxyBasedApproach',\n        document.credentialSubject[0]?.project_details?.G356,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromErodedSoil.historicalDataOrChronosequences',\n        document.credentialSubject[0]?.project_details?.G361,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.emission',\n        document.credentialSubject[0]?.project_details?.G346,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.modeling',\n        document.credentialSubject[0]?.project_details?.G351,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.defaultFactors',\n        document.credentialSubject[0]?.project_details?.G350,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.publishedValues',\n        document.credentialSubject[0]?.project_details?.G349,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.fieldCollectedData',\n        document.credentialSubject[0]?.project_details?.G352,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.proxyBasedApproach',\n        document.credentialSubject[0]?.project_details?.G348,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.deductionForAllochthonousCarbon',\n        document.credentialSubject[0]?.project_details?.G354,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.historicalDataOrChronosequences',\n        document.credentialSubject[0]?.project_details?.G353,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.emission',\n        document.credentialSubject[0]?.project_details?.G362,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.modeling',\n        document.credentialSubject[0]?.project_details?.G368,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.defaultFactors',\n        document.credentialSubject[0]?.project_details?.G367,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.publishedValues',\n        document.credentialSubject[0]?.project_details?.G366,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.fieldCollectedData',\n        document.credentialSubject[0]?.project_details?.G365,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.proxyBasedApproach',\n        document.credentialSubject[0]?.project_details?.G364,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilExposed.historicalDataOrChronosequences',\n        document.credentialSubject[0]?.project_details?.G370,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.emissionsFromFossilFuelUseInBaselineScenario',\n        document.credentialSubject[0]?.project_details?.G385,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.baselineEmission.netCarbonStockChangeInBiomassCarbonPoolsInBaselineScenario',\n        document.credentialSubject[0]?.project_details?.G343,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.fireReductionPremium',\n        document.credentialSubject[0]?.project_details?.G372,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.calculationOfNetGhgEmissionsReductions',\n        document.credentialSubject[0]?.project_details?.G403,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.optionalCriterion.goldLevelValidation',\n        document.credentialSubject[0]?.project_details?.G741,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.optionalCriterion.climateChangeImpacts',\n        document.credentialSubject[0]?.project_details?.G745,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.optionalCriterion.measuresNeededAndDesigned',\n        document.credentialSubject[0]?.project_details?.G746,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.optionalCriterion.regionalClimateChangeScenarios',\n        document.credentialSubject[0]?.project_details?.G744,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.additionality.unfcc',\n        document.credentialSubject[0]?.project_details?.G330,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.additionality.framework',\n        document.credentialSubject[0]?.project_details?.G331,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.additionality.projectMethod',\n        document.credentialSubject[0]?.project_details?.G335,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.additionality.additionalityMethods',\n        document.credentialSubject[0]?.project_details?.G334,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.projectBoundary.stratification',\n        document.credentialSubject[0]?.project_details?.G322,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.projectBoundary.seaLevelProjection',\n        document.credentialSubject[0]?.project_details?.G323,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.projectBoundary.geographicBoundaries',\n        document.credentialSubject[0]?.project_details?.G321,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.projectBoundary.fileText',\n        document.credentialSubject[0]?.project_details?.buffer_zones_add_text,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.baselineScenario.baselineScenario',\n        document.credentialSubject[0]?.project_details?.G325,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.baselineScenario.plausibleBaselineScenario',\n        document.credentialSubject[0]?.project_details?.G326,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.baselineScenario.reassessmentOfTheBaselineScenario',\n        document.credentialSubject[0]?.project_details?.G327,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.methodologyDeviations.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G337,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.projectArea',\n        document.credentialSubject[0]?.project_details?.G306,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.liveTreeVegetation',\n        document.credentialSubject[0]?.project_details?.G307,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.restoreTidalWetlands',\n        document.credentialSubject[0]?.project_details?.G304,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.rewettingAndFireManagement',\n        document.credentialSubject[0]?.project_details?.G309,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.threatOfFrequentOnSiteFires',\n        document.credentialSubject[0]?.project_details?.G310,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.projectActivitiesCombination',\n        document.credentialSubject[0]?.project_details?.G305,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.prescribedBurningOfHerbaceous',\n        document.credentialSubject[0]?.project_details?.G308,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.applicationOfMethodology.afforestationReforestationRevegetation',\n        document.credentialSubject[0]?.project_details?.G311,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.notApplicableApplicationOfMethodology.ifmOrRedd',\n        document.credentialSubject[0]?.project_details?.G313,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.notApplicableApplicationOfMethodology.commercialForestry',\n        document.credentialSubject[0]?.project_details?.G314,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.notApplicableApplicationOfMethodology.lowerTheWaterTable',\n        document.credentialSubject[0]?.project_details?.G315,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.notApplicableApplicationOfMethodology.nitrogenFertilizer',\n        document.credentialSubject[0]?.project_details?.G318,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.notApplicableApplicationOfMethodology.burningOfOrganicSoil',\n        document.credentialSubject[0]?.project_details?.G316,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.notApplicableApplicationOfMethodology.hydrologicalConnectivity',\n        document.credentialSubject[0]?.project_details?.G317,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.general.projectGoalsDesignAndViability.projectStartDate',\n        document.credentialSubject[0]?.project_details?.G179,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.general.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.period',\n        document.credentialSubject[0]?.project_details?.G181,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.general.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.endDate',\n        document.credentialSubject[0]?.project_details?.G180,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.general.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.startDate',\n        document.credentialSubject[0]?.project_details?.G179,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.general.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.checkBoxOption',\n        document.credentialSubject[0]?.project_details?.G178,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.withoutProject.withoutProjectScenario',\n        document.credentialSubject[0]?.project_details?.G756,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.withoutProject.descriptionsOfCommunities',\n        document.credentialSubject[0]?.project_details?.G749,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.withoutProject.communitiesAndCommunityGroups',\n        document.credentialSubject[0]?.project_details?.G750,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.impactMonitoring.communityMonitoringPlan',\n        document.credentialSubject[0]?.project_details?.G772,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.impactMonitoring.monitoringPlanDissemination',\n        document.credentialSubject[0]?.project_details?.G773,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.stakeholderImpact.impactsOnStakeholders',\n        document.credentialSubject[0]?.project_details?.G768,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.stakeholderImpact.netImpactsOnStakeholders',\n        document.credentialSubject[0]?.project_details?.G770,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.stakeholderImpact.mitigationOfNegativeImpacts',\n        document.credentialSubject[0]?.project_details?.G769,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.netPositiveCommunity.conservationValues',\n        document.credentialSubject[0]?.project_details?.G766,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.netPositiveCommunity.netPositiveCommunity',\n        document.credentialSubject[0]?.project_details?.G765,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.community.netPositiveCommunity.negativeCommunityImpact',\n        document.credentialSubject[0]?.project_details?.G764,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.offsiteImpacts.netOffsiteBenefits',\n        document.credentialSubject[0]?.project_details?.G838,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.gmoExclusion',\n        document.credentialSubject[0]?.project_details?.G826,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.wasteProducts',\n        document.credentialSubject[0]?.project_details?.G832,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.speciesInvasive',\n        document.credentialSubject[0]?.project_details?.G822,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.mitigationMeasures',\n        document.credentialSubject[0]?.project_details?.G813,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.netPositiveImpacts',\n        document.credentialSubject[0]?.project_details?.G814,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.inputsJustification.inputsTextarea',\n        document.credentialSubject[0]?.project_details?.G827,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.highConservationValues',\n        document.credentialSubject[0]?.project_details?.G815,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.expectedBiodiversityChanges',\n        document.credentialSubject[0]?.project_details?.G807,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.positiveImpacts.negativeBiodiversityImpacts',\n        document.credentialSubject[0]?.project_details?.G834,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.impactMonitoring.monitoringPlan',\n        document.credentialSubject[0]?.project_details?.G840,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.impactMonitoring.monitoringPlanDissemination',\n        document.credentialSubject[0]?.project_details?.G841,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.biodiversityScenario.withoutProjectScenario',\n        document.credentialSubject[0]?.project_details?.G805,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.biodiversityScenario.speciesAndHabittextArea',\n        document.credentialSubject[0]?.project_details?.G796,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.biodiversity.biodiversityScenario.highConservationValueTextArea',\n        document.credentialSubject[0]?.project_details?.G800,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.emissions.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G286,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.supplyChain.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G286,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.supplyChain.textareaInputValue',\n        document.credentialSubject[0]?.project_details\n          ?.supplychain_textareainputvalue,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.noDoubleClaiming.textareaInputValue',\n        document.credentialSubject[0]?.project_details?.G281,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.emissions.textareaInputValue',\n        document.credentialSubject[0]?.project_details?.emissions_textarea,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.emissions.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.emissions_checkbox,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.noDoubleClaiming.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G280,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.environmentalCredit.textareaInputValue',\n        document.credentialSubject[0]?.project_details?.G284,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.environmentalCredit.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G283,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.doubleIssuance.textareaInputValue',\n        document.credentialSubject[0]?.project_details?.G270,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.doubleIssuance.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G269,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.projectsRejected',\n        document.credentialSubject[0]?.project_details?.G276,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.projectsRegistered.textareaInputValue',\n        document.credentialSubject[0]?.project_details?.G273,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.projectsRegistered.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G272,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.projectsUnderProgram.radioButtonConditionValue',\n        document.credentialSubject[0]?.project_details?.G274,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.otherInformation.participationUnderOtherGhcPrograms.projectsRejectedTextArea',\n        document.credentialSubject[0]?.project_details?.G277,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.financialHealth',\n        document.credentialSubject[0]?.project_details?.G246,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.avoidanceOfCorruption',\n        document.credentialSubject[0]?.project_details?.G247,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.requiredTechnicalSkills',\n        document.credentialSubject[0]?.project_details?.G243,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.managementTeamExperience',\n        document.credentialSubject[0]?.project_details?.G244,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.projectGovernanceStructures',\n        document.credentialSubject[0]?.project_details?.G242,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.projectManagementPartnership',\n        document.credentialSubject[0]?.project_details?.G245,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.managementCapacity.commerciallySensitiveInformation',\n        document.credentialSubject[0]?.project_details?.G248,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.additionalInformation.leakageManagement',\n        document.credentialSubject[0]?.project_details?.G291,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.additionalInformation.furtherInformation',\n        document.credentialSubject[0]?.project_details?.G292,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.workerTraining',\n        document.credentialSubject[0]?.project_details?.G238,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.risksFromProject',\n        document.credentialSubject[0]?.project_details?.G215,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.stakeholderChannel',\n        document.credentialSubject[0]?.project_details?.G230,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.communityEmployment',\n        document.credentialSubject[0]?.project_details?.G239,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.informationalMeeting',\n        document.credentialSubject[0]?.project_details?.G214,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.siteVisitInformation',\n        document.credentialSubject[0]?.project_details?.G218,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.continuedConsultation',\n        document.credentialSubject[0]?.project_details?.G229,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.accessibilityOfFeedback',\n        document.credentialSubject[0]?.project_details?.G237,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.stakeholderConsultation.stakeholderConsultationTextBox',\n        document.credentialSubject[0]?.project_details?.G219,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.stakeholderDescriptions',\n        document.credentialSubject[0]?.project_details?.G211,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.feedbackGrievanceRedress.feedbackGrievance',\n        document.credentialSubject[0]?.project_details?.G233,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.stakeholderParticipation',\n        document.credentialSubject[0]?.project_details?.G231,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.stakeholderIdentification',\n        document.credentialSubject[0]?.project_details?.G210,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.antiDiscriminationAssurance',\n        document.credentialSubject[0]?.project_details?.G232,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.occupationalSafetyAssessment',\n        document.credentialSubject[0]?.project_details?.G240,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.communityCostsRisksSAndBenefits',\n        document.credentialSubject[0]?.project_details?.G216,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.stakeholderAccessToProjectDocuments',\n        document.credentialSubject[0]?.project_details?.G212,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.disseminationOfSummaryProjectDocuments',\n        document.credentialSubject[0]?.project_details?.G213,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.approvals',\n        document.credentialSubject[0]?.project_details?.G266,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.humanRights',\n        document.credentialSubject[0]?.project_details?.G252,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.relevantLaws',\n        document.credentialSubject[0]?.project_details?.G251,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.ongoingDisputes',\n        document.credentialSubject[0]?.project_details?.G265,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.indigenousPeople',\n        document.credentialSubject[0]?.project_details?.G253,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.nationalAndLocalLaws',\n        document.credentialSubject[0]?.project_details?.G250,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.statutoryPropertyRights',\n        document.credentialSubject[0]?.project_details?.G254,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.propertyRightsProtection',\n        document.credentialSubject[0]?.project_details?.G263,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.recognitionOfPropertyRights',\n        document.credentialSubject[0]?.project_details?.G255,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.legalStatusAndPropertyRights.illegalActivityIdentification',\n        document.credentialSubject[0]?.project_details?.G264,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.withoutProjectLandUseScenario.benefitsToBeUsedAsOffsets',\n        document.credentialSubject[0]?.project_details?.G208,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.withoutProjectLandUseScenario.mostLikelyScenarioJustification',\n        document.credentialSubject[0]?.project_details?.G206,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.withoutProjectLandUseScenario.landUseScenariosWithoutTheProject',\n        document.credentialSubject[0]?.project_details?.G205,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.withoutProjectLandUseScenario.communityAndBiodiversityAdditionality',\n        document.credentialSubject[0]?.project_details?.G207,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectScale',\n        document.credentialSubject[0]?.project_details?.G185 ==\n          '< 300,000 tCO2e/year (project)'\n          ? 'project'\n          : 'largeProject',\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.justification',\n        document.credentialSubject[0]?.project_details?.G176,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectZoneMap',\n        document.credentialSubject[0]?.project_details?.G188,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectOwnership',\n        document.credentialSubject[0]?.project_details?.G173,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectStartDate',\n        document.credentialSubject[0]?.project_details?.G179,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.socialParameters',\n        document.credentialSubject[0]?.project_details?.G187,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.benefitPermanence',\n        document.credentialSubject[0]?.project_details?.G202,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.risksToTheProject.riskstextarea',\n        document.credentialSubject[0]?.project_details?.G197,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.generalEligibility',\n        document.credentialSubject[0]?.project_details?.G147,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.physicalParameters',\n        document.credentialSubject[0]?.project_details?.G186,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.transferEligibility',\n        document.credentialSubject[0]?.project_details?.G149,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.groupedProjectDesign',\n        document.credentialSubject[0]?.project_details?.G153,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.sectoralScopeDetails.projectType',\n        document.credentialSubject[0]?.project_details?.G143.G7,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.stakeholderEngagement.informationToStakeholder',\n        document.credentialSubject[0]?.project_details?.G217,\n      );\n\n      // setDeepValue(\n      //   json,\n      //   'otherJsonContents.projectDetails.projectGoalsDesignAndViability.sectoralScopeDetails.sectoralScope',\n      //   document.credentialSubject[0]?.project_details?.G143.G5,\n      // );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.sectoralScopeDetails.projectCategory',\n        document.credentialSubject[0]?.project_details?.G143.G6,\n      );\n\n      let projectConfigurations = '';\n      if (\n        document.credentialSubject[0]?.project_details?.G151 ===\n        'Grouped project'\n      )\n        projectConfigurations = 'groupedProject';\n      else if (\n        document.credentialSubject[0]?.project_details?.G151 ===\n        'Single location or installation'\n      )\n        projectConfigurations = 'singleLocation';\n      else if (\n        document.credentialSubject[0]?.project_details?.G151 ===\n        'Multiple locations or project activity instances (but not a grouped project)'\n      )\n        projectConfigurations = 'multipleLocations';\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectConfigurations',\n        projectConfigurations,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.ImplementationSchedule.implementationTextArea',\n        document.credentialSubject[0]?.project_details?.G193,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.sustainableDevelopment',\n        document.credentialSubject[0]?.project_details?.G192,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.differencesInAssessment',\n        document.credentialSubject[0]?.project_details?.G184,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.financialSustainability',\n        document.credentialSubject[0]?.project_details?.G203,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.creditingPeriodJustifyText',\n        document.credentialSubject[0]?.project_details?.G182,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.ccbBenefitsAssessmentPeriod',\n        document.credentialSubject[0]?.project_details?.G183,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.summaryDescriptionOfTheProject',\n        document.credentialSubject[0]?.project_details?.G132,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.period',\n        document.credentialSubject[0]?.project_details?.G181,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.endDate',\n        document.credentialSubject[0]?.project_details?.G180,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.startDate',\n        document.credentialSubject[0]?.project_details?.G179,\n      );\n      setDeepValue(\n        json,\n        'otherJsonContents.projectDetails.projectGoalsDesignAndViability.benefitsAssessmentAndCreditingPeriod.checkBoxOption',\n        document.credentialSubject[0]?.project_details?.G178,\n      );\n\n      const project_details = document.credentialSubject[0].project_details;\n\n      json.standardTemplate = 'vcs+ccb.v4.4';\n      json.standardTemplateName =\n        'VCS+CCB Project Description (VCS v4.4, CCB v3.0) v4.4';\n      json.methodologyTemplateTitle =\n        'Methodology for Tidal Wetland and Seagrass Restoration';\n      json.methodologyTemplate = 'VM0033';\n\n      json.otherJsonContents.appendix.projectRisksTable = [];\n      for (let i = 0; i < project_details?.G863?.length; i++) {\n        const appendix = {};\n        const g863Element = project_details?.G863[i];\n\n        appendix.risk = g863Element.G6;\n        appendix.impact = g863Element.G7;\n        appendix.actions = g863Element.G8;\n        appendix.riskIdentified = g863Element.G5;\n\n        json.otherJsonContents.appendix.projectRisksTable.push(appendix);\n      }\n\n      json.otherJsonContents.summaryOfProjectBenefits.uniqueBenefits = [];\n      for (let i = 0; i < project_details?.G48?.length; i++) {\n        const uniqueBenefits = {};\n        const g48Element = project_details?.G48[i];\n        uniqueBenefits.outCome = g48Element.G5;\n        uniqueBenefits.section = g48Element.G6;\n\n        json.otherJsonContents.summaryOfProjectBenefits.uniqueBenefits.push(\n          uniqueBenefits,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.auditHistory =\n        [];\n      for (let i = 0; i < project_details?.G135?.length; i++) {\n        const auditHistory = {};\n        const g135Element = project_details?.G135[i];\n\n        auditHistory.year = g135Element.G10;\n        auditHistory.vvbKey = g135Element.G11;\n        auditHistory.endDate = g135Element.G7;\n        auditHistory.vvbValue = g135Element.G9;\n        auditHistory.startDate = g135Element.G6;\n        auditHistory.programKey = g135Element.G8;\n        auditHistory.auditTypeKey = g135Element.G5;\n        auditHistory.programValue = g135Element.G8;\n        auditHistory.auditTypeValue = g135Element.G5;\n\n        json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.auditHistory.push(\n          auditHistory,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.ImplementationSchedule.implementation =\n        [];\n      for (let i = 0; i < project_details?.G194?.length; i++) {\n        const implementation = {};\n        const g194Element = project_details?.G194[i];\n        implementation.date = g194Element.G5;\n        implementation.milestone = g194Element.G6;\n\n        json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.ImplementationSchedule.implementation.push(\n          implementation,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.risksToTheProject.risks =\n        [];\n      for (let i = 0; i < project_details?.G198?.length; i++) {\n        const risks = {};\n        const g198Element = project_details?.G198[i];\n        risks.risk = g198Element.G5;\n        risks.impacts = g198Element.G6;\n        risks.actionsNeeded = g198Element.G7;\n\n        json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.risksToTheProject.risks.push(\n          risks,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectProponent =\n        [];\n      for (let i = 0; i < project_details?.G155?.length; i++) {\n        const projectProponent = {};\n        const g155Element = project_details?.G155[i];\n\n        projectProponent.id = null;\n        projectProponent.email = null;\n        projectProponent.title = null;\n        projectProponent.address = null;\n        projectProponent.isPrimary = null;\n        projectProponent.telephone = null;\n        projectProponent.contactPerson = null;\n        projectProponent.organizationName = null;\n\n        json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectProponent.push(\n          projectProponent,\n        );\n      }\n\n      json.projectProponentsWithDetails = [];\n      for (let i = 0; i < project_details?.G155?.length; i++) {\n        const projectProponentsWithDetails = {};\n        const g155Element = project_details?.G155[i];\n\n        projectProponentsWithDetails.id = g155Element.project_proponent_id;\n        projectProponentsWithDetails.organizationName = g155Element.G5;\n        projectProponentsWithDetails.title = g155Element.G7;\n        projectProponentsWithDetails.roleInTheProject =\n          g155Element.role_in_project;\n        projectProponentsWithDetails.telephone = g155Element.G9;\n        projectProponentsWithDetails.email = g155Element.G10;\n        projectProponentsWithDetails.contactPerson = g155Element.G6;\n        projectProponentsWithDetails.address = g155Element.G8;\n        projectProponentsWithDetails.isPrimary = g155Element.is_primary;\n\n        json.projectProponentsWithDetails.push(projectProponentsWithDetails);\n      }\n\n      json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.otherEntitiesInvolvedInTheProject =\n        [];\n      for (let i = 0; i < project_details?.G164?.length; i++) {\n        const otherEntitiesInvolvedInTheProject = {};\n        const g164Element = project_details?.G164[i];\n\n        otherEntitiesInvolvedInTheProject.id = g164Element.other_entity_id;\n        otherEntitiesInvolvedInTheProject.email = g164Element.G11;\n        otherEntitiesInvolvedInTheProject.title = g164Element.G8;\n        otherEntitiesInvolvedInTheProject.address = g164Element.G9;\n        otherEntitiesInvolvedInTheProject.isPrimary = g164Element.is_primary;\n        otherEntitiesInvolvedInTheProject.telephone = g164Element.G10;\n        otherEntitiesInvolvedInTheProject.contactPerson = g164Element.G7;\n        otherEntitiesInvolvedInTheProject.organizationName = g164Element.G5;\n        otherEntitiesInvolvedInTheProject.roleInTheProject = g164Element.G6;\n\n        json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.otherEntitiesInvolvedInTheProject.push(\n          otherEntitiesInvolvedInTheProject,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.stakeholderEngagement.feedbackGrievanceRedress.feedbackGrievanceRedress =\n        [];\n      for (let i = 0; i < project_details?.G234?.length; i++) {\n        const feedbackGrievanceRedress = {};\n        const g234Element = project_details?.G234[i];\n\n        feedbackGrievanceRedress.process = g234Element.G6;\n        feedbackGrievanceRedress.procedure = g234Element.G7;\n\n        json.otherJsonContents.projectDetails.stakeholderEngagement.feedbackGrievanceRedress.feedbackGrievanceRedress.push(\n          feedbackGrievanceRedress,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.stakeholderEngagement.stakeholderConsultation.stakeholderConsultation =\n        [];\n      for (let i = 0; i < project_details?.G220?.length; i++) {\n        const stakeholderConsultation = {};\n        const g220Element = project_details?.G220[i];\n\n        stakeholderConsultation.date = g220Element.G5;\n        stakeholderConsultation.input = g220Element.G8;\n        stakeholderConsultation.outcome = g220Element.G7;\n        stakeholderConsultation.process = g220Element.G6;\n\n        json.otherJsonContents.projectDetails.stakeholderEngagement.stakeholderConsultation.stakeholderConsultation.push(\n          stakeholderConsultation,\n        );\n      }\n\n      json.otherJsonContents.projectDetails.stakeholderEngagement.commentReceived.commentReceived =\n        [];\n      for (let i = 0; i < project_details?.G225?.length; i++) {\n        const commentReceived = {};\n        const g225Element = project_details?.G225[i];\n\n        commentReceived.summary = g225Element.G5;\n        commentReceived.actionsNeeded = g225Element.G7;\n        commentReceived.commentReceived = g225Element.G6;\n\n        json.otherJsonContents.projectDetails.stakeholderEngagement.commentReceived.commentReceived.push(\n          commentReceived,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.biodiversityScenario.conservationValues.highConservationValue =\n        [];\n      for (let i = 0; i < project_details?.G801?.length; i++) {\n        const highConservationValue = {};\n        const g801Element = project_details?.G801[i];\n\n        highConservationValue.focalArea = g801Element.G7;\n        highConservationValue.qualifyingAttribute = g801Element.G6;\n        highConservationValue.highConservationValue = g801Element.G5;\n\n        json.otherJsonContents.biodiversity.biodiversityScenario.conservationValues.highConservationValue.push(\n          highConservationValue,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.biodiversityScenario.speciesAndHabit.speciesTable =\n        [];\n      for (let i = 0; i < project_details?.G797?.length; i++) {\n        const speciesTable = {};\n        const g797Element = project_details?.G797[i];\n\n        speciesTable.process = g797Element.G5;\n        speciesTable.procedure = g797Element.G6;\n\n        json.otherJsonContents.biodiversity.biodiversityScenario.speciesAndHabit.speciesTable.push(\n          speciesTable,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.positiveImpacts.inputsJustification.inputs =\n        [];\n      for (let i = 0; i < project_details?.G828?.length; i++) {\n        const inputsJustification = {};\n        const g828Element = project_details?.G828[i];\n\n        inputsJustification.name = g828Element.G5;\n        inputsJustification.justificationOfUse = g828Element.G6;\n        inputsJustification.potentialAdverseEffect = g828Element.G7;\n\n        json.otherJsonContents.biodiversity.positiveImpacts.inputsJustification.inputs.push(\n          inputsJustification,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.positiveImpacts.invasiveSpecies = [];\n      for (let i = 0; i < project_details?.G823?.length; i++) {\n        const invasiveSpecies = {};\n        const g823Element = project_details?.G823[i];\n\n        invasiveSpecies.species = g823Element.G5;\n        invasiveSpecies.mitigation = g823Element.G6;\n\n        json.otherJsonContents.biodiversity.positiveImpacts.invasiveSpecies.push(\n          invasiveSpecies,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.positiveImpacts.expectedChanges.expectedChanges =\n        [];\n      for (let i = 0; i < project_details?.G809?.length; i++) {\n        const expectedChanges = {};\n        const g809Element = project_details?.G809[i];\n\n        expectedChanges.estimatedChange = g809Element.G6;\n        expectedChanges.biodiversityElement = g809Element.G5;\n        expectedChanges.justificationOfChange = g809Element.G7;\n\n        json.otherJsonContents.biodiversity.positiveImpacts.expectedChanges.expectedChanges.push(\n          expectedChanges,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.positiveImpacts.speciesUsed = [];\n      for (let i = 0; i < project_details?.G817?.length; i++) {\n        const speciesUsed = {};\n        const g817Element = project_details?.G817[i];\n\n        speciesUsed.species = g817Element.G5;\n        speciesUsed.mitigation = g817Element.G8;\n        speciesUsed.justification = g817Element.G7;\n        speciesUsed.classification = g817Element.G6;\n\n        json.otherJsonContents.biodiversity.positiveImpacts.speciesUsed.push(\n          speciesUsed,\n        );\n      }\n\n      json.otherJsonContents.biodiversity.offsiteImpacts.negativeImpacts.impacts =\n        [];\n      for (let i = 0; i < project_details?.G835?.length; i++) {\n        const impacts = {};\n        const g835Element = project_details?.G835[i];\n\n        impacts.offsite = g835Element.G5;\n        impacts.mitigation = g835Element.G6;\n\n        json.otherJsonContents.biodiversity.offsiteImpacts.negativeImpacts.impacts.push(\n          impacts,\n        );\n      }\n\n      json.otherJsonContents.community.netPositiveCommunity.expectedCommunityImpacts.impact =\n        [];\n      for (let i = 0; i < project_details?.G759?.length; i++) {\n        const impact = {};\n        const g759Element = project_details?.G759[i];\n\n        impact.impacts = g759Element.G6;\n        impact.communityGroup = g759Element.G5;\n        impact.changeInWellbeing = g759Element.G8;\n        impact['typeOfBenefit/Cost/Risk'] = g759Element.G7;\n\n        json.otherJsonContents.community.netPositiveCommunity.expectedCommunityImpacts.impact.push(\n          impact,\n        );\n      }\n\n      json.otherJsonContents.community.withoutProject.highConservationValues.highConservationValue =\n        [];\n      for (let i = 0; i < project_details?.G752?.length; i++) {\n        const highConservationValue = {};\n        const g752Element = project_details?.G752[i];\n\n        highConservationValue.focalArea = g752Element.G7;\n        highConservationValue.qualifyingAttribute = g752Element.G6;\n        highConservationValue.highConservationValue = g752Element.G5;\n\n        json.otherJsonContents.community.withoutProject.highConservationValues.highConservationValue.push(\n          highConservationValue,\n        );\n      }\n\n      json.otherJsonContents.appendix.commerciallySensitive = [];\n      for (let i = 0; i < project_details?.G869?.length; i++) {\n        const commerciallySensitive = {};\n        const g869Element = project_details?.G869[i];\n\n        commerciallySensitive.section = g869Element.G5;\n        commerciallySensitive.information = g869Element.G6;\n        commerciallySensitive.justifocation = g869Element.G7;\n\n        json.otherJsonContents.appendix.commerciallySensitive.push(\n          commerciallySensitive,\n        );\n      }\n\n      json.otherJsonContents.appendix.theoryOfChangeTable = [];\n      for (let i = 0; i < project_details?.G856?.length; i++) {\n        const theoryOfChangeTable = {};\n        const g856Element = project_details?.G856[i];\n\n        theoryOfChangeTable.objectives = g856Element.G9;\n        theoryOfChangeTable.activityDescription = g856Element.G5;\n        theoryOfChangeTable.expectedClimate = [];\n\n        const expectedClimate = {\n          impacts: '',\n          outputs: '',\n          outcomes: '',\n        };\n\n        theoryOfChangeTable.expectedClimate.push(expectedClimate);\n        theoryOfChangeTable.impacts = g856Element.G8;\n        theoryOfChangeTable.outputs = g856Element.G6;\n        theoryOfChangeTable.outcomes = g856Element.G7;\n\n        json.otherJsonContents.appendix.theoryOfChangeTable.push(\n          theoryOfChangeTable,\n        );\n      }\n\n      json.otherJsonContents.community.exceptionalBenefits.marginalizedGroups.impact =\n        [];\n      project_details?.marginalized_vulnerable_community_group?.forEach(\n        (item) => {\n          const group = {\n            benefitAccess: item.G7,\n            communityGroup: item.G5,\n            negativeImpacts: item.G8,\n            netPostiveImpacts: item.G6,\n          };\n\n          json.otherJsonContents.community.exceptionalBenefits.marginalizedGroups.impact.push(\n            group,\n          );\n        },\n      );\n\n      json.otherJsonContents.biodiversity.positiveImpacts.impactsOfNonNativeSpecies =\n        {};\n      json.otherJsonContents.biodiversity.positiveImpacts.impactsOfNonNativeSpecies.impact =\n        [];\n      json.otherJsonContents.biodiversity.positiveImpacts.impactsOfNonNativeSpecies.impactTextarea =\n        null;\n      project_details?.G877?.forEach((item) => {\n        const impact = {\n          species: null,\n          justificationOfUse: null,\n          potentialAdverseEffect: null,\n        };\n        json.otherJsonContents.biodiversity.positiveImpacts.impactsOfNonNativeSpecies.impact.push(\n          impact,\n        );\n      });\n\n      json.otherJsonContents.appendix.identificationTable = [];\n      for (let i = 0; i < project_details?.G852.length; i++) {\n        const identificationTable = {};\n        const g852Element = project_details?.G852[i];\n\n        identificationTable.stakeholder = g852Element.G5;\n        identificationTable.relevanceToTheProject = g852Element.G6;\n\n        json.otherJsonContents.appendix.identificationTable.push(\n          identificationTable,\n        );\n      }\n\n      json.otherJsonContents.climate.applicationOfMethodology.multipleMethodologyTitle =\n        [];\n      for (let i = 0; i < project_details?.G296.length; i++) {\n        const multipleMethodologyTitle = {};\n        const g296Element = project_details?.G296[i];\n\n        multipleMethodologyTitle.type = g296Element.G5;\n        multipleMethodologyTitle.title = g296Element.G7;\n        multipleMethodologyTitle.version = g296Element.G8;\n        multipleMethodologyTitle.referenceId = g296Element.G6;\n        multipleMethodologyTitle.referenceCode =\n          g296Element.meth_reference_code;\n\n        json.otherJsonContents.climate.applicationOfMethodology.multipleMethodologyTitle.push(\n          multipleMethodologyTitle,\n        );\n      }\n\n      //METRICS\n      const standardizedBenefits = [];\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Net estimated emission removals in the project area, measured against the without-project scenario ',\n            section: project_details?.G56,\n            estimate: project_details?.G55,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Net estimated emission reductions in the project area, measured against the without-project scenario',\n            section: project_details?.G59,\n            estimate: project_details?.G58,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'GHG emission reductions & removals',\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'For REDD<sup>2</sup> projects: Estimated number of hectares of reduced forest loss in the project area measured against the without-project scenario',\n            section: project_details?.G63,\n            estimate: project_details?.G62,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'For ARR<sup>3</sup> projects: Estimated number of hectares of forest cover increased in the project area measured against the without-project scenario',\n            section: project_details?.G66,\n            estimate: project_details?.G65,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: \"Forest<sup class='value-color'>1</sup> cover\",\n        footNotes: {\n          1: 'Land with woody vegetation that meets an internationally accepted definition (e.g., UNFCCC, FAO or IPCC) of what constitutes a forest, which includes threshold parameters, such as minimum forest area, tree height and level of crown cover, and may include mature, secondary, degraded and wetland forests (VCS Program Definitions)',\n          2: 'Reduced emissions from deforestation and forest degradation (REDD) - Activities that reduce GHG emissions by slowing or stopping conversion of forests to non-forest land and/or reduce the degradation of forest land where forest biomass is lost (VCS Program Definitions)',\n          3: 'Afforestation, reforestation and revegetation (ARR) - Activities that increase carbon stocks in woody biomass (and in some cases soils) by establishing, increasing and/or restoring vegetative cover through the planting, sowing and/or human-assisted natural regeneration of woody vegetation (VCS Program Definitions)',\n        },\n      });\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Number of hectares of existing production forest land in which IFM<sup>4</sup> practices have occurred as a result of the projects activities, measured against the without-project scenario',\n            section: project_details?.G70,\n            estimate: project_details?.G69,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of hectares of non-forest land in which improved land management has occurred as a result of the projects activities, measured against the without-project scenario',\n            section: project_details?.G73,\n            estimate: project_details?.G72,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Improved land management',\n        footNotes: {\n          4: 'Improved forest management (IFM) - Activities that change forest management practices and increase carbon stock on forest lands managed for wood products such as saw timber, pulpwood and fuelwood (VCS Program Definitions)',\n        },\n      });\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of community members who have improved skills and/or knowledge resulting from training provided as part of project activities',\n            section: project_details?.G77,\n            estimate: project_details?.G76,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of female community members who are expected to have improved skills and/or knowledge resulting from training as part of project activities ',\n            section: project_details?.G80,\n            estimate: project_details?.G79,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Training',\n      });\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of people employed in of project activities,<sup>5</sup> expressed as number of full time employees<sup>6</sup>',\n            section: project_details?.G84,\n            estimate: project_details?.G83,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of women employed in project activities, expressed as number of full time employees',\n            section: project_details?.G87,\n            estimate: project_details?.G86,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Employment',\n        footNotes: {\n          5: 'Employed in project activities means people directly working on project activities in return for compensation (financial or otherwise), including employees, contracted workers, sub-contracted workers and community members that are paid to carry out project-related work.',\n          6: '  Full time equivalency is calculated as the total number of hours worked (by full-time, part-time, temporary and/or seasonal staff) divided by the average number of hours worked in full-time jobs within the country, region or economic territory (adapted from the UN System of National Accounts (1993) paragraphs 17.14[15.102];[17.28])',\n        },\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of people with improved livelihoods<sup>7</sup> or income generated as a result of project activities',\n            section: project_details?.G91,\n            estimate: project_details?.G90,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of women expected to have improved livelihoods or income generated as a result of project activities',\n            section: project_details?.G94,\n            estimate: project_details?.G93,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Livelihoods',\n        footNotes: {\n          7: 'Livelihoods are the capabilities, assets (including material and social resources) and activities required for a means of living (Krantz, Lasse, 2001. The Sustainable Livelihood Approach to Poverty Reduction. SIDA). Livelihood benefits may include benefits reported in the Employment metrics of this table.',\n        },\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of people for whom health services were improved as a result of project activities, measured against the without-project scenario',\n            section: project_details?.G98,\n            estimate: project_details?.G97,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of women for whom health services were improved as a result of project activities, measured against the without-project scenario',\n            section: project_details?.G101,\n            estimate: project_details?.G100,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Health',\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of people for whom access to, or quality of, education is expected to improve as result of project activities, measured against the without-project scenario',\n            section: project_details?.G105,\n            estimate: project_details?.G104,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of women and girls for whom access to, or quality of, education is expected to improve as result of project activities, measured against the without-project scenario',\n            section: project_details?.G108,\n            estimate: project_details?.G107,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Education',\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of people who are expected to experience increased water quality and/or improved access to drinking water as a result of project activities, measured against the without-project scenario',\n            section: project_details?.G112,\n            estimate: project_details?.G111,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of women who are expected to experience increased water quality and/or improved access to drinking water as a result of project activities, measured against the without-project scenario',\n            section: project_details?.G115,\n            estimate: project_details?.G114,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Water',\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Total number of community members whose well-being<sup>8</sup> is expected to improve as a result of project activities ',\n            section: project_details?.G119,\n            estimate: project_details?.G118,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Number of women whose well-being is expected to improve as a result of project activities',\n            section: project_details?.G122,\n            estimate: project_details?.G121,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Well-being',\n        footNotes: {\n          8: 'Well-being is peoples experience of the quality of their lives. Well-being benefits may include benefits reported in other metrics of this table (e.g. Training, Employment, Livelihoods, Health, Education and Water), and may also include other benefits such as strengthened legal rights to resources, increased food security, conservation of access to areas of cultural significance, etc.',\n        },\n      });\n\n      standardizedBenefits.push({\n        metrics: [\n          {\n            metric:\n              'Expected change in the number of hectares managed significantly better by the project for biodiversity conservation,<sup>9</sup> measured against the without-project scenario',\n            section: project_details?.G126,\n            estimate: project_details?.G125,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n          {\n            metric:\n              'Expected number of globally Critically Endangered or Endangered species<sup>10</sup> benefiting from reduced threats as a result of project activities,<sup>11</sup> measured against the without-project scenario ',\n            section: project_details?.G129,\n            estimate: project_details?.G128,\n            achievementProjectLifeTime: '',\n            achievementMonitoringPeriod: '',\n          },\n        ],\n        category: 'Biodiversity conservation',\n        footNotes: {\n          9: 'Managed for biodiversity conservation in this context means areas where specific management measures are being implemented as a part of project activities with an objective of enhancing biodiversity conservation, e.g. enhancing the status of endangered species',\n          10: \"Per IUCN's Red List of Threatened Species\",\n          11: 'In the absence of direct population or occupancy measures, measurement of reduced threats may be used as evidence of benefit',\n        },\n      });\n\n      json.otherJsonContents.summaryOfProjectBenefits.standardizedBenefits =\n        standardizedBenefits;\n\n      //GREENHOUSEGASES\n      const greenHousesProject = [];\n      const greenHousesBaseline = [];\n      const boundaryBaseline =\n        document.credentialSubject[0]?.project_boundary\n          ?.project_boundary_baseline_scenario;\n      const boundaryProject =\n        document.credentialSubject[0]?.project_boundary\n          ?.project_boundary_project_scenario;\n\n      // PROJECT\n      greenHousesProject.push({\n        gas: '',\n        source: 'Aboveground tree biomass',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_aboveground_tree_biomass.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_aboveground_tree_biomass\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_aboveground_tree_biomass.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_aboveground_tree_biomass.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Aboveground non-tree biomass',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_aboveground_non_tree_biomass.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_aboveground_non_tree_biomass\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_aboveground_non_tree_biomass\n                .justification,\n          },\n        ],\n        statusType: boundaryProject?.project_aboveground_non_tree_biomass\n          .included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Below-ground biomass',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_below_ground_biomass.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_below_ground_biomass.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_below_ground_biomass.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_below_ground_biomass.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Litter',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_litter.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_litter.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryProject?.project_litter.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_litter.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Dead wood',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_dead_wood.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_dead_wood.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryProject?.project_dead_wood.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_dead_wood.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Soil',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_soil.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_soil.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryProject?.project_soil.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_soil.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Wood products',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_wood_products.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_wood_products.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryProject?.project_wood_products.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_wood_products.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'The production of methane by microbes',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_methane_production_by_microbes.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_methane_production_by_microbes\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_methane_production_by_microbes\n                .justification,\n          },\n        ],\n        statusType: boundaryProject?.project_methane_production_by_microbes\n          .included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Denitrification/nitrification',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_denitrification_nitrification.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_denitrification_nitrification\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_denitrification_nitrification\n                .justification,\n          },\n        ],\n        statusType: boundaryProject?.project_denitrification_nitrification\n          .included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Burning of biomass',\n        default: false,\n        sources: boundaryProject?.project_burning_of_biomass.gas\n          .split(',')\n          .map((gas) => ({\n            gas: gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_burning_of_biomass.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_burning_of_biomass.justification,\n          })),\n        statusType: boundaryProject?.project_burning_of_biomass.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Fossil fuel use',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_fossil_fuel_use_CO2.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_fossil_fuel_use_CO2.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_fossil_fuel_use_CO2.justification,\n          },\n        ],\n        statusType: boundaryProject?.project_fossil_fuel_use_CO2.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesProject.push({\n        gas: '',\n        source: 'Fossil fuel use ',\n        default: false,\n        sources: [\n          {\n            gas: boundaryProject?.project_fossil_fuel_use_CH4.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_fossil_fuel_use_CH4.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_fossil_fuel_use_CH4.justification,\n          },\n          {\n            gas: boundaryProject?.project_fossil_fuel_use_N2O.gas,\n            source: '',\n            default: false,\n            statusType: boundaryProject?.project_fossil_fuel_use_N2O.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryProject?.project_fossil_fuel_use_N2O.justification,\n          },\n        ],\n        statusType:\n          boundaryProject?.project_fossil_fuel_use_CH4.included ||\n          boundaryProject?.project_fossil_fuel_use_N2O.included\n            ? 'Included'\n            : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      // BASELINE\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Aboveground tree biomass',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_aboveground_tree_biomass.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_aboveground_tree_biomass\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_aboveground_tree_biomass.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_aboveground_tree_biomass.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Aboveground non-tree biomass',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_aboveground_non_tree_biomass.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_aboveground_non_tree_biomass\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_aboveground_non_tree_biomass\n                .justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_aboveground_non_tree_biomass\n          .included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Below-ground biomass',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_below_ground_biomass.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_below_ground_biomass.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_below_ground_biomass.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_below_ground_biomass.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Litter',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_litter.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_litter.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryBaseline?.baseline_litter.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_litter.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Dead wood',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_dead_wood.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_dead_wood.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryBaseline?.baseline_dead_wood.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_dead_wood.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Soil',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_soil.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_soil.included\n              ? 'Included'\n              : 'Excluded',\n            justification: boundaryBaseline?.baseline_soil.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_soil.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Wood products',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_wood_products.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_wood_products.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_wood_products.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_wood_products.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'The production of methane by microbes',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_methane_production_by_microbes.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline\n              ?.baseline_methane_production_by_microbes.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_methane_production_by_microbes\n                .justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_methane_production_by_microbes\n          .included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Denitrification/nitrification',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_denitrification_nitrification.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_denitrification_nitrification\n              .included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_denitrification_nitrification\n                .justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_denitrification_nitrification\n          .included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Burning of biomass',\n        default: false,\n        sources:\n          boundaryBaseline?.baseline_burning_of_biomass_and_organic_soil.gas\n            .split(',')\n            .map((gas) => ({\n              gas: gas,\n              source: '',\n              default: false,\n              statusType: boundaryBaseline\n                ?.baseline_burning_of_biomass_and_organic_soil.included\n                ? 'Included'\n                : 'Excluded',\n              justification:\n                boundaryBaseline?.baseline_burning_of_biomass_and_organic_soil\n                  .justification,\n            })),\n        statusType: boundaryBaseline\n          ?.baseline_burning_of_biomass_and_organic_soil.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Fossil fuel use',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_fossil_fuel_use_CO2.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_fossil_fuel_use_CO2.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_fossil_fuel_use_CO2.justification,\n          },\n        ],\n        statusType: boundaryBaseline?.baseline_fossil_fuel_use_CO2.included\n          ? 'Included'\n          : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      greenHousesBaseline.push({\n        gas: '',\n        source: 'Fossil fuel use ',\n        default: false,\n        sources: [\n          {\n            gas: boundaryBaseline?.baseline_fossil_fuel_use_CH4.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_fossil_fuel_use_CH4.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_fossil_fuel_use_CH4.justification,\n          },\n          {\n            gas: boundaryBaseline?.baseline_fossil_fuel_use_N2O.gas,\n            source: '',\n            default: false,\n            statusType: boundaryBaseline?.baseline_fossil_fuel_use_N2O.included\n              ? 'Included'\n              : 'Excluded',\n            justification:\n              boundaryBaseline?.baseline_fossil_fuel_use_N2O.justification,\n          },\n        ],\n        statusType:\n          boundaryBaseline?.baseline_fossil_fuel_use_CH4.included ||\n          boundaryBaseline?.baseline_fossil_fuel_use_N2O.included\n            ? 'Included'\n            : 'Excluded',\n        calculationSelectionName: '',\n      });\n\n      json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.greenHouseGases =\n        {\n          project: greenHousesProject,\n          baseline: greenHousesBaseline,\n        };\n\n      // INSTANCES\n      const instances = {};\n      const monitoringInstances = {};\n      json.locations = [];\n      const project_data_per_instance =\n        document.credentialSubject[0].project_data_per_instance;\n      project_data_per_instance.forEach((instance) => {\n        const INSTANCE_NAME = instance.instance_name;\n        const projectInstance = instance.project_instance;\n\n        json.otherJsonContents.cover.multipleProjectLocation = [];\n        for (let i = 0; i < project_details?.G19?.length; i++) {\n          const location = {};\n          const g19Element = project_details?.G19[i];\n          let g26Element;\n          if (project_details?.G26?.length > i) {\n            g26Element = project_details?.G26[i];\n          }\n          let g31Element;\n          if (project_details?.G31?.length > i) {\n            g31Element = project_details?.G31[i];\n          }\n          location.projectInstance = INSTANCE_NAME;\n          location.country = g19Element.G6;\n          location.city = g19Element.G9;\n          location.stateProvince = g19Element.G8;\n          location.latitudeDD = g26Element ? g26Element.G5 : '';\n          location.longitudeDD = g26Element ? g26Element.G6 : '';\n          location.latitudeDMS = g31Element ? g31Element.latitude_DMS : '';\n          location.longitudeDMS = g31Element ? g31Element.longitude_DMS : '';\n          location.acresHectares = g19Element\n            ? g19Element.acres_hectares_quantity\n            : '';\n\n          location.areaUnit = g19Element ? g19Element.acres_hectares_unit : '';\n\n          json.locations.push(location);\n\n          //   const projectLocation = {};\n          //   projectLocation.city = g19Element.G9;\n          //   projectLocation.country = g19Element.G6;\n          //   projectLocation.countryName = g19Element.G6;\n          //   projectLocation.latitudeDd = g26Element ? g26Element.G5 : '';\n          //   projectLocation.longitudeDd = g26Element ? g26Element.G6 : '';\n          //   projectLocation.continentName = g19Element.G7;\n          //   projectLocation.projectInstance = g19Element.G5;\n          //   json.otherJsonContents.cover.multipleProjectLocation.push(projectLocation);\n        }\n\n        instances[INSTANCE_NAME] = {\n          fireReductionPremiumData: null,\n          BD: null,\n          BCEF: null,\n          OFty: null,\n          ratesubsBSL: null,\n          ratesubsWPS: null,\n          SLF: null,\n          woodproductInventory: null,\n          woodyaverageBaselineProject: null,\n          generalinputsInsituBsl: null,\n          generalinputsSoilErosion: null,\n          generalinputsSoilExcavationProject: null,\n          generalinputsSoilErosionProject: null,\n          herbaceousBaseline: null,\n          herbaceousProject: null,\n          projectfieldCollectedSoc: null,\n          projectstratumSoilTest: null,\n          vegetationCover: null,\n          baselinefieldCollectedSoc: null,\n          generalinputsSoilWxcavation: null,\n          individual_variables: {\n            emissionReductionFromStockLoss: false,\n            fireReductionPremium: false,\n            nerrweCap: false,\n            soilInsituApproach: null,\n            soilCH4Approach: null,\n            soilN2OApproach: null,\n            'buffer%': null,\n            nerrweMax: null,\n            creditingPeriod: null,\n            nerError: null,\n            EFN2OBurn: null,\n            EFCH4Burn: null,\n            allowableUncert: null,\n            GWPCH4: null,\n            GWPN2O: null,\n            socCapApproach: null,\n          },\n          csv_url: {\n            ratePeatLoss: null,\n            proxyN2oEmissions: null,\n            emissionReductionStockLoss: null,\n            areaStratumT100: null,\n            rateCloss: null,\n            co2EmissionsFromFossilFuelCombustion: null,\n            proxyCh4Emissions: null,\n            generalinputsSoilInsituProject: null,\n            areaStratum: [],\n            submergence: [],\n            ghgEmissionProxyBaseline: null,\n            callochBsl: null,\n            co2EmissionsBaselineScenario: null,\n            co2EmissionsFromFossilFuelCombustionProject: null,\n            emissionProxyCh4Project: null,\n            ipccEmissionFactorN2oProject: null,\n            soilCarbonStockN2oProject: null,\n            emissionProxyN2oProject: null,\n            abovegroundShrubBiomass: null,\n            ghgEmissionsProxyProject: null,\n            co2EmissionsProjectScenario: null,\n            callochWps: [],\n            ipccEmissionFactorN2o: null,\n            soilCarbonStockN2o: null,\n            netTreeCarbonStockChange: [],\n            netShrubCarbonStockChange: null,\n            treeCarbonStockProject: [],\n            shrubCarbonStockProject: null,\n            fieldCollectedAnnualSocChangeBaseline: null,\n            fieldCollectedAnnualSocChangeProject: [],\n            herbAnnualStockChangeBaseline: null,\n            herbAnnualStockChangeProject: null,\n            areaStratumSoilType: [],\n            ipccEmissionFactorCh4: null,\n            soilCarbonStockCh4: null,\n            ipccEmissionFactorCh4Project: null,\n            soilCarbonStockCh4Project: null,\n          },\n        };\n        instances[INSTANCE_NAME].individual_variables = {};\n        instances[\n          INSTANCE_NAME\n        ].individual_variables.emissionReductionFromStockLoss =\n          projectInstance.quantification_approach\n            .quantification_baseline_co2_reduction ?? false;\n        instances[INSTANCE_NAME].individual_variables.fireReductionPremium =\n          projectInstance.quantification_approach\n            .quantification_fire_reduction_premium ?? false;\n        instances[INSTANCE_NAME].individual_variables.soilCH4Approach =\n          projectInstance.quantification_approach\n            .quantification_ch4_emissions_soil ?? null;\n        instances[INSTANCE_NAME].individual_variables.soilInsituApproach =\n          projectInstance.quantification_approach\n            .quantification_co2_emissions_soil ?? null;\n        instances[INSTANCE_NAME].individual_variables.nerrweCap =\n          projectInstance.quantification_approach\n            .quantification_nerrwe_max_cap ?? false;\n        instances[INSTANCE_NAME].individual_variables.soilN2OApproach =\n          projectInstance.quantification_approach\n            .quantification_n2o_emissions_soil ?? null;\n        instances[INSTANCE_NAME].individual_variables['buffer%'] =\n          projectInstance.individual_parameters['individual_params_buffer_%'];\n        instances[INSTANCE_NAME].individual_variables.nerrweMax =\n          projectInstance.individual_parameters.NERRWE_max;\n        instances[INSTANCE_NAME].individual_variables.creditingPeriod =\n          projectInstance.individual_parameters.individual_params_crediting_period;\n        instances[INSTANCE_NAME].individual_variables.nerError =\n          projectInstance.individual_parameters.individual_params_NER_ERROR;\n        instances[INSTANCE_NAME].individual_variables.EFN2OBurn =\n          projectInstance.individual_parameters.EF_n20_burn > 0\n            ? projectInstance.individual_parameters.EF_n20_burn\n            : null;\n        instances[INSTANCE_NAME].individual_variables.EFCH4Burn =\n          projectInstance.individual_parameters.EF_ch4_burn > 0\n            ? projectInstance.individual_parameters.EF_ch4_burn\n            : null;\n        instances[INSTANCE_NAME].individual_variables.allowableUncert =\n          projectInstance.individual_parameters.individual_params_allowable_uncert;\n        instances[INSTANCE_NAME].individual_variables.socCapApproach =\n          projectInstance.quantification_approach\n            .quantification_soc_cap_approach ?? null;\n        instances[INSTANCE_NAME].individual_variables.GWPCH4 =\n          projectInstance.individual_parameters.gwp_ch4 > 0\n            ? projectInstance.individual_parameters.gwp_ch4\n            : null;\n        instances[INSTANCE_NAME].individual_variables.GWPN2O =\n          projectInstance.individual_parameters.gwp_n2o > 0\n            ? projectInstance.individual_parameters.gwp_n2o\n            : null;\n\n        instances[INSTANCE_NAME].csv_url.areaStratum = [];\n        projectInstance.baseline_emissions.yearly_data_for_baseline_GHG_emissions.forEach(\n          (data) => {\n            const stratums = data.annual_stratum_parameters;\n            stratums.forEach((stratum) => {\n              const item = {};\n              item.Year = data.year_t;\n              item.Stratum = stratum.stratum_i;\n              item['Ai,t'] = stratum.annual_stratum_level_parameters.A_i_t;\n\n              instances[INSTANCE_NAME].csv_url.areaStratum.push(item);\n            });\n          },\n        );\n\n        instances[INSTANCE_NAME].csv_url.submergence = [];\n        projectInstance.monitoring_period_inputs.submergence_monitoring_data.forEach(\n          (data) => {\n            const stratums = data.submergence_measurements_for_each_stratum;\n            stratums.forEach((stratum) => {\n              const item = {};\n              item.Year = data.monitoring_year;\n              item.Stratum = stratum.stratum_i;\n              item.Submergence = stratum.is_submerged.toString().toUpperCase();\n              item.T = stratum.submergence_T;\n              item['Area submerged %'] = stratum.area_submerged_percentage;\n              item['CBSL-agbiomass,i,t'] =\n                stratum.C_BSL_agbiomass_i_t_ar_tool_14;\n              item['CBSL-agbiomass,i,(t-T)'] =\n                stratum.C_BSL_agbiomass_i_t_to_T_ar_tool_14;\n\n              instances[INSTANCE_NAME].csv_url.submergence.push(item);\n            });\n          },\n        );\n\n        instances[INSTANCE_NAME].csv_url.callochWps = [];\n        projectInstance.project_emissions.yearly_data_for_project_GHG_emissions.forEach(\n          (data) => {\n            const stratums = data.annual_stratum_parameters;\n            stratums.forEach((stratum) => {\n              const item = {};\n              item.Year = data.year_t;\n              item.Stratum = stratum.stratum_i;\n              item['%Calloch WPS'] =\n                stratum.annual_stratum_level_parameters.percentage_C_alloch_WPS;\n\n              instances[INSTANCE_NAME].csv_url.callochWps.push(item);\n            });\n          },\n        );\n\n        instances[INSTANCE_NAME].csv_url.netTreeCarbonStockChange = [];\n        projectInstance.baseline_emissions.yearly_data_for_baseline_GHG_emissions.forEach(\n          (data) => {\n            const stratums = data.annual_stratum_parameters;\n            stratums.forEach((stratum) => {\n              const item = {};\n              item.Year = data.year_t;\n              item.Stratum = stratum.stratum_i;\n              item['deltaCTREE_BSL,i,t'] =\n                stratum.annual_stratum_level_parameters.delta_CTREE_BSL_i_t_ar_tool_14;\n\n              instances[INSTANCE_NAME].csv_url.netTreeCarbonStockChange.push(\n                item,\n              );\n            });\n          },\n        );\n\n        instances[INSTANCE_NAME].csv_url.treeCarbonStockProject = [];\n        projectInstance.project_emissions.yearly_data_for_project_GHG_emissions.forEach(\n          (data) => {\n            const stratums = data.annual_stratum_parameters;\n            stratums.forEach((stratum) => {\n              const item = {};\n              item.Year = data.year_t;\n              item.Stratum = stratum.stratum_i;\n              item['deltaCTREE_PROJ,i,t'] =\n                stratum.annual_stratum_level_parameters.delta_C_TREE_PROJ_i_t_ar_tool_14;\n\n              instances[INSTANCE_NAME].csv_url.treeCarbonStockProject.push(\n                item,\n              );\n            });\n          },\n        );\n\n        instances[INSTANCE_NAME].csv_url.fieldCollectedAnnualSocChangeProject =\n          [];\n        projectInstance.project_emissions.yearly_data_for_project_GHG_emissions.forEach(\n          (data) => {\n            const stratums = data.annual_stratum_parameters;\n            stratums.forEach((stratum) => {\n              const item = {};\n              item.Year = data.year_t;\n              item.Stratum = stratum.stratum_i;\n              item['deltaCWPS-soil,i,t (tC/ha)'] =\n                stratum.annual_stratum_level_parameters.delta_C_WPS_soil_i_t;\n\n              instances[\n                INSTANCE_NAME\n              ].csv_url.fieldCollectedAnnualSocChangeProject.push(item);\n            });\n          },\n        );\n\n        // Baseline Scenario\n        if (boundaryBaseline?.baseline_fossil_fuel_use_CO2?.included) {\n          instances[\n            INSTANCE_NAME\n          ].csv_url.co2EmissionsFromFossilFuelCombustion = [];\n          if (\n            projectInstance.baseline_emissions\n              ?.yearly_data_for_baseline_GHG_emissions\n          ) {\n            projectInstance.baseline_emissions.yearly_data_for_baseline_GHG_emissions.forEach(\n              (data) => {\n                if (data.annual_stratum_parameters) {\n                  data.annual_stratum_parameters.forEach((stratum) => {\n                    const item = {};\n                    item.Year = data.year_t;\n                    item.Stratum = stratum.stratum_i;\n\n                    item['ET(FC,i,t,WPS)'] = stratum.ar_tool_05?.ET_FC_y || 0;\n\n                    instances[\n                      INSTANCE_NAME\n                    ].csv_url.co2EmissionsFromFossilFuelCombustion.push(item);\n                  });\n                }\n              },\n            );\n          }\n        } else {\n          instances[\n            INSTANCE_NAME\n          ].csv_url.co2EmissionsFromFossilFuelCombustion = null;\n        }\n\n        // Project Scenario\n        if (boundaryProject?.project_fossil_fuel_use_CO2?.included) {\n          instances[\n            INSTANCE_NAME\n          ].csv_url.co2EmissionsFromFossilFuelCombustionProject = [];\n          if (\n            projectInstance.project_emissions\n              ?.yearly_data_for_project_GHG_emissions\n          ) {\n            projectInstance.project_emissions.yearly_data_for_project_GHG_emissions.forEach(\n              (data) => {\n                if (data.annual_stratum_parameters) {\n                  data.annual_stratum_parameters.forEach((stratum) => {\n                    const item = {};\n                    item.Year = data.year_t;\n                    item.Stratum = stratum.stratum_i;\n                    item['ET(FC,i,t,WPS)'] = stratum.ar_tool_05?.ET_FC_y || 0;\n\n                    instances[\n                      INSTANCE_NAME\n                    ].csv_url.co2EmissionsFromFossilFuelCombustionProject.push(\n                      item,\n                    );\n                  });\n                }\n              },\n            );\n          }\n        } else {\n          instances[\n            INSTANCE_NAME\n          ].csv_url.co2EmissionsFromFossilFuelCombustionProject = null;\n        }\n\n        instances[INSTANCE_NAME].csv_url.areaStratumSoilType = [];\n        const baselineYearlyData =\n          projectInstance.baseline_emissions\n            ?.yearly_data_for_baseline_GHG_emissions;\n        const projectYearlyData =\n          projectInstance.project_emissions\n            ?.yearly_data_for_project_GHG_emissions;\n\n        if (!baselineYearlyData || baselineYearlyData.length === 0) {\n          // If baseline data is empty or not present, areaStratumSoilType remains empty.\n          // We can log a warning here\n        } else {\n          // 1. Determine all unique stratum IDs from the entire baseline dataset\n          const uniqueStratumIDs = new Set();\n          baselineYearlyData.forEach((yearData) => {\n            if (yearData.annual_stratum_parameters) {\n              yearData.annual_stratum_parameters.forEach((stratum) => {\n                uniqueStratumIDs.add(stratum.stratum_i);\n              });\n            }\n          });\n\n          if (uniqueStratumIDs.size > 0) {\n            // Ensure baselineYearlyData is sorted by year_t to correctly identify the \"last\" year\n            const sortedBaselineYearlyData = [...baselineYearlyData].sort(\n              (a, b) => a.year_t - b.year_t,\n            );\n\n            let targetBaselineYearData = null;\n\n            // Assume the last year contains all stratums\n            if (sortedBaselineYearlyData.length > 0) {\n              targetBaselineYearData =\n                sortedBaselineYearlyData[sortedBaselineYearlyData.length - 1];\n            }\n\n            // 3. Populate areaStratumSoilType using data from the target year\n            if (\n              targetBaselineYearData &&\n              targetBaselineYearData.annual_stratum_parameters\n            ) {\n              const targetYearNumeric = targetBaselineYearData.year_t;\n              const targetProjectYearData = projectYearlyData?.find(\n                (pData) => pData.year_t === targetYearNumeric,\n              );\n\n              // Sort unique IDs for consistent output order\n              const sortedUniqueStratumIDs = Array.from(uniqueStratumIDs).sort(\n                (a, b) => a - b,\n              );\n\n              for (const stratumId of sortedUniqueStratumIDs) {\n                const baselineStratum =\n                  targetBaselineYearData.annual_stratum_parameters.find(\n                    (s) => s.stratum_i === stratumId,\n                  );\n\n                if (\n                  baselineStratum &&\n                  baselineStratum.stratum_characteristics\n                ) {\n                  const item = {};\n                  item.Stratum = baselineStratum.stratum_i;\n                  item.Ecosystem =\n                    baselineStratum.stratum_characteristics.ecosystem;\n                  item['Soil type (t=0)'] =\n                    baselineStratum.stratum_characteristics.soil_type_t0;\n                  item['ABSL,i'] =\n                    baselineStratum.stratum_characteristics.A_BSL_i;\n\n                  let awps_i_value = undefined;\n                  if (\n                    targetProjectYearData &&\n                    targetProjectYearData.annual_stratum_parameters\n                  ) {\n                    const projectStratum =\n                      targetProjectYearData.annual_stratum_parameters.find(\n                        (pStratum) => pStratum.stratum_i === stratumId,\n                      );\n                    if (\n                      projectStratum &&\n                      projectStratum.stratum_characteristics\n                    ) {\n                      awps_i_value =\n                        projectStratum.stratum_characteristics.A_WPS_i;\n                    }\n                  }\n                  item['AWPS,i'] = awps_i_value;\n\n                  instances[INSTANCE_NAME].csv_url.areaStratumSoilType.push(\n                    item,\n                  );\n                }\n              }\n            }\n          }\n        }\n\n        monitoringInstances[INSTANCE_NAME] = {};\n        const fireReductionPremiumData = [];\n        const quantificationApproach = projectInstance.quantification_approach;\n\n        if (\n          quantificationApproach.quantification_fire_reduction_premium === true\n        ) {\n          if (\n            quantificationApproach.fire_reduction_premium &&\n            Array.isArray(quantificationApproach.fire_reduction_premium)\n          ) {\n            quantificationApproach.fire_reduction_premium.forEach((data) => {\n              fireReductionPremiumData.push({\n                FRP: data.hasOwnProperty('fire_reduction_premium_per_year')\n                  ? data.fire_reduction_premium_per_year\n                  : null,\n                year: parseInt(data.year),\n              });\n            });\n          }\n        }\n\n        monitoringInstances[INSTANCE_NAME].fireReductionPremiumData =\n          fireReductionPremiumData;\n\n        //console.log(monitoringInstances[INSTANCE_NAME].fireReductionPremiumData);\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.buffer =\n          {};\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.buffer[\n          INSTANCE_NAME\n        ] = projectInstance.individual_parameters['individual_params_buffer_%'];\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweCap =\n          {};\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweCap[\n          INSTANCE_NAME\n        ] = projectInstance.individual_parameters.is_NERRWE_max_cap;\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.creditingPeriod =\n          {};\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.creditingPeriod[\n          INSTANCE_NAME\n        ] = null; //projectInstance.individual_parameters.individual_params_crediting_period;\n\n        // if (projectInstance.quantification_approach.quantification_fire_reduction_premium) {\n        //     json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.fireReductionPremium[INSTANCE_NAME] = projectInstance.quantification_approach.fire_reduction_premium; // ???\n        // } else {\n        //     json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.fireReductionPremium[INSTANCE_NAME] = false;\n        // }\n\n        // json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.emissionReductionFromStockLoss =\n        //   {};\n        // json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.emissionReductionFromStockLoss[\n        //   INSTANCE_NAME\n        // ] =\n        //   projectInstance.quantification_approach.quantification_baseline_co2_reduction;\n\n        // Summber said that fields should be null?\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.buffer[\n          INSTANCE_NAME\n        ] = null;\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweCap[\n          INSTANCE_NAME\n        ] = null;\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweMax =\n          {};\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweMax[\n          INSTANCE_NAME\n        ] = null;\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.creditingPeriod[\n          INSTANCE_NAME\n        ] = null;\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.fireReductionPremium =\n          {};\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.fireReductionPremium[\n          INSTANCE_NAME\n        ] = null;\n      });\n\n      json.otherJsonContents.projectDetails.legalStatusAndPropertyRights.freeConsent.freeConsent =\n        [\n          {\n            status: project_details?.G257,\n            process: 'Description of process for obtaining consent',\n            placeholder:\n              'Describe and demonstrate how consent to implement the project activities was obtained from those concerned, including IPs, LCs, and customary rights holders, and a transparent agreement was reached. ',\n          },\n          {\n            status: project_details?.G258,\n            process: 'Outcome of FPIC process',\n            placeholder:\n              'Describe the outcome of the FPIC process, including the transparent agreement, and the information disclosed prior to establishing a transparent agreement with those concerned, Ips, LCs, and customary rights holders.  Provide assurance that: • The project will not encroach on land, relocate people without consent, and force physical or economic displacement. • Appropriate restitution or compensation has been allocated to any parties whose lands have been or will be affected by the project.',\n          },\n        ];\n\n      json.otherJsonContents.projectDetails.legalStatusAndPropertyRights.benefitSharing.benefitSharing =\n        [\n          {\n            status: project_details?.G260,\n            process: 'Process used to design the benefit sharing plan',\n            placeholder:\n              'Describe the process used to develop the benefit-sharing agreement with the affected stakeholder groups. ',\n          },\n          {\n            status: project_details?.G261,\n            process: 'Summary of the benefit sharing plan',\n            placeholder:\n              'Describe the benefit-sharing agreement. Where affected stakeholder groups wish to keep elements of the plan private, provide the full arrangement as a commercially sensitive document. The project proponent shall demonstrate that the community wishes to keep this information private.',\n          },\n          {\n            status: project_details?.G262,\n            process: 'Approval and dissemination of benefit sharing plan',\n            placeholder:\n              'Demonstrate that the benefit- sharing agreement was agreed upon by the affected stakeholder groups, and that the agreement was shared in a culturally appropriate manner. Demonstrate that the agreement is readily accessible should stakeholders wish to review the agreement.',\n          },\n        ];\n\n      instances.projectBoundaryProject = [];\n      if (boundaryProject?.project_aboveground_tree_biomass?.included) {\n        instances.projectBoundaryProject.push('Aboveground tree biomass');\n      }\n      if (boundaryProject?.project_aboveground_non_tree_biomass?.included) {\n        instances.projectBoundaryProject.push('Aboveground non-tree biomass');\n      }\n      if (boundaryProject?.project_below_ground_biomass?.included) {\n        instances.projectBoundaryProject.push('Below-ground biomass');\n      }\n      if (boundaryProject?.project_litter?.included) {\n        instances.projectBoundaryProject.push('Litter');\n      }\n      if (boundaryProject?.project_dead_wood?.included) {\n        instances.projectBoundaryProject.push('Dead wood');\n      }\n      if (boundaryProject?.project_soil?.included) {\n        instances.projectBoundaryProject.push('Soil');\n      }\n      if (boundaryProject?.project_wood_products?.included) {\n        instances.projectBoundaryProject.push('Wood products');\n      }\n      if (boundaryProject?.project_methane_production_by_microbes?.included) {\n        instances.projectBoundaryProject.push(\n          'The production of methane by microbes',\n        );\n      }\n      if (boundaryProject?.project_denitrification_nitrification?.included) {\n        instances.projectBoundaryProject.push('Denitrification/nitrification');\n      }\n      if (boundaryProject?.project_burning_of_biomass?.included) {\n        instances.projectBoundaryProject.push('Burning of biomass');\n      }\n      if (\n        boundaryProject?.project_fossil_fuel_use_CO2?.included ||\n        boundaryProject?.project_fossil_fuel_use_CH4?.included ||\n        boundaryProject?.project_fossil_fuel_use_N2O?.included\n      ) {\n        instances.projectBoundaryProject.push('Fossil fuel use');\n      }\n\n      instances.projectBoundaryBaseline = [];\n      if (boundaryBaseline?.baseline_aboveground_tree_biomass?.included) {\n        instances.projectBoundaryBaseline.push('Aboveground tree biomass');\n      }\n      if (boundaryBaseline?.baseline_aboveground_non_tree_biomass?.included) {\n        instances.projectBoundaryBaseline.push('Aboveground non-tree biomass');\n      }\n      if (boundaryBaseline?.baseline_below_ground_biomass?.included) {\n        instances.projectBoundaryBaseline.push('Below-ground biomass');\n      }\n      if (boundaryBaseline?.baseline_litter?.included) {\n        instances.projectBoundaryBaseline.push('Litter');\n      }\n      if (boundaryBaseline?.baseline_dead_wood?.included) {\n        instances.projectBoundaryBaseline.push('Dead wood');\n      }\n      if (boundaryBaseline?.baseline_soil?.included) {\n        instances.projectBoundaryBaseline.push('Soil');\n      }\n      if (boundaryBaseline?.baseline_wood_products?.included) {\n        instances.projectBoundaryBaseline.push('Wood products');\n      }\n      if (boundaryBaseline?.baseline_methane_production_by_microbes?.included) {\n        instances.projectBoundaryBaseline.push(\n          'The production of methane by microbes',\n        );\n      }\n      if (boundaryBaseline?.baseline_denitrification_nitrification?.included) {\n        instances.projectBoundaryBaseline.push('Denitrification/nitrification');\n      }\n      if (\n        boundaryBaseline?.baseline_burning_of_biomass_and_organic_soil?.included\n      ) {\n        instances.projectBoundaryBaseline.push(\n          'Burning of biomass and organic soil',\n        );\n      }\n      if (\n        boundaryBaseline?.baseline_fossil_fuel_use_CO2?.included ||\n        boundaryBaseline?.baseline_fossil_fuel_use_CH4?.included ||\n        boundaryBaseline?.baseline_fossil_fuel_use_N2O?.included\n      ) {\n        instances.projectBoundaryBaseline.push('Fossil fuel use');\n      }\n\n      json.calculationInputs = instances;\n\n      json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring =\n        monitoringInstances;\n\n      //---------------------------------------------- dataAndParameterForMonitoring ---------------------------------\n      project_details?.G564?.forEach((item) => {\n        const INSTANCE_NAME = item?.G6;\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ] = {};\n\n        const g168Element = item.G168;\n        const monitoring = g168Element\n          ? {\n              comments: g168Element.G15,\n              sourceOfData: g168Element.G8,\n              purposeOfData: g168Element.G14,\n              qaOrQcProcedures: g168Element.G13,\n              calculationMethod: g168Element.G16,\n              monitoringEquipment: g168Element.G12,\n              monitoringFrequency: g168Element.G10,\n              justification: g168Element.G9,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].nerError = monitoring;\n\n        const g7Element = item.G7;\n        const callochWps = g7Element\n          ? {\n              comments: g7Element.G18,\n              sourceOfData: g7Element.G8,\n              justification: g7Element.G9,\n              purposeOfData: g7Element.G17,\n              qaOrQcProcedures: g7Element.G16,\n              calculationMethod: g7Element.G19,\n              monitoringEquipment: g7Element.G15,\n              monitoringFrequency: g7Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].callochWps = callochWps;\n\n        const g84Element = item.G84;\n        const areaStratum = g84Element\n          ? {\n              comments: g84Element.G18,\n              sourceOfData: g84Element.G8,\n              justification: g84Element.G9,\n              purposeOfData: g84Element.G17,\n              qaOrQcProcedures: g84Element.G16,\n              calculationMethod: g84Element.G19,\n              monitoringEquipment: g84Element.G15,\n              monitoringFrequency: g84Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].areaStratum = areaStratum;\n\n        const g114Element = item.G114;\n        const submergence = g114Element\n          ? {\n              comments: g114Element.G22,\n              sourceOfData: g114Element.G8,\n              justification: g114Element.G9,\n              purposeOfData: g114Element.G21,\n              qaOrQcProcedures: g114Element.G20,\n              calculationMethod: g114Element.G23,\n              monitoringEquipment: g114Element.G19,\n              monitoringFrequency: g114Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].submergence = submergence;\n\n        const g152Element = item.G152;\n        const vegetationCover = g152Element\n          ? {\n              comments: g152Element.G19,\n              sourceOfData: g152Element.G8,\n              justification: g152Element.G9,\n              purposeOfData: g152Element.G18,\n              qaOrQcProcedures: g152Element.G17,\n              calculationMethod: g152Element.G20,\n              monitoringEquipment: g152Element.G16,\n              monitoringFrequency: g152Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].vegetationCover = vegetationCover;\n\n        const g169Element = item.G169;\n        const herbaceousProject = g169Element\n          ? {\n              comments: g169Element.G16,\n              sourceOfData: g169Element.G8,\n              justification: g169Element.G9,\n              purposeOfData: g169Element.G14,\n              qaOrQcProcedures: g169Element.G13,\n              calculationMethod: g169Element.G15,\n              monitoringEquipment: g169Element.G12,\n              monitoringFrequency: g169Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].herbaceousProject = herbaceousProject;\n\n        const g170Element = item.G170;\n        const herbaceousBaseline = g170Element\n          ? {\n              comments: g170Element.G16,\n              sourceOfData: g170Element.G8,\n              justification: g170Element.G9,\n              purposeOfData: g170Element.G14,\n              qaOrQcProcedures: g170Element.G13,\n              calculationMethod: g170Element.G15,\n              monitoringEquipment: g170Element.G12,\n              monitoringFrequency: g170Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].herbaceousBaseline = herbaceousBaseline;\n\n        const g133Element = item.G133;\n        const projectstratumSoilTest = g133Element\n          ? {\n              comments: g133Element.G22,\n              sourceOfData: g133Element.G8,\n              justification: g133Element.G9,\n              purposeOfData: g133Element.G21,\n              qaOrQcProcedures: g133Element.G20,\n              calculationMethod: g133Element.G23,\n              monitoringEquipment: g133Element.G19,\n              monitoringFrequency: g133Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].projectstratumSoilTest = projectstratumSoilTest;\n\n        const g69Element = item.G69;\n        const treeCarbonStockProject = g69Element\n          ? {\n              comments: g69Element.G18,\n              sourceOfData: g69Element.G8,\n              justification: g69Element.G9,\n              purposeOfData: g69Element.G17,\n              qaOrQcProcedures: g69Element.G16,\n              calculationMethod: g69Element.G19,\n              monitoringEquipment: g69Element.G15,\n              monitoringFrequency: g69Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].treeCarbonStockProject = treeCarbonStockProject;\n\n        const g54Element = item.G54;\n        const abovegroundShrubBiomass = g54Element\n          ? {\n              comments: g54Element.G18,\n              sourceOfData: g54Element.G8,\n              justification: g54Element.G9,\n              purposeOfData: g54Element.G17,\n              qaOrQcProcedures: g54Element.G16,\n              calculationMethod: g54Element.G19,\n              monitoringEquipment: g54Element.G15,\n              monitoringFrequency: g54Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].abovegroundShrubBiomass = abovegroundShrubBiomass;\n\n        const g172Element = item.G172;\n        const emissionProxyCh4Project = g172Element\n          ? {\n              comments: g172Element.G16,\n              sourceOfData: g172Element.G8,\n              justification: g172Element.G9,\n              purposeOfData: g172Element.G14,\n              qaOrQcProcedures: g172Element.G13,\n              calculationMethod: g172Element.G15,\n              monitoringEquipment: g172Element.G12,\n              monitoringFrequency: g172Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].emissionProxyCh4Project = emissionProxyCh4Project;\n\n        const g173Element = item.G173;\n        const emissionProxyN2oProject = g173Element\n          ? {\n              comments: g173Element.G16,\n              sourceOfData: g173Element.G8,\n              justification: g173Element.G9,\n              purposeOfData: g173Element.G14,\n              qaOrQcProcedures: g173Element.G13,\n              calculationMethod: g173Element.G15,\n              monitoringEquipment: g173Element.G12,\n              monitoringFrequency: g173Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].emissionProxyN2oProject = emissionProxyN2oProject;\n\n        const g174Element = item.G174;\n        const shrubCarbonStockProject = g174Element\n          ? {\n              comments: g174Element.G16,\n              sourceOfData: g174Element.G8,\n              justification: g174Element.G9,\n              purposeOfData: g174Element.G14,\n              qaOrQcProcedures: g174Element.G13,\n              calculationMethod: g174Element.G15,\n              monitoringEquipment: g174Element.G12,\n              monitoringFrequency: g174Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].shrubCarbonStockProject = shrubCarbonStockProject;\n\n        const g175Element = item.G175;\n        const fireReductionPremiumData = g175Element\n          ? {\n              comments: g175Element.G16,\n              sourceOfData: g175Element.G8,\n              justification: g175Element.G9,\n              purposeOfData: g175Element.G14,\n              qaOrQcProcedures: g175Element.G13,\n              calculationMethod: g175Element.G15,\n              monitoringEquipment: g175Element.G12,\n              monitoringFrequency: g175Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].fireReductionPremiumData = fireReductionPremiumData;\n\n        const g176Element = item.G176;\n        const ghgEmissionsProxyProject = g176Element\n          ? {\n              comments: g176Element.G16,\n              sourceOfData: g176Element.G8,\n              justification: g176Element.G9,\n              purposeOfData: g176Element.G14,\n              qaOrQcProcedures: g176Element.G13,\n              calculationMethod: g176Element.G15,\n              monitoringEquipment: g176Element.G12,\n              monitoringFrequency: g176Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].ghgEmissionsProxyProject = ghgEmissionsProxyProject;\n\n        const g179Element = item.G179;\n        const soilCarbonStockCh4Project = g179Element\n          ? {\n              comments: g179Element.G16,\n              sourceOfData: g179Element.G8,\n              justification: g179Element.G9,\n              purposeOfData: g179Element.G14,\n              qaOrQcProcedures: g179Element.G13,\n              calculationMethod: g179Element.G15,\n              monitoringEquipment: g179Element.G12,\n              monitoringFrequency: g179Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].soilCarbonStockCh4Project = soilCarbonStockCh4Project;\n\n        const g180Element = item.G180;\n        const soilCarbonStockN2oProject = g180Element\n          ? {\n              comments: g180Element.G16,\n              sourceOfData: g180Element.G8,\n              justification: g180Element.G9,\n              purposeOfData: g180Element.G14,\n              qaOrQcProcedures: g180Element.G13,\n              calculationMethod: g180Element.G15,\n              monitoringEquipment: g180Element.G12,\n              monitoringFrequency: g180Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].soilCarbonStockN2oProject = soilCarbonStockN2oProject;\n\n        const g182Element = item.G182;\n        const herbAnnualStockChangeProject = g182Element\n          ? {\n              comments: g182Element.G16,\n              sourceOfData: g182Element.G8,\n              justification: g182Element.G9,\n              purposeOfData: g182Element.G14,\n              qaOrQcProcedures: g182Element.G13,\n              calculationMethod: g182Element.G15,\n              monitoringEquipment: g182Element.G12,\n              monitoringFrequency: g182Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].herbAnnualStockChangeProject = herbAnnualStockChangeProject;\n\n        const g183Element = item.G183;\n        const ipccEmissionFactorCh4Project = g183Element\n          ? {\n              comments: g183Element.G16,\n              sourceOfData: g183Element.G8,\n              justification: g183Element.G9,\n              purposeOfData: g183Element.G14,\n              qaOrQcProcedures: g183Element.G13,\n              calculationMethod: g183Element.G15,\n              monitoringEquipment: g183Element.G12,\n              monitoringFrequency: g183Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].ipccEmissionFactorCh4Project = ipccEmissionFactorCh4Project;\n\n        const g184Element = item.G184;\n        const ipccEmissionFactorN2oProject = g184Element\n          ? {\n              comments: g184Element.G16,\n              sourceOfData: g184Element.G8,\n              justification: g184Element.G9,\n              purposeOfData: g184Element.G14,\n              qaOrQcProcedures: g184Element.G13,\n              calculationMethod: g184Element.G15,\n              monitoringEquipment: g184Element.G12,\n              monitoringFrequency: g184Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].ipccEmissionFactorN2oProject = ipccEmissionFactorN2oProject;\n\n        const g171Element = item.G171;\n        const herbAnnualStockChangeBaseline = g171Element\n          ? {\n              comments: g171Element.G16,\n              sourceOfData: g171Element.G8,\n              justification: g171Element.G9,\n              purposeOfData: g171Element.G14,\n              qaOrQcProcedures: g171Element.G13,\n              calculationMethod: g171Element.G15,\n              monitoringEquipment: g171Element.G12,\n              monitoringFrequency: g171Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].herbAnnualStockChangeBaseline = herbAnnualStockChangeBaseline;\n\n        const g181Element = item.G181;\n        const generalinputsSoilInsituProject = g181Element\n          ? {\n              comments: g181Element.G16,\n              sourceOfData: g181Element.G8,\n              justification: g181Element.G9,\n              purposeOfData: g181Element.G14,\n              qaOrQcProcedures: g181Element.G13,\n              calculationMethod: g181Element.G15,\n              monitoringEquipment: g181Element.G12,\n              monitoringFrequency: g181Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].generalinputsSoilInsituProject = generalinputsSoilInsituProject;\n\n        const g185Element = item.G185;\n        const generalinputsSoilErosionProject = g185Element\n          ? {\n              comments: g185Element.G16,\n              sourceOfData: g185Element.G8,\n              justification: g185Element.G9,\n              purposeOfData: g185Element.G14,\n              qaOrQcProcedures: g185Element.G13,\n              calculationMethod: g185Element.G15,\n              monitoringEquipment: g185Element.G12,\n              monitoringFrequency: g185Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].generalinputsSoilErosionProject = generalinputsSoilErosionProject;\n\n        const g186Element = item.G186;\n        const generalinputsSoilExcavationProject = g186Element\n          ? {\n              comments: g186Element.G16,\n              sourceOfData: g186Element.G8,\n              justification: g186Element.G9,\n              purposeOfData: g186Element.G14,\n              qaOrQcProcedures: g186Element.G13,\n              calculationMethod: g186Element.G15,\n              monitoringEquipment: g186Element.G12,\n              monitoringFrequency: g186Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].generalinputsSoilExcavationProject =\n          generalinputsSoilExcavationProject;\n\n        const g177Element = item.G177;\n        const fieldCollectedAnnualSocChangeProject = g177Element\n          ? {\n              comments: g177Element.G16,\n              sourceOfData: g177Element.G8,\n              justification: g177Element.G9,\n              purposeOfData: g177Element.G14,\n              qaOrQcProcedures: g177Element.G13,\n              calculationMethod: g177Element.G15,\n              monitoringEquipment: g177Element.G12,\n              monitoringFrequency: g177Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].fieldCollectedAnnualSocChangeProject =\n          fieldCollectedAnnualSocChangeProject;\n\n        const g178Element = item.G178;\n        const fieldCollectedAnnualSocChangeBaseline = g178Element\n          ? {\n              comments: g178Element.G16,\n              sourceOfData: g178Element.G8,\n              justification: g178Element.G9,\n              purposeOfData: g178Element.G14,\n              qaOrQcProcedures: g178Element.G13,\n              calculationMethod: g178Element.G15,\n              monitoringEquipment: g178Element.G12,\n              monitoringFrequency: g178Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].fieldCollectedAnnualSocChangeBaseline =\n          fieldCollectedAnnualSocChangeBaseline;\n\n        const g99Element = item.G99;\n        const co2EmissionsFromFossilFuelCombustionProject = g99Element\n          ? {\n              comments: g99Element.G18,\n              sourceOfData: g99Element.G8,\n              justification: g99Element.G9,\n              purposeOfData: g99Element.G17,\n              qaOrQcProcedures: g99Element.G16,\n              calculationMethod: g99Element.G19,\n              monitoringEquipment: g99Element.G15,\n              monitoringFrequency: g99Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].co2EmissionsFromFossilFuelCombustionProject =\n          co2EmissionsFromFossilFuelCombustionProject;\n\n        const g187Element = item.G187;\n        const projectfieldCollectedSoc = g187Element\n          ? {\n              comments: g187Element.G16,\n              sourceOfData: g187Element.G8,\n              justification: g187Element.G9,\n              purposeOfData: g187Element.G14,\n              qaOrQcProcedures: g187Element.G13,\n              calculationMethod: g187Element.G15,\n              monitoringEquipment: g187Element.G12,\n              monitoringFrequency: g187Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].projectfieldCollectedSoc = projectfieldCollectedSoc;\n\n        const g37Element = item.G37;\n        const woodproductInventory = g37Element\n          ? {\n              comments: g37Element.G20,\n              sourceOfData: g37Element.G8,\n              justification: g37Element.G9,\n              purposeOfData: g37Element.G19,\n              qaOrQcProcedures: g37Element.G18,\n              calculationMethod: g37Element.G21,\n              monitoringEquipment: g37Element.G17,\n              monitoringFrequency: g37Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].woodproductInventory = woodproductInventory;\n\n        const g189Element = item.G189;\n        const baselinefieldCollectedSoc = g189Element\n          ? {\n              comments: g189Element.G16,\n              sourceOfData: g189Element.G8,\n              justification: g189Element.G9,\n              purposeOfData: g189Element.G14,\n              qaOrQcProcedures: g189Element.G13,\n              calculationMethod: g189Element.G15,\n              monitoringEquipment: g189Element.G12,\n              monitoringFrequency: g189Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].baselinefieldCollectedSoc = baselinefieldCollectedSoc;\n\n        const g190Element = item.G190;\n        const co2EmissionsProjectScenario = g190Element\n          ? {\n              comments: g190Element.G16,\n              sourceOfData: g190Element.G8,\n              justification: g190Element.G9,\n              purposeOfData: g190Element.G14,\n              qaOrQcProcedures: g190Element.G13,\n              calculationMethod: g190Element.G15,\n              monitoringEquipment: g190Element.G12,\n              monitoringFrequency: g190Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].co2EmissionsProjectScenario = co2EmissionsProjectScenario;\n\n        const g188Element = item.G188;\n        const woodyaverageBaselineProject = g188Element\n          ? {\n              comments: g188Element.G16,\n              sourceOfData: g188Element.G8,\n              justification: g188Element.G9,\n              purposeOfData: g188Element.G14,\n              qaOrQcProcedures: g188Element.G13,\n              calculationMethod: g188Element.G15,\n              monitoringEquipment: g188Element.G12,\n              monitoringFrequency: g188Element.G10,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForMonitoring[\n          INSTANCE_NAME\n        ].woodyaverageBaselineProject = woodyaverageBaselineProject;\n      });\n\n      project_details?.G436?.forEach((item) => {\n        const INSTANCE_NAME = item?.G6;\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ] = {};\n\n        const g7Element = item.G7;\n        const BD = g7Element\n          ? {\n              comments: g7Element.G15,\n              sourceOfData: g7Element.G8,\n              justification: g7Element.G10,\n              purposeOfData: g7Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].BD = BD;\n\n        const g138Element = item.G138;\n        const EFN2OBurn = g138Element\n          ? {\n              comments: g138Element.G13,\n              sourceOfData: g138Element.G8,\n              justification: g138Element.G10,\n              purposeOfData: g138Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].EFN2OBurn = EFN2OBurn;\n\n        const g125Element = item.G125;\n        const callochBsl = g125Element\n          ? {\n              comments: g125Element.G16,\n              sourceOfData: g125Element.G8,\n              justification: g125Element.G13,\n              purposeOfData: g125Element.G14,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].callochBsl = callochBsl;\n\n        const g148Element = item.G148;\n        const allowableUncert = g148Element\n          ? {\n              comments: g148Element.G13,\n              sourceOfData: g148Element.G8,\n              justification: g148Element.G10,\n              purposeOfData: g148Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].allowableUncert = allowableUncert;\n\n        const g68Element = item.G68;\n        const areaStratumSoilType = g68Element\n          ? {\n              comments: g68Element.G18,\n              sourceOfData: g68Element.G8,\n              justification: g68Element.G15,\n              purposeOfData: g68Element.G16,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].areaStratumSoilType = areaStratumSoilType;\n\n        const g83Element = item.G83;\n        const baselinestratumSoilTest = g83Element\n          ? {\n              comments: g83Element.G19,\n              sourceOfData: g83Element.G8,\n              justification: g83Element.G16,\n              purposeOfData: g83Element.G17,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].baselinestratumSoilTest = baselinestratumSoilTest;\n\n        const g99Element = item.G99;\n        const netTreeCarbonStockChange = g99Element\n          ? {\n              comments: g99Element.G16,\n              sourceOfData: g99Element.G8,\n              justification: g99Element.G13,\n              purposeOfData: g99Element.G14,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].netTreeCarbonStockChange = netTreeCarbonStockChange;\n\n        const g112Element = item.G112;\n        const co2EmissionsFromFossilFuelCombustion = g112Element\n          ? {\n              comments: g112Element.G16,\n              sourceOfData: g112Element.G8,\n              justification: g112Element.G13,\n              purposeOfData: g112Element.G14,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].co2EmissionsFromFossilFuelCombustion =\n          co2EmissionsFromFossilFuelCombustion;\n\n        const g43Element = item.G43;\n        const SLF = g43Element\n          ? {\n              comments: g43Element.G15,\n              sourceOfData: g43Element.G8,\n              justification: g43Element.G12,\n              purposeOfData: g43Element.G13,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].SLF = SLF;\n\n        const g29Element = item.G29;\n        const BCEF = g29Element\n          ? {\n              comments: g29Element.G17,\n              sourceOfData: g29Element.G8,\n              justification: g29Element.G14,\n              purposeOfData: g29Element.G15,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].BCEF = BCEF;\n\n        const g55Element = item.G55;\n        const OFty = g55Element\n          ? {\n              comments: g55Element.G16,\n              sourceOfData: g55Element.G8,\n              justification: g55Element.G13,\n              purposeOfData: g55Element.G14,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].OFty = OFty;\n\n        const g149Element = item.G149;\n        const GWPCH4 = g149Element\n          ? {\n              comments: g149Element.G13,\n              sourceOfData: g149Element.G8,\n              justification: g149Element.G10,\n              purposeOfData: g149Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].GWPCH4 = GWPCH4;\n\n        const g150Element = item.G150;\n        const GWPN2O = g150Element\n          ? {\n              comments: g150Element.G13,\n              sourceOfData: g150Element.G8,\n              justification: g150Element.G10,\n              purposeOfData: g150Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].GWPN2O = GWPN2O;\n\n        const g151Element = item.G151;\n        const EFCH4Burn = g151Element\n          ? {\n              comments: g151Element.G12,\n              sourceOfData: g151Element.G8,\n              justification: g151Element.G10,\n              purposeOfData: g151Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].EFCH4Burn = EFCH4Burn;\n\n        const g152Element = item.G152;\n        const rateCloss = g152Element\n          ? {\n              comments: g152Element.G12,\n              sourceOfData: g152Element.G8,\n              justification: g152Element.G10,\n              purposeOfData: g152Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].rateCloss = rateCloss;\n\n        const g167Element = item.G167;\n        const ratesubsBSL = g167Element\n          ? {\n              comments: g167Element.G12,\n              sourceOfData: g167Element.G8,\n              justification: g167Element.G10,\n              purposeOfData: g167Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].ratesubsBSL = ratesubsBSL;\n\n        const g168Element = item.G168;\n        const ratesubsWPS = g168Element\n          ? {\n              comments: g168Element.G12,\n              sourceOfData: g168Element.G8,\n              justification: g168Element.G10,\n              purposeOfData: g168Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].ratesubsWPS = ratesubsWPS;\n\n        const g153Element = item.G153;\n        const ratePeatLoss = g153Element\n          ? {\n              comments: g153Element.G12,\n              sourceOfData: g153Element.G8,\n              justification: g153Element.G10,\n              purposeOfData: g153Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].ratePeatLoss = ratePeatLoss;\n\n        const g169Element = item.G169;\n        const areaStratumT100 = g169Element\n          ? {\n              comments: g169Element.G12,\n              sourceOfData: g169Element.G8,\n              justification: g169Element.G10,\n              purposeOfData: g169Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].areaStratumT100 = areaStratumT100;\n\n        const g155Element = item.G155;\n        const proxyCh4Emissions = g155Element\n          ? {\n              comments: g155Element.G12,\n              sourceOfData: g155Element.G8,\n              justification: g155Element.G10,\n              purposeOfData: g155Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].proxyCh4Emissions = proxyCh4Emissions;\n\n        const g156Element = item.G156;\n        const proxyN2oEmissions = g156Element\n          ? {\n              comments: g156Element.G12,\n              sourceOfData: g156Element.G8,\n              justification: g156Element.G10,\n              purposeOfData: g156Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].proxyN2oEmissions = proxyN2oEmissions;\n\n        const g163Element = item.G163;\n        const soilCarbonStockCh4 = g163Element\n          ? {\n              comments: g163Element.G12,\n              sourceOfData: g163Element.G8,\n              justification: g163Element.G10,\n              purposeOfData: g163Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].soilCarbonStockCh4 = soilCarbonStockCh4;\n\n        const g162Element = item.G162;\n        const soilCarbonStockN2o = g162Element\n          ? {\n              comments: g162Element.G12,\n              sourceOfData: g162Element.G8,\n              justification: g162Element.G10,\n              purposeOfData: g162Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].soilCarbonStockN2o = soilCarbonStockN2o;\n\n        const g158Element = item.G158;\n        const ipccEmissionFactorCh4 = g158Element\n          ? {\n              comments: g158Element.G12,\n              sourceOfData: g158Element.G8,\n              justification: g158Element.G10,\n              purposeOfData: g158Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].ipccEmissionFactorCh4 = ipccEmissionFactorCh4;\n\n        const g159Element = item.G159;\n        const ipccEmissionFactorN2o = g159Element\n          ? {\n              comments: g159Element.G12,\n              sourceOfData: g159Element.G8,\n              justification: g159Element.G10,\n              purposeOfData: g159Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].ipccEmissionFactorN2o = ipccEmissionFactorN2o;\n\n        const g164Element = item.G164;\n        const generalinputsInsituBsl = g164Element\n          ? {\n              comments: g164Element.G12,\n              sourceOfData: g164Element.G8,\n              justification: g164Element.G10,\n              purposeOfData: g164Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].generalinputsInsituBsl = generalinputsInsituBsl;\n\n        const g165Element = item.G165;\n        const generalinputsSoilErosion = g165Element\n          ? {\n              comments: g165Element.G12,\n              sourceOfData: g165Element.G8,\n              justification: g165Element.G10,\n              purposeOfData: g165Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].generalinputsSoilErosion = generalinputsSoilErosion;\n\n        const g166Element = item.G166;\n        const ghgEmissionProxyBaseline = g166Element\n          ? {\n              comments: g166Element.G12,\n              sourceOfData: g166Element.G8,\n              justification: g166Element.G10,\n              purposeOfData: g166Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].ghgEmissionProxyBaseline = ghgEmissionProxyBaseline;\n\n        const g157Element = item.G157;\n        const netShrubCarbonStockChange = g157Element\n          ? {\n              comments: g157Element.G12,\n              sourceOfData: g157Element.G8,\n              justification: g157Element.G10,\n              purposeOfData: g157Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].netShrubCarbonStockChange = netShrubCarbonStockChange;\n\n        const g154Element = item.G154;\n        const emissionReductionStockLoss = g154Element\n          ? {\n              comments: g154Element.G12,\n              sourceOfData: g154Element.G8,\n              justification: g154Element.G10,\n              purposeOfData: g154Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].emissionReductionStockLoss = emissionReductionStockLoss;\n\n        const g161Element = item.G161;\n        const generalinputsSoilWxcavation = g161Element\n          ? {\n              comments: g161Element.G12,\n              sourceOfData: g161Element.G8,\n              justification: g161Element.G10,\n              purposeOfData: g161Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].generalinputsSoilWxcavation = generalinputsSoilWxcavation;\n\n        const g160Element = item.G160;\n        const co2EmissionsBaselineScenario = g160Element\n          ? {\n              comments: g160Element.G12,\n              sourceOfData: g160Element.G8,\n              justification: g160Element.G10,\n              purposeOfData: g160Element.G11,\n            }\n          : null;\n\n        json.otherJsonContents.climate.monitoring.dataAndParameterForValidation[\n          INSTANCE_NAME\n        ].co2EmissionsBaselineScenario = co2EmissionsBaselineScenario;\n      });\n\n      json.useManualCalculation = false;\n\n      project_details?.buffer_zones?.forEach((buffer_zone) => {\n        const INSTANCE_NAME = buffer_zone.G6;\n\n        json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.bufferZones[\n          INSTANCE_NAME\n        ] = buffer_zone.G7;\n      });\n\n      project_details?.temporal_boundaries_pd?.forEach(\n        (temporal_boundaries) => {\n          const INSTANCE_NAME = temporal_boundaries.G6;\n          //console.log('Instance_name', INSTANCE_NAME);\n\n          json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.socCapApproachJustification[\n            INSTANCE_NAME\n          ] = temporal_boundaries.G10;\n          json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.emissionReductionJustification[\n            INSTANCE_NAME\n          ] = temporal_boundaries.G12;\n        },\n      );\n\n      project_details?.G363?.forEach((approach) => {\n        const INSTANCE_NAME = approach.G5;\n\n        json.otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.soilCH4Approach[\n          INSTANCE_NAME\n        ] = approach.G6;\n      });\n\n      project_details?.G378?.forEach((approach) => {\n        const INSTANCE_NAME = approach.G5;\n\n        json.otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.soilN2OApproach[\n          INSTANCE_NAME\n        ] = approach.G6;\n      });\n\n      project_details?.G347?.forEach((approach) => {\n        const INSTANCE_NAME = approach.G5;\n\n        json.otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.co2EmissionsFromSoilInSitu.soilInsituApproach[\n          INSTANCE_NAME\n        ] = approach.G6;\n      });\n\n      project_details?.G422?.forEach((item) => {\n        const INSTANCE_NAME = item.G16;\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.claimable[\n          INSTANCE_NAME\n        ] = item.claimable_applicable;\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweCapJustification[\n          INSTANCE_NAME\n        ] = item.G9;\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.nerrweCap[\n          INSTANCE_NAME\n        ] = item.G8;\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.frpTextArea[\n          INSTANCE_NAME\n        ] = item.G12;\n\n        json.otherJsonContents.climate.quantification.quantificationData.netGhgEmissionReductionsAndRemovals.fireReductionPremiumJustification[\n          INSTANCE_NAME\n        ] = item.G13;\n\n        //projectBoundary\n        json.otherJsonContents.climate.applicationOfMethodology.projectBoundary.socCapApproach[\n          INSTANCE_NAME\n        ] = item.claimable_applicable;\n      });\n\n      const appendixList = [];\n      project_details?.G873?.forEach((item) => {\n        const appendix = {\n          code: item.G7,\n          file: '',\n          title: item.G5,\n          canRemove: null,\n          description: item.G6,\n        };\n\n        appendixList.push(appendix);\n      });\n      json.otherJsonContents.appendix.appendixList = appendixList;\n\n      json.otherJsonContents.biodiversity.exceptionalBenefits.triggerSpeciesPopulationTrends.triggerPopulation =\n        [];\n      project_details?.trigger_species_population?.forEach((item) => {\n        const triggerPopulation = {\n          triggerSpecies: item.G5,\n          populationTrend: item.G6,\n          withProjectScenario: item.G8,\n          withoutProjectScenario: item.G7,\n        };\n        json.otherJsonContents.biodiversity.exceptionalBenefits.triggerSpeciesPopulationTrends.triggerPopulation.push(\n          triggerPopulation,\n        );\n      });\n\n      json.otherJsonContents.community.exceptionalBenefits.benefits =\n        project_details?.shortterm_longterm_community_benefits;\n      json.otherJsonContents.community.exceptionalBenefits.governance =\n        project_details?.governance;\n      json.otherJsonContents.community.exceptionalBenefits.development =\n        project_details?.development;\n      json.otherJsonContents.community.exceptionalBenefits.communication =\n        project_details?.communication;\n      json.otherJsonContents.community.exceptionalBenefits.impactOnWoman =\n        project_details?.impact_on_women;\n\n      json.otherJsonContents.climate.applicationOfMethodology.methodologyDeviations.textareaInputValue =\n        project_details?.methodology_deviations_text_area;\n\n      json.otherJsonContents.community.exceptionalBenefits.benefitSharing = [];\n      project_details?.benefit_sharing?.forEach((item) => {\n        const benefit = {\n          process: item.G5,\n          description: item.G6,\n          placeholder: '',\n        };\n        json.otherJsonContents.community.exceptionalBenefits.benefitSharing.push(\n          benefit,\n        );\n      });\n\n      json.otherJsonContents.climate.quantification.quantificationData.baselineEmission.netGhgEmissionsFromSoilInBaselineScenario.ch4EmissionsFromSoil.fieldCollectedData =\n        project_details?.G369;\n\n      json.otherJsonContents.community.exceptionalBenefits.participationRisks =\n        project_details?.community_participation_risks;\n      json.otherJsonContents.community.exceptionalBenefits.exceptionalCriteria =\n        project_details?.exceptional_community_criteria;\n      json.otherJsonContents.community.exceptionalBenefits.goldLevelValidation =\n        project_details?.G775;\n      json.otherJsonContents.community.exceptionalBenefits.benefitSharingTextBox =\n        project_details?.benefit_sharing_textbox;\n      json.otherJsonContents.community.exceptionalBenefits.optionalCriterionGoldLevel =\n        'no';\n      json.otherJsonContents.biodiversity.exceptionalBenefits.optionalCriterionGoldLevel =\n        'no';\n      json.otherJsonContents.climate.optionalCriterion.optionalCriterionGoldLevel =\n        'no';\n\n      json.otherJsonContents.biodiversity.exceptionalBenefits.goldLevelValidation =\n        project_details?.G842;\n      json.otherJsonContents.biodiversity.exceptionalBenefits.conservationPriorityStatus =\n        project_details?.high_biodiversity_priority_status;\n\n      json.otherJsonContents.biodiversity.biodiversityScenario.conditions =\n        project_details?.G846;\n\n      json.otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.supplyChainProjectProponent.radioButtonConditionValue =\n        project_details?.supplychain_projectproponent_checkbox;\n\n      json.otherJsonContents.projectDetails.doubleClaiming.doubleClaimingPrograms.supplyChainProjectProponent.textareaInputValue =\n        project_details?.supplychain_projectproponenttextarea;\n\n      json.otherJsonContents.projectDetails.projectGoalsDesignAndViability.projectActivitiesAndTheoryOfChange =\n        project_details?.G191;\n\n      json.otherJsonContents.climate.applicationOfMethodology.additionality.nonAnnex =\n        project_details?.non_annex;\n      json.otherJsonContents.climate.applicationOfMethodology.additionality.nonAnnexNoExplanation =\n        project_details?.non_annex_no_explanation;\n      json.otherJsonContents.climate.applicationOfMethodology.additionality.nonAnnexYesExplanation =\n        project_details?.non_annex_yes_explanation;\n\n      ///----------------------------------------------projectProponents-----------------------------------------------------------\n      const projectProponents = [];\n      project_details?.G155?.forEach((item) => {\n        projectProponents.push(item.project_proponent_id);\n      });\n      json.projectProponents = projectProponents;\n      ///----------------------------------------------VCS-----------------------------------------------------------\n      const afoluActivities = [];\n      project_details?.registry_vcs?.vcs_afolu_activities?.forEach((item) =>\n        afoluActivities.push(item),\n      );\n      json.vcs.afoluActivities = afoluActivities;\n\n      const additionalProjectTypes = [];\n      project_details.registry_vcs?.vcs_additional_project_types?.forEach(\n        (item) => additionalProjectTypes.push(item),\n      );\n      json.vcs.additionalProjectTypes = additionalProjectTypes;\n\n      const ccb_distinctions = [];\n      project_details?.registry_ccb?.ccb_distinctions?.forEach((item) =>\n        ccb_distinctions.push(item),\n      );\n      json.ccb.distinctions = ccb_distinctions;\n\n      const ccbVerifierList = [];\n      project_details?.registry_ccb?.ccb_verification?.forEach((item) =>\n        ccbVerifierList.push(item),\n      );\n      json.ccb.ccbVerifierList = ccbVerifierList;\n\n      setDeepValue(\n        json,\n        'vcs.projectValidatorId',\n        project_details?.registry_vcs?.vcs_project_validator,\n      );\n\n      setDeepValue(\n        json,\n        'vcs.earlyAction',\n        project_details?.registry_vcs?.vcs_early_action,\n      );\n\n      setDeepValue(\n        json,\n        'ccb.ccbStandard',\n        project_details?.registry_ccb?.ccb_standard,\n      );\n\n      setDeepValue(\n        json,\n        'ccb.ccbStandardName',\n        project_details?.registry_ccb.ccb_standard_name,\n      );\n\n      setDeepValue(\n        json,\n        'ccb.projectTypeId',\n        project_details?.registry_ccb.ccb_project_type,\n      );\n\n      setDeepValue(\n        json,\n        'ccb.auditorSiteVisitStartDate',\n        project_details?.registry_ccb?.ccb_auditor_site_visit_start_date,\n      );\n\n      setDeepValue(\n        json,\n        'ccb.auditorSiteVisitEndDate',\n        project_details?.registry_ccb?.ccb_auditor_site_visit_end_date,\n      );\n\n      setDeepValue(\n        json,\n        'ccb.projectValidatorId',\n        project_details?.registry_ccb?.ccb_project_validator,\n      );\n\n      //------------------------------------------- ghgEmissionReduction -------------------------------------------\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.lta.checkboxValue',\n        project_details?.G410?.lta_checkbox_value,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.loss',\n        null,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.lta.textAreaValue',\n        project_details?.G410?.lta_textbox_value,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.benefit',\n        project_details?.G410?.benefit,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.credits.checkboxValue',\n        project_details?.G410?.credits_checkbox_value,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.credits.textAreaValue',\n        project_details?.G410?.credits_textarea_value,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.harvesting',\n        project_details?.G410?.harvesting,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.riskRating',\n        project_details?.G410?.risk_rating,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.riskReport.checkboxValue',\n        project_details?.G410?.risk_report_checkbox_value,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.quantification.ghgEmissionReduction.riskReport.textAreaValue',\n        project_details?.G410?.risk_report_textarea_value,\n      );\n\n      //------------------------------------------- vm033 -------------------------------------------\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.ifmOrRedd',\n        project_details?.G313,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.projectArea',\n        project_details?.G306,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.commercialForestry',\n        project_details?.G314,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.liveTreeVegetation',\n        project_details?.G307,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.lowerTheWaterTable',\n        project_details?.G315,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.nitrogenFertilizer',\n        project_details?.G318,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.burningOfOrganicSoil',\n        project_details?.G316,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.restoreTidalWetlands',\n        project_details?.G304,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.applicabilityConditions',\n        project_details?.additional_applicability_conditions,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.hydrologicalConnectivity',\n        project_details?.G317,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.rewettingAndFireManagement',\n        project_details?.G309,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.threatOfFrequentOnSiteFires',\n        project_details?.G310,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.projectActivitiesCombination',\n        project_details?.G305,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.prescribedBurningOfHerbaceous',\n        project_details?.G308,\n      );\n\n      setDeepValue(\n        json,\n        'otherJsonContents.climate.applicationOfMethodology.multipleApplicationOfMethodologies.vm0033.afforestationReforestationRevegetation',\n        project_details?.G311,\n      );\n\n      jsons.push(json);\n    });\n  }\n\n  return done((jsons.length > 0 && jsons[0]) || null);\n})();",
                      "documentSigner": "",
                      "idType": "",
                      "tag": "project-description",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "055f84d3-29df-427c-8011-24741cbbba83",
                  "blockType": "interfaceStepBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "type": "blank"
                  },
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "cyclic": true,
                  "onErrorAction": "no-action",
                  "tag": "new_project",
                  "children": [
                    {
                      "id": "aaa78a11-c00b-4669-9022-bd2971504d70",
                      "blockType": "requestVcDocumentBlock",
                      "defaultActive": true,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {
                        "privateFields": [],
                        "type": "dialog",
                        "content": "New project",
                        "dialogContent": "New project",
                        "description": "New project"
                      },
                      "idType": "UUID",
                      "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "onErrorAction": "no-action",
                      "presetFields": [],
                      "tag": "add_project_bnt",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "2b8e4132-1c5e-49fc-b6aa-26b40b7c23b5",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "options": [],
                      "dataSource": "hedera",
                      "documentType": "vc",
                      "topic": "Project",
                      "entityType": "project_form",
                      "tag": "save_project_hedera",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "574168a5-ae6b-4736-8570-2fad76413915",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {},
                      "dataType": "",
                      "entityType": "project_form",
                      "options": [],
                      "onErrorAction": "no-action",
                      "dataSource": "database",
                      "documentType": "vc",
                      "stopPropagation": true,
                      "tag": "save_project",
                      "children": [],
                      "events": [
                        {
                          "target": "AR_tool_14_project",
                          "source": "save_project",
                          "input": "input_ar_tool_14",
                          "output": "RunEvent",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": []
                    },
                    {
                      "id": "49bdf9c9-f63c-44ab-8351-4a9785b8bc9a",
                      "blockType": "tool",
                      "defaultActive": true,
                      "hash": "HRGTPWpYGEsoJ9T8uM8t1fUuqRcPjKvZbfyYCaURRH2N",
                      "messageId": "1753864157.889867000",
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "Role": "Project_Proponent",
                      "tag": "AR_tool_14_project",
                      "children": [],
                      "events": [
                        {
                          "target": "AR_tool_05_project",
                          "source": "AR_tool_14_project",
                          "input": "input_ar_tool_05",
                          "output": "output_ar_tool_14",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": [],
                      "variables": [
                        {
                          "name": "Role",
                          "description": "",
                          "type": "Role"
                        }
                      ],
                      "inputEvents": [
                        {
                          "name": "input_ar_tool_14",
                          "description": ""
                        }
                      ],
                      "outputEvents": [
                        {
                          "name": "output_ar_tool_14",
                          "description": ""
                        }
                      ],
                      "innerEvents": []
                    },
                    {
                      "id": "18a23382-374b-49a9-9274-09d950e94775",
                      "blockType": "tool",
                      "defaultActive": true,
                      "hash": "43EKpBBf4ZDMqhF5XwEroA1kKA2pSA3qvgDf5ni8tUEF",
                      "messageId": "1747119324.564353000",
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "Role": "Project_Proponent",
                      "tag": "AR_tool_05_project",
                      "children": [],
                      "events": [
                        {
                          "target": "calculate_project_fields",
                          "source": "AR_tool_05_project",
                          "input": "RunEvent",
                          "output": "output_ar_tool_05",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": [],
                      "variables": [
                        {
                          "name": "Role",
                          "description": "",
                          "type": "Role"
                        }
                      ],
                      "inputEvents": [
                        {
                          "name": "input_ar_tool_05",
                          "description": ""
                        }
                      ],
                      "outputEvents": [
                        {
                          "name": "output_ar_tool_05",
                          "description": ""
                        }
                      ],
                      "innerEvents": []
                    },
                    {
                      "id": "4b02c4d7-faec-4519-a1b1-ab1b9353ea9b",
                      "blockType": "customLogicBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "expression": "const SOIL_INSITU_APPROACH = ['Proxies', 'Field-collected data', 'Others'];\nconst SOIL_N2O_APPROACH = ['Proxies', 'IPCC emission factors', 'Others'];\nconst SOIL_CH4_APPROACH = ['Proxies', 'IPCC emission factors', 'Others'];\nconst const_12_by_44 = 0.2727272727272727; // 12/44\nconst const_44_by_12 = 3.6666666666666665; // 44/12\n\nfunction adjustValues(document) {\n    return document;\n}\n\nfunction getStartYear(yearlyDataArray) {\n    if (!yearlyDataArray || yearlyDataArray.length === 0) return null;\n    // Find the minimum value of year_t\n    return Math.min(...yearlyDataArray.map(rec => Number(rec.year_t)));\n}\n\nfunction getProjectBoundaryValue(data, key) {\n    return data.project_boundary_baseline_scenario?.[key]?.included ??\n        data.project_boundary_project_scenario?.[key]?.included ??\n        undefined;\n}\n\nfunction getQuantificationValue(data, key) {\n    return data?.quantification_approach?.[key] ?? undefined;\n}\n\nfunction getIndividualParam(data, key) {\n    return data?.individual_parameters?.[key] ?? undefined;\n}\n\nfunction getMonitoringValue(data, key) {\n    return data?.monitoring_period_inputs?.[key] ?? undefined;\n}\n\nfunction getWoodProductValue(data, key) {\n    return data?.project_boundary?.project_boundary_project_scenario?.project_wood_products?.wood_product_project_scenario?.[key] ?? undefined;\n}\n\nfunction processMonitoringSubmergence(subInputs = {}) {\n    const years = subInputs.submergence_monitoring_data ?? [];\n\n    for (const yrRec of years) {\n        const { monitoring_year, submergence_measurements_for_each_stratum: strata = [] } = yrRec;\n\n        for (const s of strata) {\n            const {\n                stratum_i,\n                is_submerged,\n                submergence_T,\n                area_submerged_percentage,\n                C_BSL_agbiomass_i_t_ar_tool_14,\n                C_BSL_agbiomass_i_t_to_T_ar_tool_14,\n                delta_C_BSL_agbiomass_i_t\n            } = s;\n\n            if (is_submerged) {\n                const tempDelta = (C_BSL_agbiomass_i_t_ar_tool_14 - C_BSL_agbiomass_i_t_to_T_ar_tool_14) / submergence_T;\n                const tempDeltaFinal = tempDelta * area_submerged_percentage;\n                if (tempDeltaFinal < 0) {\n                    s.delta_C_BSL_agbiomass_i_t = 0;\n                } else {\n                    s.delta_C_BSL_agbiomass_i_t = tempDeltaFinal;\n                }\n            } else {\n                s.delta_C_BSL_agbiomass_i_t = 0;\n            }\n        }\n    }\n}\n\nfunction getDeltaCBSLAGBiomassForStratumAndYear(\n    subInputs = {},\n    stratumId,\n    year\n) {\n    const results = [];\n\n    for (const yrRec of subInputs.submergence_monitoring_data ?? []) {\n        // Walk every monitoring-year record\n        for (const s of yrRec.submergence_measurements_for_each_stratum ?? []) {\n            if (String(s.stratum_i) === String(stratumId) && (year < yrRec.monitoring_year)) {\n                results.push({\n                    year: yrRec.monitoring_year,\n                    delta: s.delta_C_BSL_agbiomass_i_t,\n                });\n            }\n        }\n    }\n\n    return results.length ? results : [{ year: null, delta: 0 }];\n}\n\n\n\nfunction computeDeductionAllochBaseline(params) {\n    const {\n        baseline_soil_SOC,\n        soil_insitu_approach,\n        soil_type, // soil type\n        AU5,\n        AV5,\n        BB5\n    } = params;\n\n    if (baseline_soil_SOC !== true) return 0;\n    if (soil_type === \"Peatsoil\") return 0;\n\n    const fraction = AV5 / 100;\n\n    if (soil_insitu_approach === \"Proxies\" || soil_insitu_approach === \"Field-collected data\") {\n        return AU5 * fraction;\n    }\n\n    return BB5 * fraction;\n}\n\nfunction computeDeductionAllochProject(params) {\n    const {\n        project_soil_SOC,\n        soil_insitu_approach,\n        soil_type, // soil type\n        AK5,\n        AL5,\n        AR5\n    } = params;\n\n    if (project_soil_SOC !== true) return 0;\n    if (soil_type === \"Peatsoil\") return 0;\n\n    const fraction = AL5 / 100;\n\n    if (soil_insitu_approach === \"Proxies\" || soil_insitu_approach === \"Field-collected data\") {\n        return AK5 * fraction;\n    }\n\n    return AR5 * fraction;\n}\n\n\nfunction getFireReductionPremiumPerYear(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.fire_reduction_premium_per_year ?? 0;\n}\n\nfunction getGHGBSL(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_BSL ?? 0;\n}\n\nfunction getGHGWPS(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_WPS ?? 0;\n}\n\nfunction getGHGBSLBiomass(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_BSL_biomass ?? 0;\n}\n\nfunction getGHGWPSBiomass(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_WPS_biomass ?? 0;\n}\n\nfunction calculateNetERRChange(O6, O5, T6, T5, U6) {\n    if (O6 - O5 === 0) {\n        return 0;\n    }\n    return (T6 - T5) * U6;\n}\n\nfunction calculateNetVCU(O6, O5, V6) {\n    return (O6 - O5) - V6;\n}\n\nfunction calculatePDTSDT(baseline, isProjectQuantifyBSLReduction, temporalBoundary, crediting_period) {\n    if (isProjectQuantifyBSLReduction) {\n        // Always work on the *earliest* year, regardless of array order\n        const baselineEmissionsSorted = (baseline.yearly_data_for_baseline_GHG_emissions || [])\n            .slice() // Prevent mutation of original array\n            .sort((a, b) => a.year_t - b.year_t);\n\n        if (!baselineEmissionsSorted.length) return;\n\n        baselineEmissionsSorted[0].annual_stratum_parameters.forEach(stratum => {\n            const sc = stratum.stratum_characteristics ?? {};\n            const asl = stratum.annual_stratum_level_parameters ?? {};\n\n            const META_PEAT = {\n                type: temporalBoundary[0]?.peat_depletion_time?.type,\n                '@context': temporalBoundary[0]?.peat_depletion_time?.['@context'] ?? [],\n            };\n\n            const META_SDT = {\n                type: temporalBoundary[0]?.soil_organic_carbon_depletion_time?.type,\n                '@context': temporalBoundary[0]?.soil_organic_carbon_depletion_time?.['@context'] ?? [],\n            };\n\n            const META_TEMPORAL = {\n                type: temporalBoundary?.[0]?.type,\n                '@context': temporalBoundary?.[0]?.['@context'] ?? [],\n            };\n\n            const {\n                soil_disturbance_type,\n                drained_20_yr,\n                significant_soil_erosion_as_non_peat_soil,\n                RateCloss_BSL_i\n            } = sc;\n\n            let SDT = {};\n            let PDT = {};\n\n            SDT.CBSL_i_t0 =\n                (isProjectQuantifyBSLReduction && sc.is_project_quantify_BSL_reduction)\n                    ? sc.depth_soil_i_t0 * sc.VC_I_mineral_soil_portion * 10\n                    : 0;\n\n            if (isProjectQuantifyBSLReduction && sc.is_project_quantify_BSL_reduction) {\n                if (significant_soil_erosion_as_non_peat_soil || drained_20_yr) {\n                    SDT.t_SDT_BSL_i = 0;\n                } else {\n                    const duration = crediting_period - (sc.soil_type_t0 === 'Peatsoil'\n                        ? (sc.depth_peat_i_t0 / sc.Ratepeatloss_BSL_i)\n                        : 0\n                    );\n                    if (duration > 0) {\n                        SDT.t_SDT_BSL_i = soil_disturbance_type === \"Erosion\"\n                            ? 5\n                            : (RateCloss_BSL_i !== 0 ? SDT.CBSL_i_t0 / RateCloss_BSL_i : 0); // avoid division by zero\n                    }\n                }\n            } else {\n                SDT.t_SDT_BSL_i = 0;\n            }\n\n            if (sc.soil_type_t0 === 'Peatsoil' && sc.is_project_quantify_BSL_reduction) {\n                PDT.t_PDT_BSL_i = sc.depth_peat_i_t0 / sc.Ratepeatloss_BSL_i;\n                PDT.start_PDT = 0;\n                PDT.end_PDT = PDT.t_PDT_BSL_i;\n            } else {\n                PDT.t_PDT_BSL_i = 0;\n                PDT.start_PDT = 0;\n                PDT.end_PDT = 0;\n            }\n\n            SDT.start_PDT = PDT.start_PDT;\n            SDT.end_PDT = Math.min(PDT.end_PDT, crediting_period);\n\n            if (SDT.t_SDT_BSL_i > 0) {\n                SDT.start_SDT = SDT.end_PDT;\n            } else {\n                SDT.start_SDT = 0;\n            }\n\n            SDT.end_SDT = SDT.start_SDT + SDT.t_SDT_BSL_i;\n\n            temporalBoundary.push({\n                stratum_i: stratum.stratum_i,\n                peat_depletion_time: {\n                    \"t_PDT_BSL_i\": PDT.t_PDT_BSL_i,\n                    \"start_PDT\": PDT.start_PDT,\n                    \"end_PDT\": PDT.end_PDT,\n                    ...META_PEAT,\n                },\n                soil_organic_carbon_depletion_time: {\n                    \"t_SDT_BSL_i\": SDT.t_SDT_BSL_i,\n                    'CBSL_i_t0': SDT.CBSL_i_t0,\n                    \"start_SDT\": SDT.start_SDT,\n                    \"end_SDT\": SDT.end_SDT,\n                    \"start_PDT\": SDT.start_PDT,\n                    \"end_PDT\": SDT.end_PDT,\n                    ...META_SDT,\n                },\n                ...META_TEMPORAL\n            });\n        });\n\n        temporalBoundary.shift();\n    }\n}\n\nfunction getEndPDTPerStratum(temporal_boundary, stratum_i) {\n    const stratumTemporalBoundary = temporal_boundary.find(\n        (boundary) => boundary.stratum_i === stratum_i\n    );\n\n    if (stratumTemporalBoundary) {\n        return stratumTemporalBoundary.soil_organic_carbon_depletion_time.end_PDT;\n    }\n\n    return 0;\n}\n\nfunction getEndSDTPerStratum(temporal_boundary, stratum_i) {\n    const stratumTemporalBoundary = temporal_boundary.find(\n        (boundary) => boundary.stratum_i === stratum_i\n    );\n\n    if (stratumTemporalBoundary) {\n        return stratumTemporalBoundary.soil_organic_carbon_depletion_time.end_SDT;\n    }\n\n    return 0;\n}\n\nfunction calculate_peat_strata_input_coverage_100_years(data, strata) {\n    const sum_of_100_years = data\n        .filter(row => row.stratum_i === strata)\n        .reduce((acc, row) => {\n            return acc + (row.ratepeatloass_WPS_i_t || 0); // default to 0 if value is undefined\n        }, 0);\n\n    return sum_of_100_years;\n}\n\nfunction calculate_non_peat_strata_input_coverage_100_years(data, strata) {\n    const sum_of_100_years = data\n        .filter(row => row.stratum_i === strata)\n        .reduce((acc, row) => {\n            return acc + (row.rateCloss_WPS_i_t || 0); // default to 0 if value is undefined\n        }, 0);\n\n    return sum_of_100_years;\n}\n\nfunction getCBSL_i_t0(temporalBoundary = [], strata) {\n    const rec = temporalBoundary.find(\n        r => String(r.stratum_i) === String(strata)\n    );\n    return rec?.soil_organic_carbon_depletion_time?.CBSL_i_t0 ?? 0;\n}\n\n\nfunction calculateRemainingPercentage(match, D41) {\n    try {\n        if (!match || match === 0) throw new Error(\"Invalid or zero denominator\");\n\n        return 100 - (D41 / match);\n    } catch {\n        return 100;\n    }\n}\n\n\n\nfunction totalStockApproach(\n    baseline,\n    total_stock_approach_parameters,\n    peat_strata_input_coverage_100_years,\n    non_peat_strata_input_coverage_100_years,\n    temporal_boundary\n) {\n    let sumWPS = 0;   // Σ C_WPS_i_t100 × A_WPS_i_t100\n    let sumBSL = 0;   // Σ C_BSL_i_t100 × A_BSL_i_t100\n\n    // ── iterate over each stratum in the first-year baseline record ──\n    baseline.yearly_data_for_baseline_GHG_emissions[0].annual_stratum_parameters\n        .forEach((stratum) => {\n            const { stratum_i } = stratum;\n            const charac = stratum.stratum_characteristics ?? {};\n\n            // ---------- guard against undefined / non-numeric inputs ----------\n            const depth_peat_i_t0 = Number(charac.depth_peat_i_t0) || 0;\n            const VC_I_peat_portion = Number(charac.VC_I_peat_portion) || 0;\n            const VC_I_mineral_soil_portion = Number(charac.VC_I_mineral_soil_portion) || 0;\n            const Ratepeatloss_BSL_i = Number(charac.Ratepeatloss_BSL_i) || 0;\n            const RateCloss_BSL_i = Number(charac.RateCloss_BSL_i) || 0;\n            const A_WPS_i_t100 = Number(charac.A_WPS_i_t100) || 0;\n            const A_BSL_i_t100 = Number(charac.A_BSL_i_t100) || 0;\n\n            // ---------- derived quantities ----------\n            const depth_peat_WPS_t100 =\n                depth_peat_i_t0 -\n                calculate_peat_strata_input_coverage_100_years(\n                    peat_strata_input_coverage_100_years,\n                    stratum_i\n                );\n\n            const C_WPS_i_t100_organic_soil =\n                charac.soil_type_t0 === \"Peatsoil\"\n                    ? depth_peat_WPS_t100 * VC_I_peat_portion * 10\n                    : 0;\n\n            const C_WPS_i_t100_mineral_soil =\n                getCBSL_i_t0(temporal_boundary, stratum_i) -\n                calculate_non_peat_strata_input_coverage_100_years(\n                    non_peat_strata_input_coverage_100_years,\n                    stratum_i\n                );\n\n            const C_WPS_i_t100 =\n                C_WPS_i_t100_organic_soil + C_WPS_i_t100_mineral_soil;\n\n            const depth_peat_BSL_t100 =\n                depth_peat_i_t0 - 100 * Ratepeatloss_BSL_i;\n\n            const C_BSL_i_t100_organic_soil =\n                charac.soil_type_t0 === \"Peatsoil\"\n                    ? depth_peat_BSL_t100 * VC_I_peat_portion * 10\n                    : 0;\n\n            const remaining_years_after_peat_depletion_BSL =\n                calculateRemainingPercentage(Ratepeatloss_BSL_i, depth_peat_i_t0);\n\n            const C_BSL_i_t100_mineral_soil =\n                getCBSL_i_t0(temporal_boundary, stratum_i) -\n                remaining_years_after_peat_depletion_BSL * RateCloss_BSL_i;\n\n            const C_BSL_i_t100 =\n                charac.soil_type_t0 === \"Peatsoil\"\n                    ? C_BSL_i_t100_organic_soil\n                    : C_BSL_i_t100_mineral_soil;\n\n            // ---------- accumulate sums ----------\n            sumWPS += C_WPS_i_t100 * A_WPS_i_t100;\n            sumBSL += C_BSL_i_t100 * A_BSL_i_t100;\n\n            // ---------- push per-stratum record ----------\n            total_stock_approach_parameters.push({\n                stratum_i,\n                C_WPS_i_t100,\n                depthpeat_WPS_i_t100: Math.max(depth_peat_WPS_t100, 0),\n                C_WPS_i_t100_organic_soil,\n                C_WPS_i_t100_mineral_soil: Math.max(C_WPS_i_t100_mineral_soil, 0),\n                Depthpeat_BSL_i_t100: Math.max(depth_peat_BSL_t100, 0),\n                C_BSL_i_t100_organic_soil,\n                remaining_years_after_peat_depletion_BSL,\n                C_BSL_i_t100_mineral_soil:\n                    Math.max(\n                        getCBSL_i_t0(temporal_boundary, stratum_i) -\n                        100 * RateCloss_BSL_i,\n                        0\n                    ),\n                C_BSL_i_t100,\n                type: total_stock_approach_parameters?.[0]?.type,\n                \"@context\": total_stock_approach_parameters?.[0]?.[\"@context\"] ?? [],\n            });\n        });\n\n    // drop the template element that lives at index 0\n    total_stock_approach_parameters.shift();\n\n    // ---------- decide if wetland carbon stocks are ≥ 105 % ----------\n    const condition = sumWPS >= sumBSL * 1.05;\n\n    return {\n        condition,\n        sumWPS,\n        sumBSL,\n        diff: condition ? sumWPS - sumBSL : 0,\n    };\n}\n\n\nfunction stockLossApproach(baseline, stock_loss_approach_parameters, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary) {\n    baseline.yearly_data_for_baseline_GHG_emissions[0].annual_stratum_parameters.forEach(stratum => {\n        const { stratum_i } = stratum;\n        const META = {\n            type: stock_loss_approach_parameters?.[0]?.type,\n            '@context': stock_loss_approach_parameters?.[0]?.['@context'] ?? [],\n        };\n\n        const total_peat_volume_loss = calculate_peat_strata_input_coverage_100_years(peat_strata_input_coverage_100_years, stratum_i) * stratum.stratum_characteristics.VC_I_peat_portion;\n        const Closs_BSL_t100_organic_soil = 10 * 100 * (stratum.stratum_characteristics.Ratepeatloss_BSL_i * stratum.stratum_characteristics.VC_I_peat_portion);\n        const Closs_WPS_t100_organic_soil = 10 * total_peat_volume_loss;\n        const total_carbon_loss_volume = calculate_non_peat_strata_input_coverage_100_years(non_peat_strata_input_coverage_100_years, stratum_i) * stratum.stratum_characteristics.VC_I_mineral_soil_portion;\n        const Closs_BSL_t100_mineral_soil = 10 * 100 * (stratum.stratum_characteristics.RateCloss_BSL_i * stratum.stratum_characteristics.VC_I_mineral_soil_portion);\n        const Closs_WPS_t100_mineral_soil = 10 * total_carbon_loss_volume;\n        const Closs_BSL_i_t100 = stratum.stratum_characteristics.soil_type_t0 === 'Peatsoil' ? Closs_BSL_t100_organic_soil : Closs_BSL_t100_mineral_soil;\n        const Closs_WPS_i_t100 = stratum.stratum_characteristics.soil_type_t0 === 'Peatsoil' ? Closs_WPS_t100_organic_soil : Closs_WPS_t100_mineral_soil;\n        const total_baseline_carbon_loss = Closs_BSL_i_t100 * stratum.stratum_characteristics.A_BSL_i;\n        const total_project_carbon_loss = Closs_WPS_i_t100 * stratum.stratum_characteristics.A_WPS_i;\n\n        stock_loss_approach_parameters.push({\n            \"stratum_i\": stratum_i,\n            \"total_peat_volume_loss\": total_peat_volume_loss,\n            \"Closs_BSL_t100_organic_soil\": Closs_BSL_t100_organic_soil,\n            \"Closs_WPS_t100_organic_soil\": Closs_WPS_t100_organic_soil,\n            \"total_carbon_loss_volume\": total_carbon_loss_volume,\n            \"Closs_BSL_t100_mineral_soil\": Closs_BSL_t100_mineral_soil,\n            \"Closs_WPS_t100_mineral_soil\": Closs_WPS_t100_mineral_soil,\n            \"Closs_BSL_i_t100\": Closs_BSL_i_t100,\n            \"Closs_WPS_i_t100\": Closs_WPS_i_t100,\n            \"total_baseline_carbon_loss\": total_baseline_carbon_loss,\n            \"total_project_carbon_loss\": total_project_carbon_loss,\n            ...META\n        })\n\n    })\n    stock_loss_approach_parameters.shift();\n\n    const total_baseline_carbon_loss_sum = stock_loss_approach_parameters.reduce((acc, curr) => acc + curr.total_baseline_carbon_loss, 0);\n    const total_project_carbon_loss_sum = stock_loss_approach_parameters.reduce((acc, curr) => acc + curr.total_project_carbon_loss, 0);\n\n    return {\n        total_baseline_carbon_loss_sum: total_baseline_carbon_loss_sum,\n        total_project_carbon_loss_sum: total_project_carbon_loss_sum,\n        diff: total_baseline_carbon_loss_sum - total_project_carbon_loss_sum\n    }\n}\n\nfunction SOC_MAX_calculation(baseline, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary, approach, ineligible_wetland_areas) {\n    if (approach === 'Total stock approach') {\n        ineligible_wetland_areas.SOC_MAX = totalStockApproach(baseline, ineligible_wetland_areas.total_stock_approach_parameters, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary).diff\n    } else {\n        ineligible_wetland_areas.SOC_MAX = stockLossApproach(baseline, ineligible_wetland_areas.stock_loss_approach_parameters, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary).diff\n    }\n}\n\n\nfunction processBaselineEmissions(baseline, crediting_period, baseline_soil_CH4, soil_CH4_approach, GWP_CH4, baseline_soil_N2O, soil_N2O_approach, GWP_N2O, monitoring_submergence_data, temporal_boundary) {\n\n    // loop through every monitoring year -------------------------------------\n    for (const yearRec of baseline.yearly_data_for_baseline_GHG_emissions ?? []) {\n        const { year_t } = yearRec;\n\n\n\n        // ---- per-stratum loop -------------------------------------------------\n        for (const stratum of yearRec.annual_stratum_parameters ?? []) {\n            const { stratum_i } = stratum;\n\n            const sc = stratum.stratum_characteristics ?? {};\n            const asl = stratum.annual_stratum_level_parameters ?? {};\n\n            asl.delta_CTREE_BSL_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_TREE;\n            asl.delta_CSHRUB_BSL_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_SHRUB;\n            asl.ET_FC_I_t_ar_tool_5_BSL = stratum.ar_tool_05.ET_FC_y;\n            const isProjectQuantifyBSLReduction = sc.is_project_quantify_BSL_reduction\n\n            // Baseline emissions calculations\n\n            if (asl.is_aboveground_non_tree_biomass) {\n                asl.delta_CSHRUB_BSL_i_t_ar_tool_14 = 0;\n            }\n\n            asl.delta_C_BSL_tree_or_shrub_i_t = const_12_by_44 * (asl.delta_CTREE_BSL_i_t_ar_tool_14 + asl.delta_CSHRUB_BSL_i_t_ar_tool_14);\n\n            if (asl.is_aboveground_non_tree_biomass) {\n                asl.delta_C_BSL_herb_i_t = 0;\n            }\n\n            // Net GHG emissions from soil in baseline scenario\n\n            if (asl.is_soil) {\n                const method = sc.co2_emissions_from_soil;\n\n                switch (method) {\n                    case \"Field-collected data\":\n                        asl.GHGBSL_soil_CO2_i_t = -(const_44_by_12 * asl.delta_C_BSL_soil_i_t);\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGBSL_soil_CO2_i_t = asl.GHG_emission_proxy_GHGBSL_soil_CO2_i_t;\n                        break;\n\n                    default:\n                        asl.GHGBSL_soil_CO2_i_t =\n                            (asl.GHGBSL_insitu_CO2_i_t ?? 0) +\n                            (asl.GHGBSL_eroded_CO2_i_t ?? 0) +\n                            (asl.GHGBSL_excav_CO2_i_t ?? 0);\n                }\n            } else {\n                asl.GHGBSL_soil_CO2_i_t = 0;\n            }\n\n            asl.Deduction_alloch = computeDeductionAllochBaseline({\n                baseline_soil_SOC: asl.is_soil,\n                soil_insitu_approach: sc.co2_emissions_from_soil,\n                soil_type: sc.soil_type_t0,\n                AU5: asl.GHGBSL_soil_CO2_i_t,\n                AV5: asl.is_soil ? asl.percentage_C_alloch_BSL : 0,\n                BB5: (asl.is_soil && sc.co2_emissions_from_soil === \"Others\") ? asl.GHGBSL_insitu_CO2_i_t : 0\n            });\n\n            // CH4 emissions from soil\n\n            if (baseline_soil_CH4) {\n                const method = soil_CH4_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGBSL_soil_CH4_i_t = asl.IPCC_emission_factor_ch4_BSL * GWP_CH4;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGBSL_soil_CH4_i_t = asl.GHG_emission_proxy_ch4_BSL * GWP_CH4;\n                        break;\n\n                    default:\n                        asl.GHGBSL_soil_CH4_i_t = asl.CH4_BSL_soil_i_t * GWP_CH4;\n                }\n            } else {\n                asl.GHGBSL_soil_CH4_i_t = 0;\n            }\n\n            // N2O emissions from soil\n\n            if (baseline_soil_N2O) {\n                const method = soil_N2O_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGBSL_soil_N2O_i_t = asl.IPCC_emission_factor_n2o_BSL * GWP_N2O;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGBSL_soil_N2O_i_t = asl.N2O_emission_proxy_BSL * GWP_N2O;\n                        break;\n\n                    default:\n                        asl.GHGBSL_soil_N2O_i_t = asl.N2O_BSL_soil_I_t * GWP_N2O;\n                }\n            } else {\n                asl.GHGBSL_soil_N2O_i_t = 0;\n            }\n\n\n            // GHGBSL-soil,i,t (Eq 26)\n\n            const endPDT = isProjectQuantifyBSLReduction ? getEndPDTPerStratum(temporal_boundary, stratum_i) : crediting_period;\n            const endSDT = isProjectQuantifyBSLReduction ? getEndSDTPerStratum(temporal_boundary, stratum_i) : crediting_period;\n\n            if (isProjectQuantifyBSLReduction) {\n                const emissionsArray = baseline.yearly_data_for_baseline_GHG_emissions || [];\n                const startYear = getStartYear(emissionsArray);\n                const period = year_t - startYear + 1;\n\n                if (period > endPDT && period > endSDT) {\n                    asl.GHGBSL_soil_i_t = 0;\n                }\n                else {\n                    asl.GHGBSL_soil_i_t = asl.A_i_t * (asl.GHGBSL_soil_CO2_i_t - asl.Deduction_alloch + asl.GHGBSL_soil_CH4_i_t + asl.GHGBSL_soil_N2O_i_t);\n                }\n            } else {\n                asl.GHGBSL_soil_i_t = asl.A_i_t * (asl.GHGBSL_soil_CO2_i_t - asl.Deduction_alloch + asl.GHGBSL_soil_CH4_i_t + asl.GHGBSL_soil_N2O_i_t);\n            }\n\n            // ∆𝐶𝐵𝑆𝐿−𝑏𝑖𝑜𝑚𝑎𝑠𝑠,𝑖,t (equation 23)\n            const monitoring_submergence = getDeltaCBSLAGBiomassForStratumAndYear(monitoring_submergence_data, stratum_i, yearRec.year_t);\n            asl.delta_C_BSL_biomass_𝑖_t = asl.delta_C_BSL_tree_or_shrub_i_t + asl.delta_C_BSL_herb_i_t - monitoring_submergence[0].delta;\n\n            // 𝐺𝐻𝐺𝐵��𝐿−𝑓𝑢𝑒𝑙,𝑖,t\n            if (asl.is_fossil_fuel_use) {\n                asl.GHGBSL_fuel_i_t = asl.ET_FC_I_t_ar_tool_5_BSL;\n            } else {\n                asl.GHGBSL_fuel_i_t = 0;\n            }\n\n        }\n\n        // ---- per-year calculations -------------------------------------------\n\n        const sum_delta_C_BSL_biomass =\n            yearRec.annual_stratum_parameters\n                .reduce((acc, s) =>\n                    acc + (Number(s.annual_stratum_level_parameters\n                        .delta_C_BSL_biomass_𝑖_t) || 0), 0);\n\n        yearRec.GHG_BSL_biomass = -(sum_delta_C_BSL_biomass * const_44_by_12);\n\n\n        const sum_GHG_BSL_soil =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGBSL_soil_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_BSL_soil = sum_GHG_BSL_soil;\n\n        const sum_GHG_BSL_fuel =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGBSL_fuel_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_BSL_fuel = sum_GHG_BSL_fuel;\n\n    }\n\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL_biomass = acc + rec.GHG_BSL_biomass;\n        return rec.GHG_BSL_biomass;\n    }, 0);\n\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL_soil = acc + rec.GHG_BSL_soil;\n        return rec.GHG_BSL_soil;\n    }, 0);\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL_fuel = acc + rec.GHG_BSL_fuel;\n        return rec.GHG_BSL_fuel;\n    }, 0);\n\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL = rec.GHG_BSL_biomass + rec.GHG_BSL_soil + rec.GHG_BSL_fuel;\n        return rec.GHG_BSL;\n    }, 0);\n}\n\nfunction processProjectEmissions(project, project_soil_CH4, project_soil_CH4_approach, GWP_CH4, project_soil_N2O, soil_N2O_approach, GWP_N2O, EF_N2O_Burn, EF_CH4_Burn, isPrescribedBurningOfBiomass) {\n\n    // loop through every monitoring year -------------------------------------\n    for (const yearRec of project.yearly_data_for_project_GHG_emissions ?? []) {\n        const { year_t } = yearRec;\n\n        // ---- per-stratum loop -------------------------------------------------\n        for (const stratum of yearRec.annual_stratum_parameters ?? []) {\n            const { stratum_i } = stratum;\n\n            const sc = stratum.stratum_characteristics ?? {};\n            const asl = stratum.annual_stratum_level_parameters ?? {};\n\n            asl.delta_C_TREE_PROJ_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_TREE;\n            asl.delta_C_SHRUB_PROJ_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_SHRUB;\n            asl.ET_FC_I_t_ar_tool_5_WPS = stratum.ar_tool_05.ET_FC_y;\n\n            if (asl.is_aboveground_tree_biomass !== true) {\n                asl.delta_C_TREE_PROJ_i_t_ar_tool_14 = 0;\n            }\n\n            if (asl.is_aboveground_non_tree_biomass !== true) {\n                asl.delta_C_SHRUB_PROJ_i_t_ar_tool_14 = 0;\n            }\n\n            asl.delta_C_WPS_tree_or_shrub_i_t = const_12_by_44 * (asl.delta_C_TREE_PROJ_i_t_ar_tool_14 + asl.delta_C_SHRUB_PROJ_i_t_ar_tool_14);\n\n            if (asl.is_aboveground_non_tree_biomass !== true) {\n                asl.delta_C_WPS_herb_i_t = 0;\n            }\n\n            asl.delta_C_WPS_biomass_i_t = asl.delta_C_WPS_tree_or_shrub_i_t + asl.delta_C_WPS_herb_i_t;\n\n            // Net GHG emissions from soil in baseline scenario\n\n            if (asl.is_soil) {\n                const method = sc.co2_emissions_from_soil;\n\n                switch (method) {\n                    case \"Field-collected data\":\n                        asl.GHGWPS_soil_CO2_i_t = -(const_44_by_12 * asl.delta_C_WPS_soil_i_t);\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGWPS_soil_CO2_i_t = asl.GHG_emission_proxy_GHGWPS_soil_CO2_i_t;\n                        break;\n\n                    default:\n                        asl.GHGWPS_soil_CO2_i_t =\n                            (asl.GHGWPS_insitu_CO2_i_t ?? 0) +\n                            (asl.GHGWPS_eroded_CO2_i_t ?? 0) +\n                            (asl.GHGWPS_excav_CO2_i_t ?? 0);\n                }\n            } else {\n                asl.GHGWPS_soil_CO2_i_t = 0;\n            }\n\n            asl.Deduction_alloch_WPS = computeDeductionAllochProject({\n                project_soil_SOC: asl.is_soil,\n                soil_insitu_approach: sc.co2_emissions_from_soil,\n                soil_type: sc.soil_type_t0,\n                AK5: asl.GHGWPS_soil_CO2_i_t,\n                AL5: asl.is_soil ? asl.percentage_C_alloch_WPS : 0,\n                AR5: (asl.is_soil && sc.co2_emissions_from_soil === \"Others\") ? asl.GHGWPS_insitu_CO2_i_t : 0\n            });\n\n            // CH4 emissions from soil\n\n            if (project_soil_CH4) {\n                const method = project_soil_CH4_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGWPS_soil_CH4_i_t = asl.IPCC_emission_factor_ch4_WPS * GWP_CH4;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGWPS_soil_CH4_i_t = asl.GHG_emission_proxy_ch4_WPS * GWP_CH4;\n                        break;\n\n                    default:\n                        asl.GHGWPS_soil_CH4_i_t = asl.CH4_WPS_soil_I_t * GWP_CH4;\n                }\n            } else {\n                asl.GHGWPS_soil_CH4_i_t = 0;\n            }\n\n            // N2O emissions from soil\n            if (project_soil_N2O) {\n                const method = soil_N2O_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGWPS_soil_N2O_i_t = asl.IPCC_emission_factor_n2o_WPS * GWP_N2O;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGWPS_soil_N2O_i_t = asl.N2O_emission_proxy_WPS * GWP_N2O;\n                        break;\n\n                    default:\n                        asl.GHGWPS_soil_N2O_i_t = asl.N2O_WPS_soil_I_t * GWP_N2O;\n                }\n            } else {\n                asl.GHGWPS_soil_N2O_i_t = 0;\n            }\n\n            // GHGWPS-soil,i,t\n            asl.GHGWPS_soil_i_t = asl.A_i_t * (asl.GHGWPS_soil_CO2_i_t - asl.Deduction_alloch_WPS + asl.GHGWPS_soil_CH4_i_t + asl.GHGWPS_soil_N2O_i_t);\n\n            // Net non-CO2 emissions from prescribed burning of herbaceous biomass and shrub in project scenario\n\n            if (asl.is_burning_of_biomass) {\n                asl.CO2_e_N2O_i_t = asl.biomassi_t * EF_N2O_Burn * GWP_N2O * Math.pow(10, -6) * asl.A_i_t;\n                asl.CO2_e_CH4_i_t = asl.biomassi_t * EF_CH4_Burn * GWP_CH4 * Math.pow(10, -6) * asl.A_i_t;\n                asl.GHGWPS_burn_i_t = asl.CO2_e_N2O_i_t + asl.CO2_e_CH4_i_t;\n            } else {\n                asl.GHGWPS_burn_i_t = 0;\n            }\n\n            // 𝐺𝐻𝐺WPS−𝑓𝑢𝑒𝑙,𝑖,t\n            if (asl.is_fossil_fuel_use) {\n                asl.GHGWPS_fuel_i_t = asl.ET_FC_I_t_ar_tool_5_WPS;\n            } else {\n                asl.GHGWPS_fuel_i_t = 0;\n            }\n\n        }\n\n\n        // ---- per-year calculations ------------------------------------------------------\n        const sum_delta_C_WPS_biomass =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.delta_C_WPS_biomass_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_WPS_biomass = -(sum_delta_C_WPS_biomass * const_44_by_12);\n\n        const sum_GHG_WPS_soil =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGWPS_soil_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_WPS_soil = sum_GHG_WPS_soil;\n\n        const sum_GHG_WPS_fuel =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGWPS_fuel_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_WPS_fuel = sum_GHG_WPS_fuel;\n\n        if (isPrescribedBurningOfBiomass) {\n            const sum_GHG_WPS_burn =\n                yearRec.annual_stratum_parameters.reduce(\n                    (acc, s) =>\n                        acc +\n                        (Number(\n                            s.annual_stratum_level_parameters.GHGWPS_burn_i_t\n                        ) || 0),\n                    0\n                );\n\n            yearRec.GHG_WPS_burn = sum_GHG_WPS_burn;\n        } else {\n            yearRec.GHG_WPS_burn = 0;\n        }\n\n        yearRec.GHG_WPS = yearRec.GHG_WPS_biomass + yearRec.GHG_WPS_soil + yearRec.GHG_WPS_fuel + yearRec.GHG_WPS_burn;\n    }\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_biomass = acc + rec.GHG_WPS_biomass;\n        return rec.GHG_WPS_biomass;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_soil = acc + rec.GHG_WPS_soil;\n        return rec.GHG_WPS_soil;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_fuel = acc + rec.GHG_WPS_fuel;\n        return rec.GHG_WPS_fuel;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_burn = acc + rec.GHG_WPS_burn;\n        return rec.GHG_WPS_burn;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS = (rec.GHG_WPS_biomass + rec.GHG_WPS_soil + rec.GHG_WPS_fuel + rec.GHG_WPS_burn) * -1;\n        return rec.GHG_WPS;\n    }, 0);\n}\n\nfunction processNETERR(baseline, project, netErrData, SOC_MAX, emission_reduction_from_stock_loss, fire_reduction_premium, FireReductionPremiumArray, NERRWE_Cap, NERRWE_Max, NERError, allowable_uncert, buffer_percentage) {\n    /* ───────── meta kept from original array (if present) ──────── */\n    const META = {\n        type: netErrData.net_ERR_calculation_per_year?.[0]?.type,\n        '@context': netErrData.net_ERR_calculation_per_year?.[0]?.['@context'] ?? [],\n    };\n\n    /* ───────── aggregate baseline ───────── */\n    const perYear = new Map();                      // key = year_t\n\n    for (const yr of baseline.yearly_data_for_baseline_GHG_emissions ?? []) {\n        const total = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) =>\n                a +\n                +(s.annual_stratum_level_parameters?.GHGBSL_soil_CO2_i_t ?? 0) *\n                +(s.annual_stratum_level_parameters?.A_i_t ?? 0),\n            0,\n        );\n\n        const total_GHG_BSL_SOIL_DEDUCTED_CO2_i_t = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) => {\n                const ghgbsl_soil_co2 = +(s.annual_stratum_level_parameters?.GHGBSL_soil_CO2_i_t ?? 0);\n                const deduction_alloch = +(s.annual_stratum_level_parameters?.Deduction_alloch ?? 0);\n                const a_i_t = +(s.annual_stratum_level_parameters?.A_i_t ?? 0);\n                return a + (ghgbsl_soil_co2 - deduction_alloch) * a_i_t;\n            },\n            0,\n        );\n\n        perYear.set(yr.year_t, {\n            year_t: yr.year_t,\n            sumation_GHG_BSL_soil_CO2_i_A_i: total,\n            sumation_GHG_WPS_soil_CO2_i_A_i: 0,        // will be filled next loop\n            GHG_BSL_SOIL_DEDUCTED_CO2_i_t: total_GHG_BSL_SOIL_DEDUCTED_CO2_i_t\n        });\n    }\n\n    /* ───────── aggregate project ───────── */\n    for (const yr of project.yearly_data_for_project_GHG_emissions ?? []) {\n        const total = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) =>\n                a +\n                +(s.annual_stratum_level_parameters?.GHGWPS_soil_CO2_i_t ?? 0) *\n                +(s.annual_stratum_level_parameters?.A_i_t ?? 0),\n            0,\n        );\n\n        const total_GHG_WPS_SOIL_DEDUCTED_CO2_i_t = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) => {\n                const ghgwps_soil_co2 = +(s.annual_stratum_level_parameters?.GHGWPS_soil_CO2_i_t ?? 0);\n                const deduction_alloch_wps = +(s.annual_stratum_level_parameters?.Deduction_alloch_WPS ?? 0);\n                const a_i_t = +(s.annual_stratum_level_parameters?.A_i_t ?? 0);\n                return a + (ghgwps_soil_co2 - deduction_alloch_wps) * a_i_t;\n            },\n            0,\n        );\n\n        if (!perYear.has(yr.year_t)) {\n            perYear.set(yr.year_t, {\n                year_t: yr.year_t,\n                sumation_GHG_BSL_soil_CO2_i_A_i: 0,\n                sumation_GHG_WPS_soil_CO2_i_A_i: 0,\n                GHG_WPS_SOIL_DEDUCTED_CO2_i_t: 0,\n            });\n        }\n        perYear.get(yr.year_t).sumation_GHG_WPS_soil_CO2_i_A_i = total;\n        perYear.get(yr.year_t).GHG_WPS_SOIL_DEDUCTED_CO2_i_t = total_GHG_WPS_SOIL_DEDUCTED_CO2_i_t;\n    }\n\n    /* ───────── cumulative sums + final array ───────── */\n    let cumBSL = 0;\n    let cumWPS = 0;\n    let cumBSL_DEDUCTED = 0;\n    let cumWPS_DEDUCTED = 0;\n\n    netErrData.net_ERR_calculation_per_year = [...perYear.values()]\n        .sort((a, b) => a.year_t - b.year_t)\n        .map(rec => {\n            cumBSL += rec.sumation_GHG_BSL_soil_CO2_i_A_i;\n            cumWPS += rec.sumation_GHG_WPS_soil_CO2_i_A_i;\n            cumBSL_DEDUCTED += rec.GHG_BSL_SOIL_DEDUCTED_CO2_i_t;\n            cumWPS_DEDUCTED += rec.GHG_WPS_SOIL_DEDUCTED_CO2_i_t;\n            return {\n                year_t: rec.year_t,\n                sumation_GHG_BSL_soil_CO2_i_A_i: cumBSL,\n                sumation_GHG_WPS_soil_CO2_i_A_i: cumWPS,\n                GHG_BSL_SOIL_DEDUCTED_CO2_i_t: cumBSL_DEDUCTED,\n                GHG_WPS_SOIL_DEDUCTED_CO2_i_t: cumWPS_DEDUCTED,\n                ...META,                       // ONLY type + @context copied in\n            };\n        });\n\n    if (emission_reduction_from_stock_loss) {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            const temp_deduction = (rec.sumation_GHG_BSL_soil_CO2_i_A_i - rec.sumation_GHG_WPS_soil_CO2_i_A_i - SOC_MAX);\n            rec.GHG_WPS_soil_deduction = temp_deduction > 0 ? temp_deduction : 0;\n            return rec;\n        }\n        );\n    } else {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            rec.GHG_WPS_soil_deduction = 0;\n            return rec;\n        }\n        );\n    }\n\n    if (fire_reduction_premium) {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            rec.FRP = getFireReductionPremiumPerYear(FireReductionPremiumArray, rec.year_t);\n            return rec;\n        }\n        );\n    }\n    else {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            rec.FRP = 0;\n            return rec;\n        }\n        );\n    }\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.GHG_LK = 0;\n        return rec;\n    });\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.NERRWE = getGHGBSL(baseline.yearly_data_for_baseline_GHG_emissions, rec.year_t) + getGHGWPS(project.yearly_data_for_project_GHG_emissions, rec.year_t) + rec.FRP - rec.GHG_LK - rec.GHG_WPS_soil_deduction;\n        return rec;\n    });\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        if (NERRWE_Cap) {\n            rec.NERRWE_capped = rec.NERRWE <= NERRWE_Max ? rec.NERRWE : NERRWE_Max;\n            rec.NER_t = rec.NERRWE_capped;\n            return rec;\n        } else {\n            rec.NERRWE_capped = rec.NERRWE;\n            rec.NER_t = rec.NERRWE;\n            return rec;\n        }\n    });\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.adjusted_NER_t = rec.NER_t * (1 - NERError + allowable_uncert);\n        return rec;\n    }\n    );\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.NER_stock_t = (rec.GHG_BSL_SOIL_DEDUCTED_CO2_i_t + getGHGBSLBiomass(baseline.yearly_data_for_baseline_GHG_emissions, rec.year_t)) - (rec.GHG_WPS_SOIL_DEDUCTED_CO2_i_t + getGHGWPSBiomass(project.yearly_data_for_project_GHG_emissions, rec.year_t));\n        return rec;\n    }\n    );\n\n    // First, sort by year_t (ascending)\n    const netErrArr = netErrData.net_ERR_calculation_per_year.sort((a, b) => a.year_t - b.year_t);\n\n    netErrArr.forEach((rec, idx, arr) => {\n        if (idx === 0) {\n            rec.buffer_deduction = rec.NER_stock_t * buffer_percentage;\n        } else {\n            const prevRec = arr[idx - 1];\n            rec.buffer_deduction = calculateNetERRChange(\n                rec.adjusted_NER_t,\n                prevRec.adjusted_NER_t,\n                rec.NER_stock_t,\n                prevRec.NER_stock_t,\n                buffer_percentage\n            );\n        }\n    });\n\n\n    netErrArr.forEach((rec, idx, arr) => {\n        if (idx === 0) {\n            rec.VCU = rec.adjusted_NER_t - rec.buffer_deduction;\n        } else {\n            const prevRec = arr[idx - 1];\n            rec.VCU = calculateNetVCU(\n                rec.adjusted_NER_t,\n                prevRec.adjusted_NER_t,\n                rec.buffer_deduction\n            );\n        }\n    });\n\n\n    netErrData.total_VCU_per_instance = calculateTotalVCUPerInstance(netErrData);\n\n}\n\n\nfunction calculateTotalVCUPerInstance(netErrData) {\n    return netErrData.net_ERR_calculation_per_year[0].VCU;\n}\n\n\nfunction processInstance(instance, project_boundary) {\n    const data = instance.project_instance;\n    // Project Boundary\n    const projectBoundary = project_boundary;\n\n    // Project Boundary - Baseline Scenario\n    const BaselineAboveGroundTreeBiomass = getProjectBoundaryValue(projectBoundary, 'baseline_aboveground_tree_biomass');\n    const BaselineAboveGroundNonTreeBiomass = getProjectBoundaryValue(projectBoundary, 'baseline_aboveground_non_tree_biomass');\n    const BaselineBelowGroundBiomass = getProjectBoundaryValue(projectBoundary, 'baseline_below_ground_biomass');\n    const BaselineLitter = getProjectBoundaryValue(projectBoundary, 'baseline_litter');\n    const BaselineDeadWood = getProjectBoundaryValue(projectBoundary, 'baseline_dead_wood');\n    const BaselineSoil = getProjectBoundaryValue(projectBoundary, 'baseline_soil');\n    const BaselineWoodProducts = getProjectBoundaryValue(projectBoundary, 'baseline_wood_products');\n    const BaselineMethaneProductionByMicrobes = getProjectBoundaryValue(projectBoundary, 'baseline_methane_production_by_microbes');\n    const BaselineDenitrificationNitrification = getProjectBoundaryValue(projectBoundary, 'baseline_denitrification_nitrification');\n    const BaselineBurningBiomassOrganicSoil = getProjectBoundaryValue(projectBoundary, 'baseline_burning_of_biomass_and_organic_soil');\n    const BaselineFossilFuelUseCO2 = getProjectBoundaryValue(projectBoundary, 'baseline_fossil_fuel_use_CO2');\n    const BaselineFossilFuelUseCH4 = getProjectBoundaryValue(projectBoundary, 'baseline_fossil_fuel_use_CH4');\n    const BaselineFossilFuelUseN2O = getProjectBoundaryValue(projectBoundary, 'baseline_fossil_fuel_use_N2O');\n\n    // Project Boundary - Project Scenario\n    const ProjectAboveTreeBiomass = getProjectBoundaryValue(projectBoundary, 'project_aboveground_tree_biomass');\n    const ProjectAboveNonTreeBiomass = getProjectBoundaryValue(projectBoundary, 'project_aboveground_non_tree_biomass');\n    const ProjectBelowGroundBiomass = getProjectBoundaryValue(projectBoundary, 'project_below_ground_biomass');\n    const ProjectLitter = getProjectBoundaryValue(projectBoundary, 'project_litter');\n    const ProjectDeadWood = getProjectBoundaryValue(projectBoundary, 'project_dead_wood');\n    const ProjectSoil = getProjectBoundaryValue(projectBoundary, 'project_soil');\n    const ProjectWoodProducts = getProjectBoundaryValue(projectBoundary, 'project_wood_products');\n    const ProjectMethaneProductionByMicrobes = getProjectBoundaryValue(projectBoundary, 'project_methane_production_by_microbes');\n    const ProjectDenitrificationNitrification = getProjectBoundaryValue(projectBoundary, 'project_denitrification_nitrification');\n    const ProjectBurningBiomass = getProjectBoundaryValue(projectBoundary, 'project_burning_of_biomass');\n    const ProjectFossilFuelUseCO2 = getProjectBoundaryValue(projectBoundary, 'project_fossil_fuel_use_CO2');\n    const ProjectFossilFuelUseCH4 = getProjectBoundaryValue(projectBoundary, 'project_fossil_fuel_use_CH4');\n    const ProjectFossilFuelUseN2O = getProjectBoundaryValue(projectBoundary, 'project_fossil_fuel_use_N2O');\n\n\n    // --- Quantification Approach ---\n    const QuantificationCO2EmissionsSoil = getQuantificationValue(data, 'quantification_co2_emissions_soil');\n    const QuantificationCH4EmissionsSoil = getQuantificationValue(data, 'quantification_ch4_emissions_soil');\n    const QuantificationN2OEmissionsSoil = getQuantificationValue(data, 'quantification_n2o_emissions_soil');\n    const QuantificationSOCCapApproach = getQuantificationValue(data, 'quantification_soc_cap_approach');\n    const QuantificationBaselineCO2Reduction = getQuantificationValue(data, 'quantification_baseline_co2_reduction');\n    const QuantificationNERRWEMaxCap = getQuantificationValue(data, 'quantification_nerrwe_max_cap');\n    const QuantificationFireReductionPremium = getQuantificationValue(data, 'quantification_fire_reduction_premium');\n    const FireReductionPremiumArray = QuantificationFireReductionPremium ? getQuantificationValue(data, 'fire_reduction_premium') : [];\n\n\n    // --- Individual Parameters ---\n    const GWP_CH4 = (BaselineMethaneProductionByMicrobes || BaselineBurningBiomassOrganicSoil || ProjectMethaneProductionByMicrobes || ProjectBurningBiomass) ? getIndividualParam(data, 'gwp_ch4') : 0;\n    const GWP_N2O = (BaselineDenitrificationNitrification || BaselineBurningBiomassOrganicSoil || ProjectDenitrificationNitrification || ProjectBurningBiomass) ? getIndividualParam(data, 'gwp_n2o') : 0;\n    const IsBurningOfBiomass = getIndividualParam(data, 'is_burning_of_biomass');\n    const IsNERRWEMaxCap = getIndividualParam(data, 'is_NERRWE_max_cap');\n    const AllowableUncertainty = getIndividualParam(data, 'individual_params_allowable_uncert');\n    const BufferPercent = getIndividualParam(data, 'individual_params_buffer_%');\n    const NERError = getIndividualParam(data, 'individual_params_NER_ERROR');\n    const CreditingPeriod = getIndividualParam(data, 'individual_params_crediting_period');\n    const EF_N2O_Burn = IsBurningOfBiomass ? getIndividualParam(data, 'EF_n20_burn') : 0;\n    const EF_CH4_Burn = IsBurningOfBiomass ? getIndividualParam(data, 'EF_ch4_burn') : 0;\n    const NERRWE_Max = IsNERRWEMaxCap ? getIndividualParam(data, 'NERRWE_max') : 0;\n\n    // --- Monitoring Period Inputs ---\n\n    const IsBaselineAbovegroundNonTreeBiomass = getMonitoringValue(data, 'is_baseline_aboveground_non_tree_biomass');\n    const IsProjectAbovegroundNonTreeBiomass = getMonitoringValue(data, 'is_project_aboveground_non_tree_biomass');\n\n    let BaselineSoilCarbonStockMonitoringData = [];\n    let ProjectSoilCarbonStockMonitoringData = [];\n    let BaselineHerbaceousVegetationMonitoringData = [];\n    let ProjectHerbaceousVegetationMonitoringData = [];\n\n    const SubmergenceMonitoringData = getMonitoringValue(data, 'submergence_monitoring_data');\n    BaselineSoilCarbonStockMonitoringData = (BaselineSoil && QuantificationCO2EmissionsSoil === 'Field-collected data') ? getMonitoringValue(data, 'baseline_soil_carbon_stock_monitoring_data') : [];\n    ProjectSoilCarbonStockMonitoringData = (ProjectSoil && QuantificationCO2EmissionsSoil === 'Field-collected data') ? getMonitoringValue(data, 'project_soil_carbon_stock_monitoring_data') : [];\n    BaselineHerbaceousVegetationMonitoringData = IsBaselineAbovegroundNonTreeBiomass ? getMonitoringValue(data, 'baseline_herbaceous_vegetation_monitoring_data') : [];\n    ProjectHerbaceousVegetationMonitoringData = IsProjectAbovegroundNonTreeBiomass ? getMonitoringValue(data, 'project_herbaceous_vegetation_monitoring_data') : [];\n\n\n    // --- Wood Product Project Scenario ---\n\n    let WoodProductDjCFjBCEF = [];\n    let WoodProductSLFty = [];\n    let WoodProductOfty = [];\n    let WoodProductVexPcomi = [];\n    let WoodProductCAVGTREEi = [];\n\n    // Check if wood product project scenario is present\n    if (ProjectWoodProducts) {\n        WoodProductDjCFjBCEF = getWoodProductValue(data, 'wood_product_Dj_CFj_BCEF');\n        WoodProductSLFty = getWoodProductValue(data, 'wood_product_SLFty');\n        WoodProductOfty = getWoodProductValue(data, 'wood_product_Ofty');\n        WoodProductVexPcomi = getWoodProductValue(data, 'wood_product_Vex_Pcomi');\n        WoodProductCAVGTREEi = getWoodProductValue(data, 'wood_product_CAVG_TREE_i');\n    }\n\n    // --- Monitoring Period Inputs ---\n    processMonitoringSubmergence(data.monitoring_period_inputs);\n\n    // Temporal Boundary\n    const temporalBoundary = data.temporal_boundary;\n    calculatePDTSDT(data.baseline_emissions, QuantificationBaselineCO2Reduction, temporalBoundary, CreditingPeriod);\n\n    // ── Baseline-emission calculations ──────────────────────────────────────\n    processBaselineEmissions(data.baseline_emissions, CreditingPeriod, BaselineMethaneProductionByMicrobes, QuantificationCH4EmissionsSoil, GWP_CH4, BaselineDenitrificationNitrification, QuantificationN2OEmissionsSoil, GWP_N2O, data.monitoring_period_inputs, temporalBoundary);\n\n    // ── Project-emission calculations ───────────────────────────────────────\n    processProjectEmissions(data.project_emissions, ProjectMethaneProductionByMicrobes, QuantificationCH4EmissionsSoil, GWP_CH4, ProjectDenitrificationNitrification, QuantificationN2OEmissionsSoil, GWP_N2O, EF_N2O_Burn, EF_CH4_Burn, ProjectBurningBiomass);\n\n\n    // Total Stock Approach and Stock loss Approach\n    SOC_MAX_calculation(data.baseline_emissions, data.peat_strata_input_coverage_100_years, data.non_peat_strata_input_coverage_100_years, temporalBoundary, QuantificationSOCCapApproach, data.ineligible_wetland_areas);\n\n\n    // ── Net emissions reductions calculations ───────────────────────────────\n    processNETERR(data.baseline_emissions, data.project_emissions, data.net_ERR, data.ineligible_wetland_areas.SOC_MAX, QuantificationBaselineCO2Reduction, QuantificationFireReductionPremium, FireReductionPremiumArray, IsNERRWEMaxCap, NERRWE_Max, NERError, AllowableUncertainty, BufferPercent);\n\n}\n\n\nfunction calc() {\n    const document = documents[0].document;\n\n    const creds = document.credentialSubject;\n\n    let totalVcus = 0;\n\n    for (const cred of creds) {\n        for (const instance of cred.project_data_per_instance) {\n            processInstance(instance, cred.project_boundary);\n            totalVcus += instance.project_instance.net_ERR.total_VCU_per_instance;\n        }\n        cred.total_vcus = totalVcus;\n    }\n\n    done(adjustValues(document.credentialSubject[0]));\n}\n\ncalc();",
                      "documentSigner": "owner",
                      "idType": "UUID",
                      "outputSchema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                      "selectedScriptLanguage": "JAVASCRIPT",
                      "tag": "calculate_project_fields",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "efb0232a-c6bf-48e5-a745-a63f262eb8d8",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "options": [
                        {
                          "name": "status",
                          "value": "Waiting to be Added"
                        }
                      ],
                      "dataSource": "hedera",
                      "documentType": "vc",
                      "topic": "Project",
                      "entityType": "project",
                      "tag": "save_project_auto_hedera",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "c896284f-24d8-4486-87ef-ab0c22220bee",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {},
                      "options": [
                        {
                          "variable": "",
                          "role": "",
                          "name": "status",
                          "value": "Waiting to be Added"
                        }
                      ],
                      "dataType": "",
                      "entityType": "project",
                      "onErrorAction": "no-action",
                      "dataSource": "database",
                      "documentType": "vc",
                      "tag": "save_project_auto",
                      "children": [],
                      "events": [
                        {
                          "target": "project_grid_verra",
                          "source": "save_project_auto",
                          "input": "RefreshEvent",
                          "output": "RefreshEvent",
                          "actor": "",
                          "disabled": false
                        },
                        {
                          "target": "project_grid_pp_2",
                          "source": "save_project_auto",
                          "input": "RefreshEvent",
                          "output": "RefreshEvent",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "5bd81449-7b20-4029-ba2f-bdb8a132dd8d",
                  "blockType": "interfaceStepBlock",
                  "defaultActive": false,
                  "uiMetaData": {
                    "type": "blank"
                  },
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "cyclic": true,
                  "onErrorAction": "no-action",
                  "tag": "new_report",
                  "children": [
                    {
                      "id": "9e5f58f4-5ebf-41ed-900b-22eb175a3891",
                      "blockType": "requestVcDocumentBlock",
                      "defaultActive": true,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {
                        "privateFields": [],
                        "type": "dialog",
                        "content": "Add Report",
                        "dialogContent": "Add Report",
                        "description": "",
                        "buttonClass": "link"
                      },
                      "idType": "UUID",
                      "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "preset": false,
                      "presetFields": [],
                      "presetSchema": "",
                      "onErrorAction": "retry",
                      "errorTimeout": "600",
                      "tag": "add_report_bnt",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "a65a4f09-4a5b-4960-a05b-da593397aa34",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "options": [],
                      "dataSource": "hedera",
                      "documentType": "vc",
                      "topic": "Project",
                      "entityType": "report_form",
                      "tag": "save_report_form_hedera",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "b46b34f2-fb25-4696-a49d-f895c0f3ef68",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {},
                      "dataType": "",
                      "entityType": "report_form",
                      "options": [],
                      "onErrorAction": "no-action",
                      "dataSource": "database",
                      "documentType": "vc",
                      "stopPropagation": true,
                      "tag": "save_report_form",
                      "children": [],
                      "events": [
                        {
                          "target": "AR_tool_14_report",
                          "source": "save_report_form",
                          "input": "input_ar_tool_14",
                          "output": "RunEvent",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": []
                    },
                    {
                      "id": "8ced3453-4709-4cdf-b554-f7a135b5e162",
                      "blockType": "tool",
                      "defaultActive": true,
                      "hash": "HRGTPWpYGEsoJ9T8uM8t1fUuqRcPjKvZbfyYCaURRH2N",
                      "messageId": "1753864157.889867000",
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "Role": "Project_Proponent",
                      "tag": "AR_tool_14_report",
                      "children": [],
                      "events": [
                        {
                          "target": "AR_tool_05_report",
                          "source": "AR_tool_14_report",
                          "input": "input_ar_tool_05",
                          "output": "output_ar_tool_14",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": [],
                      "variables": [
                        {
                          "name": "Role",
                          "description": "",
                          "type": "Role"
                        }
                      ],
                      "inputEvents": [
                        {
                          "name": "input_ar_tool_14",
                          "description": ""
                        }
                      ],
                      "outputEvents": [
                        {
                          "name": "output_ar_tool_14",
                          "description": ""
                        }
                      ],
                      "innerEvents": []
                    },
                    {
                      "id": "8724a2d1-9ebc-44fd-8d93-f129c393de61",
                      "blockType": "tool",
                      "defaultActive": true,
                      "hash": "43EKpBBf4ZDMqhF5XwEroA1kKA2pSA3qvgDf5ni8tUEF",
                      "messageId": "1747119324.564353000",
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "Role": "Project_Proponent",
                      "tag": "AR_tool_05_report",
                      "children": [],
                      "events": [
                        {
                          "target": "calculate_report_fields",
                          "source": "AR_tool_05_report",
                          "input": "RunEvent",
                          "output": "output_ar_tool_05",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": [],
                      "variables": [
                        {
                          "name": "Role",
                          "description": "",
                          "type": "Role"
                        }
                      ],
                      "inputEvents": [
                        {
                          "name": "input_ar_tool_05",
                          "description": ""
                        }
                      ],
                      "outputEvents": [
                        {
                          "name": "output_ar_tool_05",
                          "description": ""
                        }
                      ],
                      "innerEvents": []
                    },
                    {
                      "id": "72e02819-cdbc-4ee9-8f50-d71f79b00986",
                      "blockType": "customLogicBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "expression": "const SOIL_INSITU_APPROACH = ['Proxies', 'Field-collected data', 'Others'];\nconst SOIL_N2O_APPROACH = ['Proxies', 'IPCC emission factors', 'Others'];\nconst SOIL_CH4_APPROACH = ['Proxies', 'IPCC emission factors', 'Others'];\nconst const_12_by_44 = 0.2727272727272727; // 12/44\nconst const_44_by_12 = 3.6666666666666665; // 44/12\n\nfunction adjustValues(document) {\n    return document;\n}\n\nfunction getStartYear(yearlyDataArray) {\n    if (!yearlyDataArray || yearlyDataArray.length === 0) return null;\n    // Find the minimum value of year_t\n    return Math.min(...yearlyDataArray.map(rec => Number(rec.year_t)));\n}\n\nfunction getProjectBoundaryValue(data, key) {\n    return data.project_boundary_baseline_scenario?.[key]?.included ??\n        data.project_boundary_project_scenario?.[key]?.included ??\n        undefined;\n}\n\nfunction getQuantificationValue(data, key) {\n    return data?.quantification_approach?.[key] ?? undefined;\n}\n\nfunction getIndividualParam(data, key) {\n    return data?.individual_parameters?.[key] ?? undefined;\n}\n\nfunction getMonitoringValue(data, key) {\n    return data?.monitoring_period_inputs?.[key] ?? undefined;\n}\n\nfunction getWoodProductValue(data, key) {\n    return data?.project_boundary?.project_boundary_project_scenario?.project_wood_products?.wood_product_project_scenario?.[key] ?? undefined;\n}\n\nfunction processMonitoringSubmergence(subInputs = {}) {\n    const years = subInputs.submergence_monitoring_data ?? [];\n\n    for (const yrRec of years) {\n        const { monitoring_year, submergence_measurements_for_each_stratum: strata = [] } = yrRec;\n\n        for (const s of strata) {\n            const {\n                stratum_i,\n                is_submerged,\n                submergence_T,\n                area_submerged_percentage,\n                C_BSL_agbiomass_i_t_ar_tool_14,\n                C_BSL_agbiomass_i_t_to_T_ar_tool_14,\n                delta_C_BSL_agbiomass_i_t\n            } = s;\n\n            if (is_submerged) {\n                const tempDelta = (C_BSL_agbiomass_i_t_ar_tool_14 - C_BSL_agbiomass_i_t_to_T_ar_tool_14) / submergence_T;\n                const tempDeltaFinal = tempDelta * area_submerged_percentage;\n                if (tempDeltaFinal < 0) {\n                    s.delta_C_BSL_agbiomass_i_t = 0;\n                } else {\n                    s.delta_C_BSL_agbiomass_i_t = tempDeltaFinal;\n                }\n            } else {\n                s.delta_C_BSL_agbiomass_i_t = 0;\n            }\n        }\n    }\n}\n\nfunction getDeltaCBSLAGBiomassForStratumAndYear(\n    subInputs = {},\n    stratumId,\n    year\n) {\n    const results = [];\n\n    for (const yrRec of subInputs.submergence_monitoring_data ?? []) {\n        // Walk every monitoring-year record\n        for (const s of yrRec.submergence_measurements_for_each_stratum ?? []) {\n            if (String(s.stratum_i) === String(stratumId) && (year < yrRec.monitoring_year)) {\n                results.push({\n                    year: yrRec.monitoring_year,\n                    delta: s.delta_C_BSL_agbiomass_i_t,\n                });\n            }\n        }\n    }\n\n    return results.length ? results : [{ year: null, delta: 0 }];\n}\n\n\n\nfunction computeDeductionAllochBaseline(params) {\n    const {\n        baseline_soil_SOC,\n        soil_insitu_approach,\n        soil_type, // soil type\n        AU5,\n        AV5,\n        BB5\n    } = params;\n\n    if (baseline_soil_SOC !== true) return 0;\n    if (soil_type === \"Peatsoil\") return 0;\n\n    const fraction = AV5 / 100;\n\n    if (soil_insitu_approach === \"Proxies\" || soil_insitu_approach === \"Field-collected data\") {\n        return AU5 * fraction;\n    }\n\n    return BB5 * fraction;\n}\n\nfunction computeDeductionAllochProject(params) {\n    const {\n        project_soil_SOC,\n        soil_insitu_approach,\n        soil_type, // soil type\n        AK5,\n        AL5,\n        AR5\n    } = params;\n\n    if (project_soil_SOC !== true) return 0;\n    if (soil_type === \"Peatsoil\") return 0;\n\n    const fraction = AL5 / 100;\n\n    if (soil_insitu_approach === \"Proxies\" || soil_insitu_approach === \"Field-collected data\") {\n        return AK5 * fraction;\n    }\n\n    return AR5 * fraction;\n}\n\n\nfunction getFireReductionPremiumPerYear(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.fire_reduction_premium_per_year ?? 0;\n}\n\nfunction getGHGBSL(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_BSL ?? 0;\n}\n\nfunction getGHGWPS(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_WPS ?? 0;\n}\n\nfunction getGHGBSLBiomass(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_BSL_biomass ?? 0;\n}\n\nfunction getGHGWPSBiomass(data, year_t) {\n    return (data ?? [])\n        .find(r => String(r.year_t) === String(year_t))\n        ?.GHG_WPS_biomass ?? 0;\n}\n\nfunction calculateNetERRChange(O6, O5, T6, T5, U6) {\n    if (O6 - O5 === 0) {\n        return 0;\n    }\n    return (T6 - T5) * U6;\n}\n\nfunction calculateNetVCU(O6, O5, V6) {\n    return (O6 - O5) - V6;\n}\n\nfunction calculatePDTSDT(baseline, isProjectQuantifyBSLReduction, temporalBoundary, crediting_period) {\n    if (isProjectQuantifyBSLReduction) {\n        // Always work on the *earliest* year, regardless of array order\n        const baselineEmissionsSorted = (baseline.yearly_data_for_baseline_GHG_emissions || [])\n            .slice() // Prevent mutation of original array\n            .sort((a, b) => a.year_t - b.year_t);\n\n        if (!baselineEmissionsSorted.length) return;\n\n        baselineEmissionsSorted[0].annual_stratum_parameters.forEach(stratum => {\n            const sc = stratum.stratum_characteristics ?? {};\n            const asl = stratum.annual_stratum_level_parameters ?? {};\n\n            const META_PEAT = {\n                type: temporalBoundary[0]?.peat_depletion_time?.type,\n                '@context': temporalBoundary[0]?.peat_depletion_time?.['@context'] ?? [],\n            };\n\n            const META_SDT = {\n                type: temporalBoundary[0]?.soil_organic_carbon_depletion_time?.type,\n                '@context': temporalBoundary[0]?.soil_organic_carbon_depletion_time?.['@context'] ?? [],\n            };\n\n            const META_TEMPORAL = {\n                type: temporalBoundary?.[0]?.type,\n                '@context': temporalBoundary?.[0]?.['@context'] ?? [],\n            };\n\n            const {\n                soil_disturbance_type,\n                drained_20_yr,\n                significant_soil_erosion_as_non_peat_soil,\n                RateCloss_BSL_i\n            } = sc;\n\n            let SDT = {};\n            let PDT = {};\n\n            SDT.CBSL_i_t0 =\n                (isProjectQuantifyBSLReduction && sc.is_project_quantify_BSL_reduction)\n                    ? sc.depth_soil_i_t0 * sc.VC_I_mineral_soil_portion * 10\n                    : 0;\n\n            if (isProjectQuantifyBSLReduction && sc.is_project_quantify_BSL_reduction) {\n                if (significant_soil_erosion_as_non_peat_soil || drained_20_yr) {\n                    SDT.t_SDT_BSL_i = 0;\n                } else {\n                    const duration = crediting_period - (sc.soil_type_t0 === 'Peatsoil'\n                        ? (sc.depth_peat_i_t0 / sc.Ratepeatloss_BSL_i)\n                        : 0\n                    );\n                    if (duration > 0) {\n                        SDT.t_SDT_BSL_i = soil_disturbance_type === \"Erosion\"\n                            ? 5\n                            : (RateCloss_BSL_i !== 0 ? SDT.CBSL_i_t0 / RateCloss_BSL_i : 0); // avoid division by zero\n                    }\n                }\n            } else {\n                SDT.t_SDT_BSL_i = 0;\n            }\n\n            if (sc.soil_type_t0 === 'Peatsoil' && sc.is_project_quantify_BSL_reduction) {\n                PDT.t_PDT_BSL_i = sc.depth_peat_i_t0 / sc.Ratepeatloss_BSL_i;\n                PDT.start_PDT = 0;\n                PDT.end_PDT = PDT.t_PDT_BSL_i;\n            } else {\n                PDT.t_PDT_BSL_i = 0;\n                PDT.start_PDT = 0;\n                PDT.end_PDT = 0;\n            }\n\n            SDT.start_PDT = PDT.start_PDT;\n            SDT.end_PDT = Math.min(PDT.end_PDT, crediting_period);\n\n            if (SDT.t_SDT_BSL_i > 0) {\n                SDT.start_SDT = SDT.end_PDT;\n            } else {\n                SDT.start_SDT = 0;\n            }\n\n            SDT.end_SDT = SDT.start_SDT + SDT.t_SDT_BSL_i;\n\n            temporalBoundary.push({\n                stratum_i: stratum.stratum_i,\n                peat_depletion_time: {\n                    \"t_PDT_BSL_i\": PDT.t_PDT_BSL_i,\n                    \"start_PDT\": PDT.start_PDT,\n                    \"end_PDT\": PDT.end_PDT,\n                    ...META_PEAT,\n                },\n                soil_organic_carbon_depletion_time: {\n                    \"t_SDT_BSL_i\": SDT.t_SDT_BSL_i,\n                    'CBSL_i_t0': SDT.CBSL_i_t0,\n                    \"start_SDT\": SDT.start_SDT,\n                    \"end_SDT\": SDT.end_SDT,\n                    \"start_PDT\": SDT.start_PDT,\n                    \"end_PDT\": SDT.end_PDT,\n                    ...META_SDT,\n                },\n                ...META_TEMPORAL\n            });\n        });\n\n        temporalBoundary.shift();\n    }\n}\n\nfunction getEndPDTPerStratum(temporal_boundary, stratum_i) {\n    const stratumTemporalBoundary = temporal_boundary.find(\n        (boundary) => boundary.stratum_i === stratum_i\n    );\n\n    if (stratumTemporalBoundary) {\n        return stratumTemporalBoundary.soil_organic_carbon_depletion_time.end_PDT;\n    }\n\n    return 0;\n}\n\nfunction getEndSDTPerStratum(temporal_boundary, stratum_i) {\n    const stratumTemporalBoundary = temporal_boundary.find(\n        (boundary) => boundary.stratum_i === stratum_i\n    );\n\n    if (stratumTemporalBoundary) {\n        return stratumTemporalBoundary.soil_organic_carbon_depletion_time.end_SDT;\n    }\n\n    return 0;\n}\n\nfunction calculate_peat_strata_input_coverage_100_years(data, strata) {\n    const sum_of_100_years = data\n        .filter(row => row.stratum_i === strata)\n        .reduce((acc, row) => {\n            return acc + (row.ratepeatloass_WPS_i_t || 0); // default to 0 if value is undefined\n        }, 0);\n\n    return sum_of_100_years;\n}\n\nfunction calculate_non_peat_strata_input_coverage_100_years(data, strata) {\n    const sum_of_100_years = data\n        .filter(row => row.stratum_i === strata)\n        .reduce((acc, row) => {\n            return acc + (row.rateCloss_WPS_i_t || 0); // default to 0 if value is undefined\n        }, 0);\n\n    return sum_of_100_years;\n}\n\nfunction getCBSL_i_t0(temporalBoundary = [], strata) {\n    const rec = temporalBoundary.find(\n        r => String(r.stratum_i) === String(strata)\n    );\n    return rec?.soil_organic_carbon_depletion_time?.CBSL_i_t0 ?? 0;\n}\n\n\nfunction calculateRemainingPercentage(match, D41) {\n    try {\n        if (!match || match === 0) throw new Error(\"Invalid or zero denominator\");\n\n        return 100 - (D41 / match);\n    } catch {\n        return 100;\n    }\n}\n\n\n\nfunction totalStockApproach(\n    baseline,\n    total_stock_approach_parameters,\n    peat_strata_input_coverage_100_years,\n    non_peat_strata_input_coverage_100_years,\n    temporal_boundary\n) {\n    let sumWPS = 0;   // Σ C_WPS_i_t100 × A_WPS_i_t100\n    let sumBSL = 0;   // Σ C_BSL_i_t100 × A_BSL_i_t100\n\n    // ── iterate over each stratum in the first-year baseline record ──\n    baseline.yearly_data_for_baseline_GHG_emissions[0].annual_stratum_parameters\n        .forEach((stratum) => {\n            const { stratum_i } = stratum;\n            const charac = stratum.stratum_characteristics ?? {};\n\n            // ---------- guard against undefined / non-numeric inputs ----------\n            const depth_peat_i_t0 = Number(charac.depth_peat_i_t0) || 0;\n            const VC_I_peat_portion = Number(charac.VC_I_peat_portion) || 0;\n            const VC_I_mineral_soil_portion = Number(charac.VC_I_mineral_soil_portion) || 0;\n            const Ratepeatloss_BSL_i = Number(charac.Ratepeatloss_BSL_i) || 0;\n            const RateCloss_BSL_i = Number(charac.RateCloss_BSL_i) || 0;\n            const A_WPS_i_t100 = Number(charac.A_WPS_i_t100) || 0;\n            const A_BSL_i_t100 = Number(charac.A_BSL_i_t100) || 0;\n\n            // ---------- derived quantities ----------\n            const depth_peat_WPS_t100 =\n                depth_peat_i_t0 -\n                calculate_peat_strata_input_coverage_100_years(\n                    peat_strata_input_coverage_100_years,\n                    stratum_i\n                );\n\n            const C_WPS_i_t100_organic_soil =\n                charac.soil_type_t0 === \"Peatsoil\"\n                    ? depth_peat_WPS_t100 * VC_I_peat_portion * 10\n                    : 0;\n\n            const C_WPS_i_t100_mineral_soil =\n                getCBSL_i_t0(temporal_boundary, stratum_i) -\n                calculate_non_peat_strata_input_coverage_100_years(\n                    non_peat_strata_input_coverage_100_years,\n                    stratum_i\n                );\n\n            const C_WPS_i_t100 =\n                C_WPS_i_t100_organic_soil + C_WPS_i_t100_mineral_soil;\n\n            const depth_peat_BSL_t100 =\n                depth_peat_i_t0 - 100 * Ratepeatloss_BSL_i;\n\n            const C_BSL_i_t100_organic_soil =\n                charac.soil_type_t0 === \"Peatsoil\"\n                    ? depth_peat_BSL_t100 * VC_I_peat_portion * 10\n                    : 0;\n\n            const remaining_years_after_peat_depletion_BSL =\n                calculateRemainingPercentage(Ratepeatloss_BSL_i, depth_peat_i_t0);\n\n            const C_BSL_i_t100_mineral_soil =\n                getCBSL_i_t0(temporal_boundary, stratum_i) -\n                remaining_years_after_peat_depletion_BSL * RateCloss_BSL_i;\n\n            const C_BSL_i_t100 =\n                charac.soil_type_t0 === \"Peatsoil\"\n                    ? C_BSL_i_t100_organic_soil\n                    : C_BSL_i_t100_mineral_soil;\n\n            // ---------- accumulate sums ----------\n            sumWPS += C_WPS_i_t100 * A_WPS_i_t100;\n            sumBSL += C_BSL_i_t100 * A_BSL_i_t100;\n\n            // ---------- push per-stratum record ----------\n            total_stock_approach_parameters.push({\n                stratum_i,\n                C_WPS_i_t100,\n                depthpeat_WPS_i_t100: Math.max(depth_peat_WPS_t100, 0),\n                C_WPS_i_t100_organic_soil,\n                C_WPS_i_t100_mineral_soil: Math.max(C_WPS_i_t100_mineral_soil, 0),\n                Depthpeat_BSL_i_t100: Math.max(depth_peat_BSL_t100, 0),\n                C_BSL_i_t100_organic_soil,\n                remaining_years_after_peat_depletion_BSL,\n                C_BSL_i_t100_mineral_soil:\n                    Math.max(\n                        getCBSL_i_t0(temporal_boundary, stratum_i) -\n                        100 * RateCloss_BSL_i,\n                        0\n                    ),\n                C_BSL_i_t100,\n                type: total_stock_approach_parameters?.[0]?.type,\n                \"@context\": total_stock_approach_parameters?.[0]?.[\"@context\"] ?? [],\n            });\n        });\n\n    // drop the template element that lives at index 0\n    total_stock_approach_parameters.shift();\n\n    // ---------- decide if wetland carbon stocks are ≥ 105 % ----------\n    const condition = sumWPS >= sumBSL * 1.05;\n\n    return {\n        condition,\n        sumWPS,\n        sumBSL,\n        diff: condition ? sumWPS - sumBSL : 0,\n    };\n}\n\n\nfunction stockLossApproach(baseline, stock_loss_approach_parameters, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary) {\n    baseline.yearly_data_for_baseline_GHG_emissions[0].annual_stratum_parameters.forEach(stratum => {\n        const { stratum_i } = stratum;\n        const META = {\n            type: stock_loss_approach_parameters?.[0]?.type,\n            '@context': stock_loss_approach_parameters?.[0]?.['@context'] ?? [],\n        };\n\n        const total_peat_volume_loss = calculate_peat_strata_input_coverage_100_years(peat_strata_input_coverage_100_years, stratum_i) * stratum.stratum_characteristics.VC_I_peat_portion;\n        const Closs_BSL_t100_organic_soil = 10 * 100 * (stratum.stratum_characteristics.Ratepeatloss_BSL_i * stratum.stratum_characteristics.VC_I_peat_portion);\n        const Closs_WPS_t100_organic_soil = 10 * total_peat_volume_loss;\n        const total_carbon_loss_volume = calculate_non_peat_strata_input_coverage_100_years(non_peat_strata_input_coverage_100_years, stratum_i) * stratum.stratum_characteristics.VC_I_mineral_soil_portion;\n        const Closs_BSL_t100_mineral_soil = 10 * 100 * (stratum.stratum_characteristics.RateCloss_BSL_i * stratum.stratum_characteristics.VC_I_mineral_soil_portion);\n        const Closs_WPS_t100_mineral_soil = 10 * total_carbon_loss_volume;\n        const Closs_BSL_i_t100 = stratum.stratum_characteristics.soil_type_t0 === 'Peatsoil' ? Closs_BSL_t100_organic_soil : Closs_BSL_t100_mineral_soil;\n        const Closs_WPS_i_t100 = stratum.stratum_characteristics.soil_type_t0 === 'Peatsoil' ? Closs_WPS_t100_organic_soil : Closs_WPS_t100_mineral_soil;\n        const total_baseline_carbon_loss = Closs_BSL_i_t100 * stratum.stratum_characteristics.A_BSL_i;\n        const total_project_carbon_loss = Closs_WPS_i_t100 * stratum.stratum_characteristics.A_WPS_i;\n\n        stock_loss_approach_parameters.push({\n            \"stratum_i\": stratum_i,\n            \"total_peat_volume_loss\": total_peat_volume_loss,\n            \"Closs_BSL_t100_organic_soil\": Closs_BSL_t100_organic_soil,\n            \"Closs_WPS_t100_organic_soil\": Closs_WPS_t100_organic_soil,\n            \"total_carbon_loss_volume\": total_carbon_loss_volume,\n            \"Closs_BSL_t100_mineral_soil\": Closs_BSL_t100_mineral_soil,\n            \"Closs_WPS_t100_mineral_soil\": Closs_WPS_t100_mineral_soil,\n            \"Closs_BSL_i_t100\": Closs_BSL_i_t100,\n            \"Closs_WPS_i_t100\": Closs_WPS_i_t100,\n            \"total_baseline_carbon_loss\": total_baseline_carbon_loss,\n            \"total_project_carbon_loss\": total_project_carbon_loss,\n            ...META\n        })\n\n    })\n    stock_loss_approach_parameters.shift();\n\n    const total_baseline_carbon_loss_sum = stock_loss_approach_parameters.reduce((acc, curr) => acc + curr.total_baseline_carbon_loss, 0);\n    const total_project_carbon_loss_sum = stock_loss_approach_parameters.reduce((acc, curr) => acc + curr.total_project_carbon_loss, 0);\n\n    return {\n        total_baseline_carbon_loss_sum: total_baseline_carbon_loss_sum,\n        total_project_carbon_loss_sum: total_project_carbon_loss_sum,\n        diff: total_baseline_carbon_loss_sum - total_project_carbon_loss_sum\n    }\n}\n\nfunction SOC_MAX_calculation(baseline, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary, approach, ineligible_wetland_areas) {\n    if (approach === 'Total stock approach') {\n        ineligible_wetland_areas.SOC_MAX = totalStockApproach(baseline, ineligible_wetland_areas.total_stock_approach_parameters, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary).diff\n    } else {\n        ineligible_wetland_areas.SOC_MAX = stockLossApproach(baseline, ineligible_wetland_areas.stock_loss_approach_parameters, peat_strata_input_coverage_100_years, non_peat_strata_input_coverage_100_years, temporal_boundary).diff\n    }\n}\n\n\nfunction processBaselineEmissions(baseline, crediting_period, baseline_soil_CH4, soil_CH4_approach, GWP_CH4, baseline_soil_N2O, soil_N2O_approach, GWP_N2O, monitoring_submergence_data, temporal_boundary) {\n\n    // loop through every monitoring year -------------------------------------\n    for (const yearRec of baseline.yearly_data_for_baseline_GHG_emissions ?? []) {\n        const { year_t } = yearRec;\n\n\n\n        // ---- per-stratum loop -------------------------------------------------\n        for (const stratum of yearRec.annual_stratum_parameters ?? []) {\n            const { stratum_i } = stratum;\n\n            const sc = stratum.stratum_characteristics ?? {};\n            const asl = stratum.annual_stratum_level_parameters ?? {};\n\n            asl.delta_CTREE_BSL_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_TREE;\n            asl.delta_CSHRUB_BSL_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_SHRUB;\n            asl.ET_FC_I_t_ar_tool_5_BSL = stratum.ar_tool_05.ET_FC_y;\n            const isProjectQuantifyBSLReduction = sc.is_project_quantify_BSL_reduction\n\n            // Baseline emissions calculations\n\n            if (asl.is_aboveground_non_tree_biomass) {\n                asl.delta_CSHRUB_BSL_i_t_ar_tool_14 = 0;\n            }\n\n            asl.delta_C_BSL_tree_or_shrub_i_t = const_12_by_44 * (asl.delta_CTREE_BSL_i_t_ar_tool_14 + asl.delta_CSHRUB_BSL_i_t_ar_tool_14);\n\n            if (asl.is_aboveground_non_tree_biomass) {\n                asl.delta_C_BSL_herb_i_t = 0;\n            }\n\n            // Net GHG emissions from soil in baseline scenario\n\n            if (asl.is_soil) {\n                const method = sc.co2_emissions_from_soil;\n\n                switch (method) {\n                    case \"Field-collected data\":\n                        asl.GHGBSL_soil_CO2_i_t = -(const_44_by_12 * asl.delta_C_BSL_soil_i_t);\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGBSL_soil_CO2_i_t = asl.GHG_emission_proxy_GHGBSL_soil_CO2_i_t;\n                        break;\n\n                    default:\n                        asl.GHGBSL_soil_CO2_i_t =\n                            (asl.GHGBSL_insitu_CO2_i_t ?? 0) +\n                            (asl.GHGBSL_eroded_CO2_i_t ?? 0) +\n                            (asl.GHGBSL_excav_CO2_i_t ?? 0);\n                }\n            } else {\n                asl.GHGBSL_soil_CO2_i_t = 0;\n            }\n\n            asl.Deduction_alloch = computeDeductionAllochBaseline({\n                baseline_soil_SOC: asl.is_soil,\n                soil_insitu_approach: sc.co2_emissions_from_soil,\n                soil_type: sc.soil_type_t0,\n                AU5: asl.GHGBSL_soil_CO2_i_t,\n                AV5: asl.is_soil ? asl.percentage_C_alloch_BSL : 0,\n                BB5: (asl.is_soil && sc.co2_emissions_from_soil === \"Others\") ? asl.GHGBSL_insitu_CO2_i_t : 0\n            });\n\n            // CH4 emissions from soil\n\n            if (baseline_soil_CH4) {\n                const method = soil_CH4_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGBSL_soil_CH4_i_t = asl.IPCC_emission_factor_ch4_BSL * GWP_CH4;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGBSL_soil_CH4_i_t = asl.GHG_emission_proxy_ch4_BSL * GWP_CH4;\n                        break;\n\n                    default:\n                        asl.GHGBSL_soil_CH4_i_t = asl.CH4_BSL_soil_i_t * GWP_CH4;\n                }\n            } else {\n                asl.GHGBSL_soil_CH4_i_t = 0;\n            }\n\n            // N2O emissions from soil\n\n            if (baseline_soil_N2O) {\n                const method = soil_N2O_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGBSL_soil_N2O_i_t = asl.IPCC_emission_factor_n2o_BSL * GWP_N2O;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGBSL_soil_N2O_i_t = asl.N2O_emission_proxy_BSL * GWP_N2O;\n                        break;\n\n                    default:\n                        asl.GHGBSL_soil_N2O_i_t = asl.N2O_BSL_soil_I_t * GWP_N2O;\n                }\n            } else {\n                asl.GHGBSL_soil_N2O_i_t = 0;\n            }\n\n\n            // GHGBSL-soil,i,t (Eq 26)\n\n            const endPDT = isProjectQuantifyBSLReduction ? getEndPDTPerStratum(temporal_boundary, stratum_i) : crediting_period;\n            const endSDT = isProjectQuantifyBSLReduction ? getEndSDTPerStratum(temporal_boundary, stratum_i) : crediting_period;\n\n            if (isProjectQuantifyBSLReduction) {\n                const emissionsArray = baseline.yearly_data_for_baseline_GHG_emissions || [];\n                const startYear = getStartYear(emissionsArray);\n                const period = year_t - startYear + 1;\n\n                if (period > endPDT && period > endSDT) {\n                    asl.GHGBSL_soil_i_t = 0;\n                }\n                else {\n                    asl.GHGBSL_soil_i_t = asl.A_i_t * (asl.GHGBSL_soil_CO2_i_t - asl.Deduction_alloch + asl.GHGBSL_soil_CH4_i_t + asl.GHGBSL_soil_N2O_i_t);\n                }\n            } else {\n                asl.GHGBSL_soil_i_t = asl.A_i_t * (asl.GHGBSL_soil_CO2_i_t - asl.Deduction_alloch + asl.GHGBSL_soil_CH4_i_t + asl.GHGBSL_soil_N2O_i_t);\n            }\n\n            // ∆𝐶𝐵𝑆𝐿−𝑏𝑖𝑜𝑚𝑎𝑠𝑠,𝑖,t (equation 23)\n            const monitoring_submergence = getDeltaCBSLAGBiomassForStratumAndYear(monitoring_submergence_data, stratum_i, yearRec.year_t);\n            asl.delta_C_BSL_biomass_𝑖_t = asl.delta_C_BSL_tree_or_shrub_i_t + asl.delta_C_BSL_herb_i_t - monitoring_submergence[0].delta;\n\n            // 𝐺𝐻𝐺𝐵𝑆𝐿−𝑓𝑢𝑒𝑙,𝑖,t\n            if (asl.is_fossil_fuel_use) {\n                asl.GHGBSL_fuel_i_t = asl.ET_FC_I_t_ar_tool_5_BSL;\n            } else {\n                asl.GHGBSL_fuel_i_t = 0;\n            }\n\n        }\n\n        // ---- per-year calculations -------------------------------------------\n\n        const sum_delta_C_BSL_biomass =\n            yearRec.annual_stratum_parameters\n                .reduce((acc, s) =>\n                    acc + (Number(s.annual_stratum_level_parameters\n                        .delta_C_BSL_biomass_𝑖_t) || 0), 0);\n\n        yearRec.GHG_BSL_biomass = -(sum_delta_C_BSL_biomass * const_44_by_12);\n\n\n        const sum_GHG_BSL_soil =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGBSL_soil_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_BSL_soil = sum_GHG_BSL_soil;\n\n        const sum_GHG_BSL_fuel =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGBSL_fuel_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_BSL_fuel = sum_GHG_BSL_fuel;\n\n    }\n\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL_biomass = acc + rec.GHG_BSL_biomass;\n        return rec.GHG_BSL_biomass;\n    }, 0);\n\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL_soil = acc + rec.GHG_BSL_soil;\n        return rec.GHG_BSL_soil;\n    }, 0);\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL_fuel = acc + rec.GHG_BSL_fuel;\n        return rec.GHG_BSL_fuel;\n    }, 0);\n\n    baseline.yearly_data_for_baseline_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_BSL = rec.GHG_BSL_biomass + rec.GHG_BSL_soil + rec.GHG_BSL_fuel;\n        return rec.GHG_BSL;\n    }, 0);\n}\n\nfunction processProjectEmissions(project, project_soil_CH4, project_soil_CH4_approach, GWP_CH4, project_soil_N2O, soil_N2O_approach, GWP_N2O, EF_N2O_Burn, EF_CH4_Burn, isPrescribedBurningOfBiomass) {\n\n    // loop through every monitoring year -------------------------------------\n    for (const yearRec of project.yearly_data_for_project_GHG_emissions ?? []) {\n        const { year_t } = yearRec;\n\n        // ---- per-stratum loop -------------------------------------------------\n        for (const stratum of yearRec.annual_stratum_parameters ?? []) {\n            const { stratum_i } = stratum;\n\n            const sc = stratum.stratum_characteristics ?? {};\n            const asl = stratum.annual_stratum_level_parameters ?? {};\n\n            asl.delta_C_TREE_PROJ_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_TREE;\n            asl.delta_C_SHRUB_PROJ_i_t_ar_tool_14 = stratum.ar_tool_14.delta_C_SHRUB;\n            asl.ET_FC_I_t_ar_tool_5_WPS = stratum.ar_tool_05.ET_FC_y;\n\n            if (asl.is_aboveground_tree_biomass !== true) {\n                asl.delta_C_TREE_PROJ_i_t_ar_tool_14 = 0;\n            }\n\n            if (asl.is_aboveground_non_tree_biomass !== true) {\n                asl.delta_C_SHRUB_PROJ_i_t_ar_tool_14 = 0;\n            }\n\n            asl.delta_C_WPS_tree_or_shrub_i_t = const_12_by_44 * (asl.delta_C_TREE_PROJ_i_t_ar_tool_14 + asl.delta_C_SHRUB_PROJ_i_t_ar_tool_14);\n\n            if (asl.is_aboveground_non_tree_biomass !== true) {\n                asl.delta_C_WPS_herb_i_t = 0;\n            }\n\n            asl.delta_C_WPS_biomass_i_t = asl.delta_C_WPS_tree_or_shrub_i_t + asl.delta_C_WPS_herb_i_t;\n\n            // Net GHG emissions from soil in baseline scenario\n\n            if (asl.is_soil) {\n                const method = sc.co2_emissions_from_soil;\n\n                switch (method) {\n                    case \"Field-collected data\":\n                        asl.GHGWPS_soil_CO2_i_t = -(const_44_by_12 * asl.delta_C_WPS_soil_i_t);\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGWPS_soil_CO2_i_t = asl.GHG_emission_proxy_GHGWPS_soil_CO2_i_t;\n                        break;\n\n                    default:\n                        asl.GHGWPS_soil_CO2_i_t =\n                            (asl.GHGWPS_insitu_CO2_i_t ?? 0) +\n                            (asl.GHGWPS_eroded_CO2_i_t ?? 0) +\n                            (asl.GHGWPS_excav_CO2_i_t ?? 0);\n                }\n            } else {\n                asl.GHGWPS_soil_CO2_i_t = 0;\n            }\n\n            asl.Deduction_alloch_WPS = computeDeductionAllochProject({\n                project_soil_SOC: asl.is_soil,\n                soil_insitu_approach: sc.co2_emissions_from_soil,\n                soil_type: sc.soil_type_t0,\n                AK5: asl.GHGWPS_soil_CO2_i_t,\n                AL5: asl.is_soil ? asl.percentage_C_alloch_WPS : 0,\n                AR5: (asl.is_soil && sc.co2_emissions_from_soil === \"Others\") ? asl.GHGWPS_insitu_CO2_i_t : 0\n            });\n\n            // CH4 emissions from soil\n\n            if (project_soil_CH4) {\n                const method = project_soil_CH4_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGWPS_soil_CH4_i_t = asl.IPCC_emission_factor_ch4_WPS * GWP_CH4;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGWPS_soil_CH4_i_t = asl.GHG_emission_proxy_ch4_WPS * GWP_CH4;\n                        break;\n\n                    default:\n                        asl.GHGWPS_soil_CH4_i_t = asl.CH4_WPS_soil_I_t * GWP_CH4;\n                }\n            } else {\n                asl.GHGWPS_soil_CH4_i_t = 0;\n            }\n\n            // N2O emissions from soil\n            if (project_soil_N2O) {\n                const method = soil_N2O_approach;\n\n                switch (method) {\n                    case \"IPCC emission factors\":\n                        asl.GHGWPS_soil_N2O_i_t = asl.IPCC_emission_factor_n2o_WPS * GWP_N2O;\n                        break;\n\n                    case \"Proxies\":\n                        asl.GHGWPS_soil_N2O_i_t = asl.N2O_emission_proxy_WPS * GWP_N2O;\n                        break;\n\n                    default:\n                        asl.GHGWPS_soil_N2O_i_t = asl.N2O_WPS_soil_I_t * GWP_N2O;\n                }\n            } else {\n                asl.GHGWPS_soil_N2O_i_t = 0;\n            }\n\n            // GHGWPS-soil,i,t\n            asl.GHGWPS_soil_i_t = asl.A_i_t * (asl.GHGWPS_soil_CO2_i_t - asl.Deduction_alloch_WPS + asl.GHGWPS_soil_CH4_i_t + asl.GHGWPS_soil_N2O_i_t);\n\n            // Net non-CO2 emissions from prescribed burning of herbaceous biomass and shrub in project scenario\n\n            if (asl.is_burning_of_biomass) {\n                asl.CO2_e_N2O_i_t = asl.biomassi_t * EF_N2O_Burn * GWP_N2O * Math.pow(10, -6) * asl.A_i_t;\n                asl.CO2_e_CH4_i_t = asl.biomassi_t * EF_CH4_Burn * GWP_CH4 * Math.pow(10, -6) * asl.A_i_t;\n                asl.GHGWPS_burn_i_t = asl.CO2_e_N2O_i_t + asl.CO2_e_CH4_i_t;\n            } else {\n                asl.GHGWPS_burn_i_t = 0;\n            }\n\n            // 𝐺𝐻𝐺WPS−𝑓𝑢𝑒𝑙,𝑖,t\n            if (asl.is_fossil_fuel_use) {\n                asl.GHGWPS_fuel_i_t = asl.ET_FC_I_t_ar_tool_5_WPS;\n            } else {\n                asl.GHGWPS_fuel_i_t = 0;\n            }\n\n        }\n\n\n        // ---- per-year calculations ------------------------------------------------------\n        const sum_delta_C_WPS_biomass =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.delta_C_WPS_biomass_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_WPS_biomass = -(sum_delta_C_WPS_biomass * const_44_by_12);\n\n        const sum_GHG_WPS_soil =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGWPS_soil_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_WPS_soil = sum_GHG_WPS_soil;\n\n        const sum_GHG_WPS_fuel =\n            yearRec.annual_stratum_parameters.reduce(\n                (acc, s) =>\n                    acc +\n                    (Number(\n                        s.annual_stratum_level_parameters.GHGWPS_fuel_i_t\n                    ) || 0),\n                0\n            );\n\n        yearRec.GHG_WPS_fuel = sum_GHG_WPS_fuel;\n\n        if (isPrescribedBurningOfBiomass) {\n            const sum_GHG_WPS_burn =\n                yearRec.annual_stratum_parameters.reduce(\n                    (acc, s) =>\n                        acc +\n                        (Number(\n                            s.annual_stratum_level_parameters.GHGWPS_burn_i_t\n                        ) || 0),\n                    0\n                );\n\n            yearRec.GHG_WPS_burn = sum_GHG_WPS_burn;\n        } else {\n            yearRec.GHG_WPS_burn = 0;\n        }\n\n        yearRec.GHG_WPS = yearRec.GHG_WPS_biomass + yearRec.GHG_WPS_soil + yearRec.GHG_WPS_fuel + yearRec.GHG_WPS_burn;\n    }\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_biomass = acc + rec.GHG_WPS_biomass;\n        return rec.GHG_WPS_biomass;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_soil = acc + rec.GHG_WPS_soil;\n        return rec.GHG_WPS_soil;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_fuel = acc + rec.GHG_WPS_fuel;\n        return rec.GHG_WPS_fuel;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS_burn = acc + rec.GHG_WPS_burn;\n        return rec.GHG_WPS_burn;\n    }, 0);\n\n    project.yearly_data_for_project_GHG_emissions.reduce((acc, rec) => {\n        rec.GHG_WPS = (rec.GHG_WPS_biomass + rec.GHG_WPS_soil + rec.GHG_WPS_fuel + rec.GHG_WPS_burn) * -1;\n        return rec.GHG_WPS;\n    }, 0);\n}\n\nfunction processNETERR(baseline, project, netErrData, SOC_MAX, emission_reduction_from_stock_loss, fire_reduction_premium, FireReductionPremiumArray, NERRWE_Cap, NERRWE_Max, NERError, allowable_uncert, buffer_percentage) {\n    /* ───────── meta kept from original array (if present) ──────── */\n    const META = {\n        type: netErrData.net_ERR_calculation_per_year?.[0]?.type,\n        '@context': netErrData.net_ERR_calculation_per_year?.[0]?.['@context'] ?? [],\n    };\n\n    /* ───────── aggregate baseline ───────── */\n    const perYear = new Map();                      // key = year_t\n\n    for (const yr of baseline.yearly_data_for_baseline_GHG_emissions ?? []) {\n        const total = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) =>\n                a +\n                +(s.annual_stratum_level_parameters?.GHGBSL_soil_CO2_i_t ?? 0) *\n                +(s.annual_stratum_level_parameters?.A_i_t ?? 0),\n            0,\n        );\n\n        const total_GHG_BSL_SOIL_DEDUCTED_CO2_i_t = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) => {\n                const ghgbsl_soil_co2 = +(s.annual_stratum_level_parameters?.GHGBSL_soil_CO2_i_t ?? 0);\n                const deduction_alloch = +(s.annual_stratum_level_parameters?.Deduction_alloch ?? 0);\n                const a_i_t = +(s.annual_stratum_level_parameters?.A_i_t ?? 0);\n                return a + (ghgbsl_soil_co2 - deduction_alloch) * a_i_t;\n            },\n            0,\n        );\n\n        perYear.set(yr.year_t, {\n            year_t: yr.year_t,\n            sumation_GHG_BSL_soil_CO2_i_A_i: total,\n            sumation_GHG_WPS_soil_CO2_i_A_i: 0,        // will be filled next loop\n            GHG_BSL_SOIL_DEDUCTED_CO2_i_t: total_GHG_BSL_SOIL_DEDUCTED_CO2_i_t\n        });\n    }\n\n    /* ───────── aggregate project ───────── */\n    for (const yr of project.yearly_data_for_project_GHG_emissions ?? []) {\n        const total = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) =>\n                a +\n                +(s.annual_stratum_level_parameters?.GHGWPS_soil_CO2_i_t ?? 0) *\n                +(s.annual_stratum_level_parameters?.A_i_t ?? 0),\n            0,\n        );\n\n        const total_GHG_WPS_SOIL_DEDUCTED_CO2_i_t = (yr.annual_stratum_parameters ?? []).reduce(\n            (a, s) => {\n                const ghgwps_soil_co2 = +(s.annual_stratum_level_parameters?.GHGWPS_soil_CO2_i_t ?? 0);\n                const deduction_alloch_wps = +(s.annual_stratum_level_parameters?.Deduction_alloch_WPS ?? 0);\n                const a_i_t = +(s.annual_stratum_level_parameters?.A_i_t ?? 0);\n                return a + (ghgwps_soil_co2 - deduction_alloch_wps) * a_i_t;\n            },\n            0,\n        );\n\n        if (!perYear.has(yr.year_t)) {\n            perYear.set(yr.year_t, {\n                year_t: yr.year_t,\n                sumation_GHG_BSL_soil_CO2_i_A_i: 0,\n                sumation_GHG_WPS_soil_CO2_i_A_i: 0,\n                GHG_WPS_SOIL_DEDUCTED_CO2_i_t: 0,\n            });\n        }\n        perYear.get(yr.year_t).sumation_GHG_WPS_soil_CO2_i_A_i = total;\n        perYear.get(yr.year_t).GHG_WPS_SOIL_DEDUCTED_CO2_i_t = total_GHG_WPS_SOIL_DEDUCTED_CO2_i_t;\n    }\n\n    /* ───────── cumulative sums + final array ───────── */\n    let cumBSL = 0;\n    let cumWPS = 0;\n    let cumBSL_DEDUCTED = 0;\n    let cumWPS_DEDUCTED = 0;\n\n    netErrData.net_ERR_calculation_per_year = [...perYear.values()]\n        .sort((a, b) => a.year_t - b.year_t)\n        .map(rec => {\n            cumBSL += rec.sumation_GHG_BSL_soil_CO2_i_A_i;\n            cumWPS += rec.sumation_GHG_WPS_soil_CO2_i_A_i;\n            cumBSL_DEDUCTED += rec.GHG_BSL_SOIL_DEDUCTED_CO2_i_t;\n            cumWPS_DEDUCTED += rec.GHG_WPS_SOIL_DEDUCTED_CO2_i_t;\n            return {\n                year_t: rec.year_t,\n                sumation_GHG_BSL_soil_CO2_i_A_i: cumBSL,\n                sumation_GHG_WPS_soil_CO2_i_A_i: cumWPS,\n                GHG_BSL_SOIL_DEDUCTED_CO2_i_t: cumBSL_DEDUCTED,\n                GHG_WPS_SOIL_DEDUCTED_CO2_i_t: cumWPS_DEDUCTED,\n                ...META,                       // ONLY type + @context copied in\n            };\n        });\n\n    if (emission_reduction_from_stock_loss) {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            const temp_deduction = (rec.sumation_GHG_BSL_soil_CO2_i_A_i - rec.sumation_GHG_WPS_soil_CO2_i_A_i - SOC_MAX);\n            rec.GHG_WPS_soil_deduction = temp_deduction > 0 ? temp_deduction : 0;\n            return rec;\n        }\n        );\n    } else {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            rec.GHG_WPS_soil_deduction = 0;\n            return rec;\n        }\n        );\n    }\n\n    if (fire_reduction_premium) {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            rec.FRP = getFireReductionPremiumPerYear(FireReductionPremiumArray, rec.year_t);\n            return rec;\n        }\n        );\n    }\n    else {\n        netErrData.net_ERR_calculation_per_year.map(rec => {\n            rec.FRP = 0;\n            return rec;\n        }\n        );\n    }\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.GHG_LK = 0;\n        return rec;\n    });\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.NERRWE = getGHGBSL(baseline.yearly_data_for_baseline_GHG_emissions, rec.year_t) + getGHGWPS(project.yearly_data_for_project_GHG_emissions, rec.year_t) + rec.FRP - rec.GHG_LK - rec.GHG_WPS_soil_deduction;\n        return rec;\n    });\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        if (NERRWE_Cap) {\n            rec.NERRWE_capped = rec.NERRWE <= NERRWE_Max ? rec.NERRWE : NERRWE_Max;\n            rec.NER_t = rec.NERRWE_capped;\n            return rec;\n        } else {\n            rec.NERRWE_capped = rec.NERRWE;\n            rec.NER_t = rec.NERRWE;\n            return rec;\n        }\n    });\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.adjusted_NER_t = rec.NER_t * (1 - NERError + allowable_uncert);\n        return rec;\n    }\n    );\n\n    netErrData.net_ERR_calculation_per_year.map(rec => {\n        rec.NER_stock_t = (rec.GHG_BSL_SOIL_DEDUCTED_CO2_i_t + getGHGBSLBiomass(baseline.yearly_data_for_baseline_GHG_emissions, rec.year_t)) - (rec.GHG_WPS_SOIL_DEDUCTED_CO2_i_t + getGHGWPSBiomass(project.yearly_data_for_project_GHG_emissions, rec.year_t));\n        return rec;\n    }\n    );\n\n    // First, sort by year_t (ascending)\n    const netErrArr = netErrData.net_ERR_calculation_per_year.sort((a, b) => a.year_t - b.year_t);\n\n    netErrArr.forEach((rec, idx, arr) => {\n        if (idx === 0) {\n            rec.buffer_deduction = rec.NER_stock_t * buffer_percentage;\n        } else {\n            const prevRec = arr[idx - 1];\n            rec.buffer_deduction = calculateNetERRChange(\n                rec.adjusted_NER_t,\n                prevRec.adjusted_NER_t,\n                rec.NER_stock_t,\n                prevRec.NER_stock_t,\n                buffer_percentage\n            );\n        }\n    });\n\n\n    netErrArr.forEach((rec, idx, arr) => {\n        if (idx === 0) {\n            rec.VCU = rec.adjusted_NER_t - rec.buffer_deduction;\n        } else {\n            const prevRec = arr[idx - 1];\n            rec.VCU = calculateNetVCU(\n                rec.adjusted_NER_t,\n                prevRec.adjusted_NER_t,\n                rec.buffer_deduction\n            );\n        }\n    });\n\n\n    netErrData.total_VCU_per_instance = calculateTotalVCUPerInstance(netErrData);\n\n}\n\n\nfunction calculateTotalVCUPerInstance(netErrData) {\n    return netErrData.net_ERR_calculation_per_year[0].VCU;\n}\n\n\nfunction processInstance(instance, project_boundary) {\n    const data = instance.project_instance;\n    // Project Boundary\n    const projectBoundary = project_boundary;\n\n    // Project Boundary - Baseline Scenario\n    const BaselineAboveGroundTreeBiomass = getProjectBoundaryValue(projectBoundary, 'baseline_aboveground_tree_biomass');\n    const BaselineAboveGroundNonTreeBiomass = getProjectBoundaryValue(projectBoundary, 'baseline_aboveground_non_tree_biomass');\n    const BaselineBelowGroundBiomass = getProjectBoundaryValue(projectBoundary, 'baseline_below_ground_biomass');\n    const BaselineLitter = getProjectBoundaryValue(projectBoundary, 'baseline_litter');\n    const BaselineDeadWood = getProjectBoundaryValue(projectBoundary, 'baseline_dead_wood');\n    const BaselineSoil = getProjectBoundaryValue(projectBoundary, 'baseline_soil');\n    const BaselineWoodProducts = getProjectBoundaryValue(projectBoundary, 'baseline_wood_products');\n    const BaselineMethaneProductionByMicrobes = getProjectBoundaryValue(projectBoundary, 'baseline_methane_production_by_microbes');\n    const BaselineDenitrificationNitrification = getProjectBoundaryValue(projectBoundary, 'baseline_denitrification_nitrification');\n    const BaselineBurningBiomassOrganicSoil = getProjectBoundaryValue(projectBoundary, 'baseline_burning_of_biomass_and_organic_soil');\n    const BaselineFossilFuelUseCO2 = getProjectBoundaryValue(projectBoundary, 'baseline_fossil_fuel_use_CO2');\n    const BaselineFossilFuelUseCH4 = getProjectBoundaryValue(projectBoundary, 'baseline_fossil_fuel_use_CH4');\n    const BaselineFossilFuelUseN2O = getProjectBoundaryValue(projectBoundary, 'baseline_fossil_fuel_use_N2O');\n\n    // Project Boundary - Project Scenario\n    const ProjectAboveTreeBiomass = getProjectBoundaryValue(projectBoundary, 'project_aboveground_tree_biomass');\n    const ProjectAboveNonTreeBiomass = getProjectBoundaryValue(projectBoundary, 'project_aboveground_non_tree_biomass');\n    const ProjectBelowGroundBiomass = getProjectBoundaryValue(projectBoundary, 'project_below_ground_biomass');\n    const ProjectLitter = getProjectBoundaryValue(projectBoundary, 'project_litter');\n    const ProjectDeadWood = getProjectBoundaryValue(projectBoundary, 'project_dead_wood');\n    const ProjectSoil = getProjectBoundaryValue(projectBoundary, 'project_soil');\n    const ProjectWoodProducts = getProjectBoundaryValue(projectBoundary, 'project_wood_products');\n    const ProjectMethaneProductionByMicrobes = getProjectBoundaryValue(projectBoundary, 'project_methane_production_by_microbes');\n    const ProjectDenitrificationNitrification = getProjectBoundaryValue(projectBoundary, 'project_denitrification_nitrification');\n    const ProjectBurningBiomass = getProjectBoundaryValue(projectBoundary, 'project_burning_of_biomass');\n    const ProjectFossilFuelUseCO2 = getProjectBoundaryValue(projectBoundary, 'project_fossil_fuel_use_CO2');\n    const ProjectFossilFuelUseCH4 = getProjectBoundaryValue(projectBoundary, 'project_fossil_fuel_use_CH4');\n    const ProjectFossilFuelUseN2O = getProjectBoundaryValue(projectBoundary, 'project_fossil_fuel_use_N2O');\n\n\n    // --- Quantification Approach ---\n    const QuantificationCO2EmissionsSoil = getQuantificationValue(data, 'quantification_co2_emissions_soil');\n    const QuantificationCH4EmissionsSoil = getQuantificationValue(data, 'quantification_ch4_emissions_soil');\n    const QuantificationN2OEmissionsSoil = getQuantificationValue(data, 'quantification_n2o_emissions_soil');\n    const QuantificationSOCCapApproach = getQuantificationValue(data, 'quantification_soc_cap_approach');\n    const QuantificationBaselineCO2Reduction = getQuantificationValue(data, 'quantification_baseline_co2_reduction');\n    const QuantificationNERRWEMaxCap = getQuantificationValue(data, 'quantification_nerrwe_max_cap');\n    const QuantificationFireReductionPremium = getQuantificationValue(data, 'quantification_fire_reduction_premium');\n    const FireReductionPremiumArray = QuantificationFireReductionPremium ? getQuantificationValue(data, 'fire_reduction_premium') : [];\n\n\n    // --- Individual Parameters ---\n    const GWP_CH4 = (BaselineMethaneProductionByMicrobes || BaselineBurningBiomassOrganicSoil || ProjectMethaneProductionByMicrobes || ProjectBurningBiomass) ? getIndividualParam(data, 'gwp_ch4') : 0;\n    const GWP_N2O = (BaselineDenitrificationNitrification || BaselineBurningBiomassOrganicSoil || ProjectDenitrificationNitrification || ProjectBurningBiomass) ? getIndividualParam(data, 'gwp_n2o') : 0;\n    const IsBurningOfBiomass = getIndividualParam(data, 'is_burning_of_biomass');\n    const IsNERRWEMaxCap = getIndividualParam(data, 'is_NERRWE_max_cap');\n    const AllowableUncertainty = getIndividualParam(data, 'individual_params_allowable_uncert');\n    const BufferPercent = getIndividualParam(data, 'individual_params_buffer_%');\n    const NERError = getIndividualParam(data, 'individual_params_NER_ERROR');\n    const CreditingPeriod = getIndividualParam(data, 'individual_params_crediting_period');\n    const EF_N2O_Burn = IsBurningOfBiomass ? getIndividualParam(data, 'EF_n20_burn') : 0;\n    const EF_CH4_Burn = IsBurningOfBiomass ? getIndividualParam(data, 'EF_ch4_burn') : 0;\n    const NERRWE_Max = IsNERRWEMaxCap ? getIndividualParam(data, 'NERRWE_max') : 0;\n\n    // --- Monitoring Period Inputs ---\n\n    const IsBaselineAbovegroundNonTreeBiomass = getMonitoringValue(data, 'is_baseline_aboveground_non_tree_biomass');\n    const IsProjectAbovegroundNonTreeBiomass = getMonitoringValue(data, 'is_project_aboveground_non_tree_biomass');\n\n    let BaselineSoilCarbonStockMonitoringData = [];\n    let ProjectSoilCarbonStockMonitoringData = [];\n    let BaselineHerbaceousVegetationMonitoringData = [];\n    let ProjectHerbaceousVegetationMonitoringData = [];\n\n    const SubmergenceMonitoringData = getMonitoringValue(data, 'submergence_monitoring_data');\n    BaselineSoilCarbonStockMonitoringData = (BaselineSoil && QuantificationCO2EmissionsSoil === 'Field-collected data') ? getMonitoringValue(data, 'baseline_soil_carbon_stock_monitoring_data') : [];\n    ProjectSoilCarbonStockMonitoringData = (ProjectSoil && QuantificationCO2EmissionsSoil === 'Field-collected data') ? getMonitoringValue(data, 'project_soil_carbon_stock_monitoring_data') : [];\n    BaselineHerbaceousVegetationMonitoringData = IsBaselineAbovegroundNonTreeBiomass ? getMonitoringValue(data, 'baseline_herbaceous_vegetation_monitoring_data') : [];\n    ProjectHerbaceousVegetationMonitoringData = IsProjectAbovegroundNonTreeBiomass ? getMonitoringValue(data, 'project_herbaceous_vegetation_monitoring_data') : [];\n\n\n    // --- Wood Product Project Scenario ---\n\n    let WoodProductDjCFjBCEF = [];\n    let WoodProductSLFty = [];\n    let WoodProductOfty = [];\n    let WoodProductVexPcomi = [];\n    let WoodProductCAVGTREEi = [];\n\n    // Check if wood product project scenario is present\n    if (ProjectWoodProducts) {\n        WoodProductDjCFjBCEF = getWoodProductValue(data, 'wood_product_Dj_CFj_BCEF');\n        WoodProductSLFty = getWoodProductValue(data, 'wood_product_SLFty');\n        WoodProductOfty = getWoodProductValue(data, 'wood_product_Ofty');\n        WoodProductVexPcomi = getWoodProductValue(data, 'wood_product_Vex_Pcomi');\n        WoodProductCAVGTREEi = getWoodProductValue(data, 'wood_product_CAVG_TREE_i');\n    }\n\n    // --- Monitoring Period Inputs ---\n    processMonitoringSubmergence(data.monitoring_period_inputs);\n\n    // Temporal Boundary\n    const temporalBoundary = data.temporal_boundary;\n    calculatePDTSDT(data.baseline_emissions, QuantificationBaselineCO2Reduction, temporalBoundary, CreditingPeriod);\n\n    // ── Baseline-emission calculations ──────────────────────────────────────\n    processBaselineEmissions(data.baseline_emissions, CreditingPeriod, BaselineMethaneProductionByMicrobes, QuantificationCH4EmissionsSoil, GWP_CH4, BaselineDenitrificationNitrification, QuantificationN2OEmissionsSoil, GWP_N2O, data.monitoring_period_inputs, temporalBoundary);\n\n    // ── Project-emission calculations ───────────────────────────────────────\n    processProjectEmissions(data.project_emissions, ProjectMethaneProductionByMicrobes, QuantificationCH4EmissionsSoil, GWP_CH4, ProjectDenitrificationNitrification, QuantificationN2OEmissionsSoil, GWP_N2O, EF_N2O_Burn, EF_CH4_Burn, ProjectBurningBiomass);\n\n\n    // Total Stock Approach and Stock loss Approach\n    SOC_MAX_calculation(data.baseline_emissions, data.peat_strata_input_coverage_100_years, data.non_peat_strata_input_coverage_100_years, temporalBoundary, QuantificationSOCCapApproach, data.ineligible_wetland_areas);\n\n\n    // ── Net emissions reductions calculations ───────────────────────────────\n    processNETERR(data.baseline_emissions, data.project_emissions, data.net_ERR, data.ineligible_wetland_areas.SOC_MAX, QuantificationBaselineCO2Reduction, QuantificationFireReductionPremium, FireReductionPremiumArray, IsNERRWEMaxCap, NERRWE_Max, NERError, AllowableUncertainty, BufferPercent);\n\n}\n\n\nfunction calc() {\n    const document = documents[0].document;\n\n    const creds = document.credentialSubject;\n\n    let totalVcus = 0;\n\n    for (const cred of creds) {\n        for (const instance of cred.project_data_per_instance) {\n            processInstance(instance, cred.project_boundary);\n            totalVcus += instance.project_instance.net_ERR.total_VCU_per_instance;\n        }\n        cred.total_vcus = totalVcus;\n    }\n\n    done(adjustValues(document.credentialSubject[0]));\n}\n\ncalc();",
                      "documentSigner": "owner",
                      "idType": "UUID",
                      "outputSchema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "selectedScriptLanguage": "JAVASCRIPT",
                      "tag": "calculate_report_fields",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "b2d59d2f-b6aa-40d1-b371-1ced2cb2a613",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {},
                      "options": [
                        {
                          "name": "status",
                          "value": "Waiting for Verification"
                        }
                      ],
                      "dataSource": "hedera",
                      "documentType": "vc",
                      "topic": "Project",
                      "entityType": "report",
                      "tag": "save_report_hedera",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "b2c94367-dfd5-4588-aa52-88589be84d02",
                      "blockType": "sendToGuardianBlock",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {},
                      "options": [
                        {
                          "variable": "",
                          "role": "",
                          "name": "status",
                          "value": "Waiting for Verification"
                        }
                      ],
                      "dataType": "",
                      "entityType": "report",
                      "onErrorAction": "no-action",
                      "dataSource": "database",
                      "documentType": "vc",
                      "tag": "save_report",
                      "children": [],
                      "events": [
                        {
                          "target": "project_grid_pp_2",
                          "source": "save_report",
                          "input": "RefreshEvent",
                          "output": "RefreshEvent",
                          "actor": "",
                          "disabled": false
                        },
                        {
                          "target": "report_grid_pp",
                          "source": "save_report",
                          "input": "RefreshEvent",
                          "output": "RefreshEvent",
                          "actor": "",
                          "disabled": false
                        },
                        {
                          "target": "report_grid_vvb",
                          "source": "save_report",
                          "input": "",
                          "output": "RefreshEvent",
                          "actor": "",
                          "disabled": false
                        },
                        {
                          "target": "report_grid_verra",
                          "source": "save_report",
                          "input": "",
                          "output": "RefreshEvent",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "df72020a-d022-472f-aa3e-50da0d22982a",
                  "blockType": "interfaceActionBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "uiMetaData": {
                    "options": [],
                    "content": "VVB"
                  },
                  "type": "dropdown",
                  "name": "document.credentialSubject.0.field0",
                  "value": "document.credentialSubject.0.id",
                  "field": "assignedTo",
                  "bindBlock": "save_assign",
                  "onErrorAction": "no-action",
                  "tag": "assign_vvb",
                  "children": [
                    {
                      "id": "67cb581d-df6d-400f-a41d-b86f2de5f81e",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "value": "Revoked",
                          "field": "option.status",
                          "type": "not_equal"
                        },
                        {
                          "value": "approved_vvb",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                      "onErrorAction": "no-action",
                      "tag": "assign_vvb_documents",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [
                    {
                      "target": "save_assign",
                      "source": "assign_vvb",
                      "input": "RunEvent",
                      "output": "DropdownEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "save_assign",
                      "source": "assign_vvb",
                      "input": "RunEvent",
                      "output": "DropdownEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "de112ec7-fb13-49e0-90cd-0ab666e37f44",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "uiMetaData": {},
                  "options": [],
                  "dataType": "",
                  "entityType": "project",
                  "onErrorAction": "no-action",
                  "dataSource": "database",
                  "documentType": "vc",
                  "stopPropagation": true,
                  "tag": "save_assign",
                  "children": [],
                  "events": [
                    {
                      "target": "project_grid_verra",
                      "source": "save_assign",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "project_grid_pp_2",
                      "source": "save_assign",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "project_grid_vvb",
                      "source": "save_assign",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "89638cb1-31aa-4c05-8180-d70092dc79a4",
                  "blockType": "buttonBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "buttons": [
                      {
                        "tag": "Button_0",
                        "name": "Revoke",
                        "type": "selector-dialog",
                        "filters": [
                          {
                            "value": "Revoked",
                            "field": "option.status",
                            "type": "not_equal"
                          }
                        ],
                        "title": "Revoke",
                        "description": "Enter revoke reason"
                      }
                    ]
                  },
                  "tag": "revoke_project_pp_btn",
                  "children": [],
                  "events": [
                    {
                      "target": "revoke_project_pp",
                      "source": "revoke_project_pp_btn",
                      "input": "RunEvent",
                      "output": "Button_0",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "4185d175-28ff-4f2a-a703-c8e549e374b0",
                  "blockType": "revocationBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "revoke_project_pp",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "f326bf76-c0ba-4096-b9f6-1b814f2d3e82",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [
                    {
                      "name": "status",
                      "value": "Revoked"
                    }
                  ],
                  "dataSource": "database",
                  "documentType": "document",
                  "stopPropagation": true,
                  "tag": "send_revoke_project_pp",
                  "children": [],
                  "events": [
                    {
                      "target": "project_grid_pp_2",
                      "source": "send_revoke_project_pp",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "project_grid_vvb",
                      "source": "send_revoke_project_pp",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "606389a5-c29f-4ba4-9c2e-3f57b696825b",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "uiMetaData": {
                "title": "Monitoring Reports",
                "type": "blank"
              },
              "permissions": [
                "Project_Proponent"
              ],
              "onErrorAction": "no-action",
              "tag": "Monitoring_Reports_pp",
              "children": [
                {
                  "id": "6199d7bc-66ad-4634-9f79-13852db12158",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.project_details.G5",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Status",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "175px"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Revoke",
                        "name": "Revoke",
                        "tooltip": "",
                        "type": "block",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "revoke_report_pp_btn",
                        "width": "100px",
                        "bindGroup": "report_grid_pp_reports"
                      },
                      {
                        "title": "Assign",
                        "name": "assignedTo",
                        "tooltip": "",
                        "type": "block",
                        "bindGroup": "report_grid_pp_reports",
                        "action": "",
                        "url": "",
                        "dialogContent": "",
                        "dialogClass": "",
                        "dialogType": "",
                        "bindBlock": "assign_vvb_mr",
                        "bindBlocks": [],
                        "width": "150px"
                      },
                      {
                        "title": "Assign",
                        "name": "assignedTo",
                        "tooltip": "",
                        "type": "text",
                        "bindGroup": "report_grid_pp_reports",
                        "width": "150px"
                      }
                    ]
                  },
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "dependencies": [
                    "save_mint_status",
                    "save_reassign_report",
                    "save_report"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "report_grid_pp",
                  "children": [
                    {
                      "id": "0128e425-ad91-4ed2-b743-a949396d554c",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": true,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "value": "report",
                          "field": "type",
                          "type": "equal"
                        },
                        {
                          "value": "REJECTED",
                          "field": "option.status",
                          "type": "not_equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "onlyOwnDocuments": true,
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "type": "blank",
                        "options": []
                      },
                      "type": "dropdown",
                      "tag": "report_grid_pp_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "bea24aaa-75e4-4270-960a-82f51d76127f",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "uiMetaData": {
                        "type": "blank",
                        "options": []
                      },
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "report",
                          "field": "type",
                          "type": "equal"
                        },
                        {
                          "value": "REJECTED",
                          "field": "option.status",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                      "onlyOwnDocuments": true,
                      "type": "dropdown",
                      "tag": "report_grid_pp_reports_rejected",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "d20b20fe-7c5b-485b-ace2-8d6df9d799d9",
                      "blockType": "filtersAddon",
                      "defaultActive": true,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "options": [],
                        "content": "Project Name"
                      },
                      "type": "dropdown",
                      "field": "document.credentialSubject.0.project_details.G5",
                      "optionName": "document.credentialSubject.0.project_details.G5",
                      "optionValue": "document.credentialSubject.0.project_details.G5",
                      "canBeEmpty": true,
                      "tag": "report_by_project",
                      "children": [
                        {
                          "id": "be654f18-3df1-4b52-8c17-89aa1d342f0b",
                          "blockType": "documentsSourceAddon",
                          "defaultActive": true,
                          "permissions": [
                            "Project_Proponent"
                          ],
                          "onErrorAction": "no-action",
                          "filters": [
                            {
                              "value": "Validated",
                              "field": "option.status",
                              "type": "equal"
                            },
                            {
                              "value": "approved_project",
                              "field": "type",
                              "type": "equal"
                            }
                          ],
                          "dataType": "vc-documents",
                          "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                          "onlyOwnDocuments": true,
                          "tag": "report_grid_pp_projects",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "bdf24a4e-85a6-4b7f-9359-77ac22fcd07c",
                      "blockType": "historyAddon",
                      "defaultActive": false,
                      "permissions": [
                        "ANY_ROLE"
                      ],
                      "onErrorAction": "no-action",
                      "timelineLabelPath": "",
                      "timelineDescriptionPath": "",
                      "tag": "history_addon_1797768b-5cff-4271-a075-b47d47414f42",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "b2e1abf3-587c-4450-a2fe-3ca1bc05542c",
                  "blockType": "interfaceActionBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "options": [],
                    "content": "VVB"
                  },
                  "type": "dropdown",
                  "name": "document.credentialSubject.0.field0",
                  "value": "document.credentialSubject.0.id",
                  "field": "assignedTo",
                  "tag": "assign_vvb_mr",
                  "children": [
                    {
                      "id": "88e05cd2-6d11-42d5-a327-56a18c21a5cd",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "Revoked",
                          "field": "option.status",
                          "type": "not_equal"
                        },
                        {
                          "value": "approved_vvb",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                      "tag": "assign_vvb_mr_documents",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [
                    {
                      "target": "save_mr_assign",
                      "source": "assign_vvb_mr",
                      "input": "RunEvent",
                      "output": "DropdownEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "save_mr_assign",
                      "source": "assign_vvb_mr",
                      "input": "RunEvent",
                      "output": "DropdownEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "27d28904-4103-4077-8f38-abd68e8f670e",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "database",
                  "stopPropagation": true,
                  "entityType": "report",
                  "tag": "save_mr_assign",
                  "children": [],
                  "events": [
                    {
                      "target": "report_grid_verra",
                      "source": "save_mr_assign",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "report_grid_pp",
                      "source": "save_mr_assign",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "report_grid_vvb",
                      "source": "save_mr_assign",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "report_grid_verra",
                      "source": "save_mr_assign",
                      "input": "",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "8f682672-8a5f-420c-a985-52b661a46580",
                  "blockType": "buttonBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "uiMetaData": {
                    "type": "blank",
                    "buttons": [
                      {
                        "tag": "Button_0",
                        "name": "Revoke",
                        "type": "selector-dialog",
                        "filters": [
                          {
                            "value": "Revoked",
                            "field": "option.status",
                            "type": "not_equal"
                          }
                        ],
                        "title": "Revoke",
                        "description": "Enter revoke reason"
                      }
                    ],
                    "options": []
                  },
                  "onErrorAction": "no-action",
                  "tag": "revoke_report_pp_btn",
                  "children": [],
                  "events": [
                    {
                      "target": "revoke_report_pp",
                      "source": "revoke_report_pp_btn",
                      "input": "RunEvent",
                      "output": "Button_0",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "e6c80f83-e871-4a1b-bb3a-c5824d8273da",
                  "blockType": "revocationBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "updatePrevDoc": false,
                  "prevDocStatus": "",
                  "tag": "revoke_report_pp",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "6119b65d-bbd4-47bd-9bd2-c14c72a74762",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [
                    {
                      "name": "status",
                      "value": "Revoked"
                    }
                  ],
                  "dataSource": "database",
                  "documentType": "document",
                  "stopPropagation": true,
                  "tag": "send_revoke_report_pp",
                  "children": [],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "a2427d0f-f8cb-410c-b4af-c28039a4d94c",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "permissions": [
                "Project_Proponent"
              ],
              "onErrorAction": "no-action",
              "uiMetaData": {
                "type": "tabs",
                "title": "Validation & Verifications"
              },
              "tag": "Validation_and_Verification_PP",
              "children": [
                {
                  "id": "9b7b491f-e692-4f1a-ad6b-d30317fd49b0",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.ref",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Operation",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "250px"
                      }
                    ],
                    "title": "Validation Reports"
                  },
                  "tag": "validation_reports_pp",
                  "children": [
                    {
                      "id": "720dce3b-cea7-466e-9cd7-a12dc9674ff3",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "validation_report",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#965d3157-4b05-42e1-ba43-ce3a35cbd022",
                      "onlyOwnDocuments": false,
                      "tag": "validation_reports_pp_all_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "97784342-e611-4e03-8451-f49d9aee17e4",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "Project",
                        "name": "document.credentialSubject.0.ref",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Document",
                        "name": "document",
                        "tooltip": "",
                        "type": "button",
                        "action": "dialog",
                        "url": "",
                        "dialogContent": "VC",
                        "dialogClass": "",
                        "dialogType": "json",
                        "bindBlock": "",
                        "content": "View Document",
                        "uiClass": "link"
                      },
                      {
                        "title": "Operation",
                        "name": "option.status",
                        "tooltip": "",
                        "type": "text",
                        "width": "250px"
                      }
                    ]
                  },
                  "tag": "verification_reports_pp",
                  "children": [
                    {
                      "id": "b20da96c-5460-48df-89f6-b4a4ef3c5146",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "verification_report",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "schema": "#db915f2a-0740-4006-ab0f-63a8f914f1b7",
                      "tag": "verification_reports_pp_all_reports",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            },
            {
              "id": "130ebeb0-efd1-447a-971e-c255d6dac2d1",
              "blockType": "interfaceContainerBlock",
              "defaultActive": true,
              "permissions": [
                "Project_Proponent"
              ],
              "uiMetaData": {
                "title": "Tokens",
                "type": "blank"
              },
              "tag": "tokens",
              "children": [
                {
                  "id": "def69d93-880b-4459-b2eb-9750d307ff15",
                  "blockType": "interfaceDocumentsSourceBlock",
                  "defaultActive": true,
                  "permissions": [
                    "Project_Proponent"
                  ],
                  "uiMetaData": {
                    "fields": [
                      {
                        "title": "ID",
                        "name": "document.id",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Token Id",
                        "name": "document.credentialSubject.0.tokenId",
                        "tooltip": "",
                        "type": "text"
                      },
                      {
                        "title": "Serials",
                        "name": "document.credentialSubject.0.serials",
                        "tooltip": "",
                        "type": "text"
                      }
                    ]
                  },
                  "dependencies": [
                    "save_mint_status"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "tokens_grid",
                  "children": [
                    {
                      "id": "7cbaf6df-3439-425a-b5f1-6a060e92be91",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": true,
                      "permissions": [
                        "Project_Proponent"
                      ],
                      "filters": [
                        {
                          "value": "mint",
                          "field": "type",
                          "type": "equal"
                        }
                      ],
                      "dataType": "vc-documents",
                      "onlyOwnDocuments": true,
                      "onErrorAction": "no-action",
                      "tag": "tokens_grid_tokens",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            }
          ],
          "events": [],
          "artifacts": []
        },
        {
          "id": "2821b178-ca7d-4c06-9175-be5fd8a46421",
          "blockType": "interfaceContainerBlock",
          "defaultActive": true,
          "uiMetaData": {
            "type": "blank"
          },
          "permissions": [
            "VVB"
          ],
          "onErrorAction": "no-action",
          "tag": "VVB",
          "children": [
            {
              "id": "0bb02c41-8b02-40f8-b0b2-3a124443ec2c",
              "blockType": "interfaceStepBlock",
              "defaultActive": true,
              "uiMetaData": {
                "type": "blank"
              },
              "permissions": [
                "VVB"
              ],
              "onErrorAction": "no-action",
              "tag": "new_VVB",
              "children": [
                {
                  "id": "aeab02d2-d7fc-4d7a-93a5-947855da95c7",
                  "blockType": "requestVcDocumentBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "privateFields": [],
                    "type": "page",
                    "title": "New VVB"
                  },
                  "permissions": [
                    "VVB"
                  ],
                  "idType": "OWNER",
                  "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                  "onErrorAction": "no-action",
                  "presetFields": [
                    {
                      "name": "field0",
                      "title": "VVB Name",
                      "value": "field0",
                      "readonly": false
                    }
                  ],
                  "preset": true,
                  "presetSchema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                  "tag": "create_new_vvb",
                  "children": [
                    {
                      "id": "53ae73ca-b136-4527-a9ba-4be45e7290e5",
                      "blockType": "documentsSourceAddon",
                      "defaultActive": false,
                      "permissions": [
                        "VVB"
                      ],
                      "onErrorAction": "no-action",
                      "filters": [
                        {
                          "value": "REJECTED",
                          "field": "option.status",
                          "type": "equal"
                        }
                      ],
                      "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                      "dataType": "vc-documents",
                      "createdOrderDirection": "DESC",
                      "onlyOwnDocuments": true,
                      "tag": "rejected_vvb_docs",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "c4f540b0-20aa-48e1-9d02-d955ef3e9586",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [
                    {
                      "name": "status",
                      "value": "Waiting for Approval"
                    }
                  ],
                  "dataSource": "hedera",
                  "documentType": "vc",
                  "topic": "Project",
                  "topicOwner": "",
                  "entityType": "vvb",
                  "tag": "save_new_approve_document_hedera",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "2e43b7d8-9eca-4d45-a790-eab532d31dc7",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "uiMetaData": {},
                  "dataType": "",
                  "entityType": "vvb",
                  "onErrorAction": "no-action",
                  "options": [],
                  "dataSource": "database",
                  "documentType": "vc",
                  "tag": "save_new_approve_document",
                  "children": [],
                  "events": [
                    {
                      "target": "vvb_grid_verra",
                      "source": "save_new_approve_document",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    },
                    {
                      "target": "vvb_grid",
                      "source": "save_new_approve_document",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "9cb452a6-a3c1-41ca-bf52-f88aea23b240",
                  "blockType": "informationBlock",
                  "defaultActive": true,
                  "permissions": [
                    "VVB"
                  ],
                  "uiMetaData": {
                    "title": "Waiting for approval",
                    "description": "Waiting for approval",
                    "type": "text"
                  },
                  "stopPropagation": true,
                  "onErrorAction": "no-action",
                  "tag": "wait_for_approve",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "a95abd22-d952-4471-aacc-af159704aefe",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "uiMetaData": {},
                  "entityType": "vvb",
                  "dataType": "",
                  "onErrorAction": "no-action",
                  "options": [],
                  "dataSource": "database",
                  "documentType": "vc",
                  "tag": "update_approve_document_status",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "e9293d68-6ede-441a-b18c-4283bcb32f94",
                  "blockType": "reassigningBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "issuer": "policyOwner",
                  "actor": "owner",
                  "tag": "reassign_vc_vvb",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "23b88174-8448-4d69-b658-69fdf67db139",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "hedera",
                  "documentType": "vc",
                  "topic": "Project",
                  "topicOwner": "",
                  "entityType": "approved_vvb",
                  "stopPropagation": false,
                  "forceNew": false,
                  "tag": "save_vc_vvb_hedera",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "ba1254b3-5051-4abf-ae49-b041a1ff7c40",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "database",
                  "documentType": "vc",
                  "topic": "Project",
                  "topicOwner": "",
                  "entityType": "approved_vvb",
                  "stopPropagation": false,
                  "forceNew": true,
                  "tag": "save_vc_vvb",
                  "children": [],
                  "events": [
                    {
                      "target": "vvb_grid_verra",
                      "source": "save_vc_vvb",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "0c43a214-3fcf-492f-826a-32d2712f6f7f",
                  "blockType": "interfaceContainerBlock",
                  "defaultActive": true,
                  "uiMetaData": {
                    "type": "tabs"
                  },
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "tag": "VVB_Header",
                  "children": [
                    {
                      "id": "b94616f2-c685-4d6f-bc00-ecc28e549a81",
                      "blockType": "interfaceContainerBlock",
                      "defaultActive": true,
                      "permissions": [
                        "VVB"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "type": "blank",
                        "title": "Documents"
                      },
                      "tag": "VVB Documents",
                      "children": [
                        {
                          "id": "e09ac7da-a757-429f-b874-3a6b8405f7c9",
                          "blockType": "interfaceDocumentsSourceBlock",
                          "defaultActive": true,
                          "uiMetaData": {
                            "fields": [
                              {
                                "title": "Owner",
                                "name": "document.issuer",
                                "tooltip": "",
                                "type": "text"
                              },
                              {
                                "title": "Text",
                                "name": "document.credentialSubject.0.field0",
                                "tooltip": "",
                                "type": "text"
                              },
                              {
                                "title": "Operation",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "text",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "",
                                "width": "250px"
                              },
                              {
                                "title": "Document",
                                "name": "document",
                                "tooltip": "",
                                "type": "button",
                                "action": "dialog",
                                "url": "",
                                "dialogContent": "VC",
                                "dialogClass": "",
                                "dialogType": "json",
                                "bindBlock": "",
                                "content": "View Document",
                                "uiClass": "link"
                              },
                              {
                                "title": "Revoke",
                                "name": "",
                                "tooltip": "",
                                "type": "block",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "revoke_vvb_own_document_btn",
                                "bindGroup": "vvb_grid_documents"
                              }
                            ]
                          },
                          "permissions": [
                            "VVB"
                          ],
                          "dependencies": [
                            "save_new_approve_document"
                          ],
                          "onErrorAction": "no-action",
                          "tag": "vvb_grid",
                          "children": [
                            {
                              "id": "510948f5-00ca-496f-af55-28ba11d8cf9c",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "filters": [
                                {
                                  "value": "vvb",
                                  "field": "type",
                                  "type": "in"
                                },
                                {
                                  "value": "REJECTED",
                                  "field": "option.status",
                                  "type": "not_equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                              "onErrorAction": "no-action",
                              "onlyOwnDocuments": true,
                              "tag": "vvb_grid_documents",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "4413150f-a47d-40ad-8757-b4f996c1123f",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "vvb",
                                  "field": "type",
                                  "type": "in"
                                },
                                {
                                  "value": "REJECTED",
                                  "field": "option.status",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                              "onlyOwnDocuments": true,
                              "tag": "vvb_grid_documents_rejected",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "2a709a00-6187-47b8-8460-df8ba8f0f3a8",
                              "blockType": "historyAddon",
                              "defaultActive": false,
                              "permissions": [
                                "ANY_ROLE"
                              ],
                              "onErrorAction": "no-action",
                              "tag": "history_addon_eb2f56e0-f2d6-4288-bffe-ee08f89d60ab",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "ebcec8bf-e2d2-4d3c-9930-a30a5b1abcf3",
                          "blockType": "buttonBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "buttons": [
                              {
                                "tag": "Button_0",
                                "name": "Revoke",
                                "type": "selector-dialog",
                                "filters": [
                                  {
                                    "value": "Revoked",
                                    "field": "option.status",
                                    "type": "not_equal"
                                  }
                                ],
                                "title": "Revoke",
                                "description": "Enter revoke message"
                              }
                            ]
                          },
                          "tag": "revoke_vvb_own_document_btn",
                          "children": [],
                          "events": [
                            {
                              "target": "revoke_vvb_own_document",
                              "source": "revoke_vvb_own_document_btn",
                              "input": "RunEvent",
                              "output": "Button_0",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "79a44996-d6e7-4bb3-863f-fdca7bdcedd2",
                          "blockType": "revocationBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "updatePrevDoc": true,
                          "prevDocStatus": "Waiting for Approval",
                          "tag": "revoke_vvb_own_document",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "0a229395-c296-4322-afd8-a91d1eec901b",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "uiMetaData": {},
                          "entityType": "",
                          "dataType": "",
                          "onErrorAction": "no-action",
                          "options": [
                            {
                              "name": "status",
                              "value": "Revoked"
                            }
                          ],
                          "dataSource": "database",
                          "documentType": "document",
                          "stopPropagation": false,
                          "tag": "save_revoked_vvb_own_document",
                          "children": [],
                          "events": [
                            {
                              "target": "vvb_grid_verra",
                              "source": "save_revoked_vvb_own_document",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "aade310d-d4a6-4011-a75d-f7cd82fc7f11",
                          "blockType": "switchBlock",
                          "defaultActive": false,
                          "permissions": [
                            "OWNER"
                          ],
                          "onErrorAction": "no-action",
                          "executionFlow": "firstTrue",
                          "conditions": [
                            {
                              "type": "equal",
                              "value": "true == true",
                              "actor": "owner",
                              "target": "create_new_vvb",
                              "tag": "Condition_0"
                            }
                          ],
                          "tag": "return_vvb_to_request",
                          "children": [],
                          "events": [
                            {
                              "target": "create_new_vvb",
                              "source": "return_vvb_to_request",
                              "input": "RunEvent",
                              "output": "Condition_0",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "",
                              "source": "return_vvb_to_request",
                              "input": "RunEvent",
                              "output": "Condition_0",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "199951d6-94ae-4e0f-bcf2-b0cde7ae9063",
                      "blockType": "interfaceContainerBlock",
                      "defaultActive": true,
                      "uiMetaData": {
                        "title": "Projects",
                        "type": "blank"
                      },
                      "permissions": [
                        "VVB"
                      ],
                      "onErrorAction": "no-action",
                      "tag": "Projects_vvb",
                      "children": [
                        {
                          "id": "31d0e29f-b950-4b43-bb0b-58aee9035c0c",
                          "blockType": "interfaceDocumentsSourceBlock",
                          "defaultActive": true,
                          "uiMetaData": {
                            "fields": [
                              {
                                "title": "Project",
                                "name": "document.credentialSubject.0.project_details.G5",
                                "tooltip": "",
                                "type": "text"
                              },
                              {
                                "title": "Operation",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "block",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "approve_project_btn",
                                "width": "250px",
                                "bindGroup": "project_grid_vvb_projects"
                              },
                              {
                                "title": "Document",
                                "name": "document",
                                "tooltip": "",
                                "type": "button",
                                "action": "dialog",
                                "url": "",
                                "dialogContent": "VC",
                                "dialogClass": "",
                                "dialogType": "json",
                                "bindBlock": "",
                                "content": "View Document",
                                "uiClass": "link"
                              },
                              {
                                "title": "Operation",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "block",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "revoke_project_vvb_btn",
                                "bindGroup": "project_grid_vvb_projects_approved",
                                "width": "250px"
                              },
                              {
                                "title": "Operation",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "text",
                                "width": "250px"
                              },
                              {
                                "title": "Validation Report",
                                "name": "validation_report",
                                "tooltip": "",
                                "type": "block",
                                "bindGroup": "project_grid_vvb_projects_approved",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "add_new_validation_report",
                                "bindBlocks": [],
                                "width": "250px",
                                "content": "Add Validation Report"
                              }
                            ]
                          },
                          "permissions": [
                            "VVB"
                          ],
                          "dependencies": [
                            "reject_project_status",
                            "save_assign",
                            "save_reassign_project"
                          ],
                          "onErrorAction": "no-action",
                          "tag": "project_grid_vvb",
                          "children": [
                            {
                              "id": "99c3e0ea-e048-488e-8a71-626d27013fdd",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "filters": [
                                {
                                  "value": "Waiting to Validate",
                                  "field": "option.status",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                              "onlyAssignDocuments": true,
                              "onErrorAction": "no-action",
                              "tag": "project_grid_vvb_projects",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "d5ba24d5-8134-4294-ac4f-8acf8aede098",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "approved_project",
                                  "field": "type",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                              "onlyAssignDocuments": true,
                              "tag": "project_grid_vvb_projects_approved",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "cc939fc2-63cc-4e84-8d02-3e8ff15cbb8f",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "rejected_project",
                                  "field": "type",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                              "onlyAssignDocuments": true,
                              "tag": "project_grid_vvb_projects_rejected",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "30e5557a-0ab3-4ea7-8054-2291ea0cce4a",
                              "blockType": "historyAddon",
                              "defaultActive": false,
                              "permissions": [
                                "ANY_ROLE"
                              ],
                              "onErrorAction": "no-action",
                              "tag": "history_addon_974653c2-1a6b-4b93-a877-0dbe7f2a102f",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "1f11e6df-801c-4494-a626-14a29ff8ced2",
                              "blockType": "filtersAddon",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {
                                "options": [],
                                "content": "Project Name"
                              },
                              "type": "dropdown",
                              "canBeEmpty": true,
                              "field": "document.credentialSubject.0.project_details.G5",
                              "optionName": "document.credentialSubject.0.project_details.G5",
                              "optionValue": "document.credentialSubject.0.project_details.G5",
                              "tag": "filter_addon_project_grid_vvb",
                              "children": [
                                {
                                  "id": "fd9bfa4e-6f10-40e0-a2bc-5108303d36e9",
                                  "blockType": "documentsSourceAddon",
                                  "defaultActive": false,
                                  "permissions": [
                                    "VVB"
                                  ],
                                  "onErrorAction": "no-action",
                                  "filters": [],
                                  "dataType": "vc-documents",
                                  "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                                  "tag": "project_grid_vvb_all",
                                  "children": [],
                                  "events": [],
                                  "artifacts": []
                                }
                              ],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "7cd1f620-22bd-42c5-8097-8e6f5d5d380f",
                          "blockType": "buttonBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "buttons": [
                              {
                                "tag": "Button_0",
                                "name": "Validate",
                                "type": "selector",
                                "filters": [],
                                "field": "option.status",
                                "value": "Validated",
                                "uiClass": "btn-approve"
                              },
                              {
                                "tag": "Button_1",
                                "name": "Reject",
                                "type": "selector-dialog",
                                "filters": [],
                                "field": "option.status",
                                "value": "REJECTED",
                                "uiClass": "btn-reject",
                                "title": "Reject",
                                "description": "Enter reject reason"
                              }
                            ]
                          },
                          "tag": "approve_project_btn",
                          "children": [],
                          "events": [
                            {
                              "target": "approved_project_status",
                              "source": "approve_project_btn",
                              "input": "RunEvent",
                              "output": "Button_0",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "reject_project_status",
                              "source": "approve_project_btn",
                              "input": "RunEvent",
                              "output": "Button_1",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "4a5c9384-f3b1-41a5-9036-7495236d64da",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "uiMetaData": {},
                          "stopPropagation": false,
                          "dataType": "",
                          "entityType": "project",
                          "options": [],
                          "onErrorAction": "no-action",
                          "dataSource": "database",
                          "documentType": "vc",
                          "tag": "approved_project_status",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "8b44ac85-ed5c-43ba-86e1-43135e264c7b",
                          "blockType": "reassigningBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "tag": "reassign_project",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "95987b84-342d-415b-8d5b-193d925bb978",
                          "blockType": "setRelationshipsBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "tag": "set_relationships_to_project_vvb",
                          "children": [
                            {
                              "id": "858e6249-d781-4bbf-9fbe-bfb2b8e615f8",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "approved_vvb",
                                  "field": "type",
                                  "type": "equal"
                                },
                                {
                                  "value": "Revoked",
                                  "field": "option.status",
                                  "type": "not_equal"
                                }
                              ],
                              "onlyOwnDocuments": true,
                              "dataType": "vc-documents",
                              "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                              "tag": "vvb_own_documents_relationships",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "9c4ca834-1ca0-4d1b-a33d-a7b055f35581",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "type": "blank"
                          },
                          "options": [],
                          "dataSource": "hedera",
                          "documentType": "vc",
                          "topic": "Project",
                          "topicOwner": "",
                          "entityType": "approved_project",
                          "filters": [],
                          "tag": "reassign_project_hedera",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "96b2bf12-46d2-4949-a958-f351ceac0331",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "entityType": "approved_project",
                          "dataType": "",
                          "stopPropagation": true,
                          "dataSource": "database",
                          "documentType": "vc",
                          "tag": "save_reassign_project",
                          "children": [],
                          "events": [
                            {
                              "target": "project_grid_verra",
                              "source": "save_reassign_project",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "project_grid_pp_2",
                              "source": "save_reassign_project",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "project_grid_vvb",
                              "source": "save_reassign_project",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "9a5f5f7c-f64c-40c6-afb2-b95cc19e5808",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "stopPropagation": false,
                          "entityType": "project",
                          "dataType": "",
                          "dataSource": "database",
                          "documentType": "vc",
                          "tag": "reject_project_status",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "b41f0640-15a3-45c3-af73-19174f927ed6",
                          "blockType": "reassigningBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "tag": "save_reassign_rejected_project",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "9a6e2cd6-61cc-4ced-a30a-6d9c038e307c",
                          "blockType": "setRelationshipsBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "tag": "set_relationships_to_rejected_vvb",
                          "children": [
                            {
                              "id": "e4d9d20a-cf82-4eb7-b780-a64f38dded1b",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "approved_vvb",
                                  "field": "type",
                                  "type": "equal"
                                },
                                {
                                  "value": "Revoked",
                                  "field": "option.status",
                                  "type": "not_equal"
                                }
                              ],
                              "onlyOwnDocuments": true,
                              "dataType": "vc-documents",
                              "schema": "#41db8188-04c1-4f57-b73e-4b7d2efc797c",
                              "tag": "vvb_own_documents_relationships_rejected",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "db0556d0-3bec-4103-9bbf-46fc4fe166b7",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "dataSource": "hedera",
                          "documentType": "vc",
                          "topic": "Project",
                          "topicOwner": "",
                          "entityType": "rejected_project",
                          "tag": "save_rejected_project_hedera",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "a59f8f67-459f-432c-9cb5-8444c749a1bb",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "entityType": "rejected_project",
                          "dataType": "",
                          "stopPropagation": true,
                          "dataSource": "database",
                          "documentType": "vc",
                          "tag": "save_rejected_project",
                          "children": [],
                          "events": [
                            {
                              "target": "project_grid_pp_2",
                              "source": "save_rejected_project",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "3e21add6-6777-4935-82af-682fd12c17cc",
                          "blockType": "buttonBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "buttons": [
                              {
                                "tag": "Button_0",
                                "name": "Revoke",
                                "type": "selector-dialog",
                                "filters": [
                                  {
                                    "value": "Revoked",
                                    "field": "option.status",
                                    "type": "not_equal"
                                  }
                                ],
                                "title": "Revoke",
                                "description": "Enter revoke reason",
                                "field": ""
                              }
                            ]
                          },
                          "tag": "revoke_project_vvb_btn",
                          "children": [],
                          "events": [
                            {
                              "target": "revoke_project_vvb",
                              "source": "revoke_project_vvb_btn",
                              "input": "RunEvent",
                              "output": "Button_0",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "0000301c-40c3-4a26-8fb0-c62b1da7e481",
                          "blockType": "revocationBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "updatePrevDoc": true,
                          "prevDocStatus": "Waiting to Validate",
                          "tag": "revoke_project_vvb",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "9d06330a-0749-4bd7-b1be-06f881547034",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [
                            {
                              "name": "status",
                              "value": "Revoked"
                            }
                          ],
                          "entityType": "",
                          "dataType": "",
                          "stopPropagation": true,
                          "dataSource": "database",
                          "documentType": "document",
                          "tag": "save_revoke_project_vvb",
                          "children": [],
                          "events": [
                            {
                              "target": "project_grid_verra",
                              "source": "save_revoke_project_vvb",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "project_grid_pp_2",
                              "source": "save_revoke_project_vvb",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "project_grid_vvb",
                              "source": "save_revoke_project_vvb",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "e45f72fd-745b-4be4-bf7e-5428ff8a46fe",
                          "blockType": "interfaceStepBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "title": "Validation Report"
                          },
                          "cyclic": true,
                          "tag": "new_validation_report",
                          "children": [
                            {
                              "id": "7eca0b6a-75be-4fcf-9d74-30df4d1a148d",
                              "blockType": "requestVcDocumentBlock",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {
                                "type": "dialog",
                                "title": "New validation report",
                                "content": "Add Validation Report",
                                "buttonClass": "link",
                                "dialogContent": "Validation Report"
                              },
                              "presetFields": [],
                              "schema": "#965d3157-4b05-42e1-ba43-ce3a35cbd022",
                              "idType": "UUID",
                              "tag": "add_new_validation_report",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "95958ed0-e9ad-4294-9330-ebe994acd478",
                              "blockType": "sendToGuardianBlock",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {},
                              "options": [
                                {
                                  "name": "status",
                                  "value": "Submitted"
                                }
                              ],
                              "dataSource": "hedera",
                              "entityType": "validation_report",
                              "topic": "Project",
                              "topicOwner": "",
                              "tag": "save_validation_report_hedera",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "e66a0e6e-6b05-4f2a-840e-39b3051735d5",
                              "blockType": "sendToGuardianBlock",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {},
                              "options": [
                                {
                                  "name": "status",
                                  "value": "Submitted"
                                }
                              ],
                              "dataSource": "database",
                              "entityType": "validation_report",
                              "tag": "save_validation_report_db",
                              "children": [],
                              "events": [
                                {
                                  "target": "validation_reports_vvb",
                                  "source": "save_validation_report_db",
                                  "input": "",
                                  "output": "RunEvent",
                                  "actor": "",
                                  "disabled": false
                                },
                                {
                                  "target": "validation_reports_verra",
                                  "source": "save_validation_report_db",
                                  "input": "",
                                  "output": "RunEvent",
                                  "actor": "",
                                  "disabled": false
                                },
                                {
                                  "target": "validation_reports_pp",
                                  "source": "save_validation_report_db",
                                  "input": "",
                                  "output": "RunEvent",
                                  "actor": "",
                                  "disabled": false
                                }
                              ],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "ca4f7f24-bbc1-41cd-8083-a4c6d306acbd",
                      "blockType": "interfaceContainerBlock",
                      "defaultActive": true,
                      "uiMetaData": {
                        "title": "Monitoring Reports",
                        "type": "blank"
                      },
                      "permissions": [
                        "VVB"
                      ],
                      "onErrorAction": "no-action",
                      "tag": "Monitoring_Reports_vvb",
                      "children": [
                        {
                          "id": "e1cb01c0-c711-4f71-9399-d3c760a0874b",
                          "blockType": "interfaceDocumentsSourceBlock",
                          "defaultActive": true,
                          "uiMetaData": {
                            "fields": [
                              {
                                "title": "Project",
                                "name": "document.credentialSubject.0.project_details.G5",
                                "tooltip": "",
                                "type": "text"
                              },
                              {
                                "title": "Status",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "text",
                                "width": ""
                              },
                              {
                                "title": "Operation",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "block",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "approve_report_btn",
                                "bindGroup": "report_grid_vvb_reports",
                                "width": "150px"
                              },
                              {
                                "title": "Document",
                                "name": "document",
                                "tooltip": "",
                                "type": "button",
                                "action": "dialog",
                                "url": "",
                                "dialogContent": "VC",
                                "dialogClass": "",
                                "dialogType": "json",
                                "bindBlock": "",
                                "content": "View Document",
                                "uiClass": "link",
                                "width": "170px"
                              },
                              {
                                "title": "Revoke",
                                "name": "",
                                "tooltip": "",
                                "type": "block",
                                "width": "100px",
                                "bindGroup": "report_grid_vvb_reports(approved)",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "revoke_reassign_report_btn"
                              },
                              {
                                "title": "Verification Report",
                                "name": "verification_report",
                                "tooltip": "",
                                "type": "block",
                                "bindGroup": "report_grid_vvb_reports(approved)",
                                "action": "",
                                "url": "",
                                "dialogContent": "",
                                "dialogClass": "",
                                "dialogType": "",
                                "bindBlock": "add_verification_report",
                                "bindBlocks": [],
                                "content": "Add Verification Report",
                                "width": "250px"
                              }
                            ]
                          },
                          "permissions": [
                            "VVB"
                          ],
                          "dependencies": [
                            "reject_report_status",
                            "save_mint_status",
                            "save_reassign_report",
                            "save_report"
                          ],
                          "onErrorAction": "no-action",
                          "tag": "report_grid_vvb",
                          "children": [
                            {
                              "id": "dcb2f3fd-dcb2-432f-b0f4-0785e9692a10",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "filters": [
                                {
                                  "value": "report",
                                  "field": "type",
                                  "type": "equal"
                                },
                                {
                                  "value": "Waiting for Verification",
                                  "field": "option.status",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                              "onlyAssignDocuments": true,
                              "onErrorAction": "no-action",
                              "onlyOwnDocuments": false,
                              "tag": "report_grid_vvb_reports",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "718e4a19-e1e2-4ec8-a1b5-225bf8fcef62",
                              "blockType": "filtersAddon",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {
                                "options": [],
                                "content": "Project Name"
                              },
                              "type": "dropdown",
                              "field": "document.credentialSubject.0.project_details.G5",
                              "optionName": "document.credentialSubject.0.project_details.G5",
                              "optionValue": "document.credentialSubject.0.project_details.G5",
                              "canBeEmpty": true,
                              "tag": "report_by_project_vvb",
                              "children": [
                                {
                                  "id": "327b01e4-7670-4cc9-b1a8-275a49825b4f",
                                  "blockType": "documentsSourceAddon",
                                  "defaultActive": true,
                                  "permissions": [
                                    "VVB"
                                  ],
                                  "onErrorAction": "no-action",
                                  "filters": [
                                    {
                                      "value": "Validated",
                                      "field": "option.status",
                                      "type": "equal"
                                    },
                                    {
                                      "value": "approved_project",
                                      "field": "type",
                                      "type": "equal"
                                    }
                                  ],
                                  "dataType": "vc-documents",
                                  "onlyAssignDocuments": true,
                                  "schema": "#55df4f18-d3e5-4b93-af87-703a52c704d6",
                                  "tag": "report_grid_vvb_projects",
                                  "children": [],
                                  "events": [],
                                  "artifacts": []
                                }
                              ],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "bbeac4ee-cf4d-495b-a4b0-7d92288a18a9",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "approved_report",
                                  "field": "type",
                                  "type": "equal"
                                }
                              ],
                              "uiMetaData": {
                                "type": "blank"
                              },
                              "dataType": "vc-documents",
                              "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                              "onlyAssignDocuments": true,
                              "tag": "report_grid_vvb_reports(approved)",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "0a48dffd-defc-4368-b2fb-84975dea7381",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "rejected_report",
                                  "field": "type",
                                  "type": "equal"
                                }
                              ],
                              "uiMetaData": {
                                "type": "blank"
                              },
                              "dataType": "vc-documents",
                              "schema": "#53caa366-4c21-46ff-b16d-f95a850f7c7c",
                              "onlyAssignDocuments": true,
                              "tag": "report_grid_vvb_reports(rejected)",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "6d040ec4-73fa-4ea3-8faf-58255057693b",
                              "blockType": "historyAddon",
                              "defaultActive": false,
                              "permissions": [
                                "ANY_ROLE"
                              ],
                              "onErrorAction": "no-action",
                              "tag": "history_addon_a40f0da4-e982-481c-a23e-b86f7e76e770",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "c8b7515b-a2b5-4ecb-a229-e5952f089ee5",
                          "blockType": "buttonBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "buttons": [
                              {
                                "tag": "Button_0",
                                "name": "Verify",
                                "type": "selector",
                                "filters": [],
                                "field": "option.status",
                                "value": "Verified",
                                "uiClass": "btn-approve"
                              },
                              {
                                "tag": "Button_1",
                                "name": "Reject",
                                "type": "selector-dialog",
                                "filters": [],
                                "title": "Reject",
                                "description": "Enter reject reason",
                                "field": "option.status",
                                "value": "REJECTED",
                                "uiClass": "btn-reject"
                              }
                            ]
                          },
                          "tag": "approve_report_btn",
                          "children": [],
                          "events": [
                            {
                              "target": "approve_report_status",
                              "source": "approve_report_btn",
                              "input": "RunEvent",
                              "output": "Button_0",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "reject_report_status",
                              "source": "approve_report_btn",
                              "input": "RunEvent",
                              "output": "Button_1",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "8e3c2d62-d931-4c29-952a-4cb87ecdb000",
                          "blockType": "interfaceStepBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "title": "Verification Report"
                          },
                          "cyclic": true,
                          "tag": "new_verification_report",
                          "children": [
                            {
                              "id": "831029b3-f01b-4aad-8866-6336ec82f972",
                              "blockType": "requestVcDocumentBlock",
                              "defaultActive": true,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {
                                "type": "dialog",
                                "title": "New Verification Report",
                                "content": "Add Verification Report",
                                "dialogContent": "Verification Report",
                                "buttonClass": "link"
                              },
                              "presetFields": [],
                              "presetSchema": "",
                              "schema": "#db915f2a-0740-4006-ab0f-63a8f914f1b7",
                              "idType": "UUID",
                              "preset": false,
                              "tag": "add_verification_report",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "e85b923b-e589-4c7f-8c02-0cf9428c8f63",
                              "blockType": "sendToGuardianBlock",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {},
                              "options": [
                                {
                                  "name": "status",
                                  "value": "Submitted"
                                }
                              ],
                              "dataSource": "hedera",
                              "topic": "Project",
                              "tag": "save_verification_report_hedera",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            },
                            {
                              "id": "e4ed8c10-c822-4b9d-8d11-a17f099bb4de",
                              "blockType": "sendToGuardianBlock",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "uiMetaData": {},
                              "options": [
                                {
                                  "name": "status",
                                  "value": "Submitted"
                                }
                              ],
                              "dataSource": "database",
                              "entityType": "verification_report",
                              "tag": "save_verification_report_db",
                              "children": [],
                              "events": [
                                {
                                  "target": "verification_reports_vvb",
                                  "source": "save_verification_report_db",
                                  "input": "",
                                  "output": "RunEvent",
                                  "actor": "",
                                  "disabled": false
                                },
                                {
                                  "target": "verification_reports_verra",
                                  "source": "save_verification_report_db",
                                  "input": "",
                                  "output": "RunEvent",
                                  "actor": "",
                                  "disabled": false
                                },
                                {
                                  "target": "verification_reports_pp",
                                  "source": "save_verification_report_db",
                                  "input": "",
                                  "output": "RunEvent",
                                  "actor": "",
                                  "disabled": false
                                }
                              ],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "beb6a915-e4cb-4f1e-8b32-77519f0bfdc8",
                      "blockType": "interfaceContainerBlock",
                      "defaultActive": true,
                      "permissions": [
                        "VVB"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "type": "tabs"
                      },
                      "tag": "Validation_and_Verification_vvb",
                      "children": [
                        {
                          "id": "99b85e88-3919-4732-90d8-633c86309ea8",
                          "blockType": "interfaceDocumentsSourceBlock",
                          "defaultActive": true,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "fields": [
                              {
                                "title": "Project",
                                "name": "document.credentialSubject.0.ref",
                                "tooltip": "",
                                "type": "text"
                              },
                              {
                                "title": "Document",
                                "name": "document",
                                "tooltip": "",
                                "type": "button",
                                "action": "dialog",
                                "url": "",
                                "dialogContent": "VC",
                                "dialogClass": "",
                                "dialogType": "json",
                                "bindBlock": "",
                                "content": "View Document",
                                "uiClass": "link"
                              },
                              {
                                "title": "Status",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "text",
                                "width": "250px"
                              }
                            ],
                            "title": "Validation Reports"
                          },
                          "tag": "validation_reports_vvb",
                          "children": [
                            {
                              "id": "e734c094-e806-4ef8-9d17-9d1b8d0edffb",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "validation_report",
                                  "field": "type",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#965d3157-4b05-42e1-ba43-ce3a35cbd022",
                              "onlyOwnDocuments": true,
                              "tag": "validation_reports_vvb_all_reports",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "70337799-a530-465b-8a9f-94057518744c",
                          "blockType": "interfaceDocumentsSourceBlock",
                          "defaultActive": true,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "fields": [
                              {
                                "title": "Project",
                                "name": "document.credentialSubject.0.ref",
                                "tooltip": "",
                                "type": "text"
                              },
                              {
                                "title": "Document",
                                "name": "document",
                                "tooltip": "",
                                "type": "button",
                                "action": "dialog",
                                "url": "",
                                "dialogContent": "VC",
                                "dialogClass": "",
                                "dialogType": "json",
                                "bindBlock": "",
                                "content": "View Document",
                                "uiClass": "link"
                              },
                              {
                                "title": "Status",
                                "name": "option.status",
                                "tooltip": "",
                                "type": "text",
                                "width": "250px"
                              }
                            ]
                          },
                          "tag": "verification_reports_vvb",
                          "children": [
                            {
                              "id": "676b4a14-d699-496a-9dc2-150a8ff629c3",
                              "blockType": "documentsSourceAddon",
                              "defaultActive": false,
                              "permissions": [
                                "VVB"
                              ],
                              "onErrorAction": "no-action",
                              "filters": [
                                {
                                  "value": "verification_report",
                                  "field": "type",
                                  "type": "equal"
                                }
                              ],
                              "dataType": "vc-documents",
                              "schema": "#db915f2a-0740-4006-ab0f-63a8f914f1b7",
                              "tag": "verification_reports_vvb_all_verifications",
                              "children": [],
                              "events": [],
                              "artifacts": []
                            }
                          ],
                          "events": [],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "8a57f59f-8f83-4983-922a-e6d39fd6d1d1",
                      "blockType": "interfaceContainerBlock",
                      "defaultActive": false,
                      "permissions": [
                        "VVB"
                      ],
                      "uiMetaData": {
                        "type": "blank"
                      },
                      "onErrorAction": "no-action",
                      "tag": "mint_events",
                      "children": [
                        {
                          "id": "8abcd472-32af-4078-bf1d-6e462f78245a",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "uiMetaData": {},
                          "dataType": "",
                          "entityType": "report",
                          "options": [],
                          "stopPropagation": false,
                          "onErrorAction": "no-action",
                          "dataSource": "database",
                          "documentType": "vc",
                          "tag": "approve_report_status",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "f67081c1-7eca-42a0-9ef8-31a1ec5acca5",
                          "blockType": "reassigningBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "tag": "reassign_report",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "c095ca12-db92-4c96-99c6-67ec3516e5e9",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "dataSource": "hedera",
                          "documentType": "vc",
                          "topic": "Project",
                          "topicOwner": "",
                          "stopPropagation": false,
                          "entityType": "approved_report",
                          "tag": "save_reassign_report_hedera",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "53c87332-74fa-4f0e-be2b-b39fc1cdca36",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "stopPropagation": true,
                          "dataType": "",
                          "entityType": "approved_report",
                          "documentType": "vc",
                          "dataSource": "database",
                          "tag": "save_reassign_report",
                          "children": [],
                          "events": [
                            {
                              "target": "report_grid_verra",
                              "source": "save_reassign_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "report_grid_pp",
                              "source": "save_reassign_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "report_grid_vvb",
                              "source": "save_reassign_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "0ddd805d-0630-4e6b-8a12-9137b7390428",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "uiMetaData": {},
                          "stopPropagation": false,
                          "entityType": "report",
                          "dataType": "",
                          "options": [],
                          "onErrorAction": "no-action",
                          "dataSource": "database",
                          "documentType": "vc",
                          "tag": "reject_report_status",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "e12213ec-8ba9-415b-b604-dcdfd5a70283",
                          "blockType": "reassigningBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "tag": "reassign_rejected_report",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "08df40a6-ecf2-4ce4-bb20-1b67155e964d",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "dataSource": "hedera",
                          "documentType": "vc",
                          "topic": "Project",
                          "topicOwner": "",
                          "stopPropagation": false,
                          "entityType": "rejected_report",
                          "tag": "save_reassign_rejected_report_hedera",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "fbb76e99-2513-436d-835f-1dfa4c106f20",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [],
                          "stopPropagation": true,
                          "dataType": "",
                          "entityType": "rejected_report",
                          "documentType": "vc",
                          "dataSource": "database",
                          "tag": "save_reassign_rejected_report",
                          "children": [],
                          "events": [
                            {
                              "target": "report_grid_verra",
                              "source": "save_reassign_rejected_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "report_grid_pp",
                              "source": "save_reassign_rejected_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "report_grid_vvb",
                              "source": "save_reassign_rejected_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "dbd8f4ce-ee94-46c6-99d2-54062ba8e8b1",
                          "blockType": "buttonBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {
                            "buttons": [
                              {
                                "tag": "Button_0",
                                "name": "Revoke",
                                "type": "selector-dialog",
                                "filters": [
                                  {
                                    "value": "Revoked",
                                    "field": "option.status",
                                    "type": "not_equal"
                                  }
                                ],
                                "title": "Revoke",
                                "description": "Enter revoke message"
                              }
                            ]
                          },
                          "tag": "revoke_reassign_report_btn",
                          "children": [],
                          "events": [
                            {
                              "target": "revoke_reassign_report",
                              "source": "revoke_reassign_report_btn",
                              "input": "RunEvent",
                              "output": "Button_0",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        },
                        {
                          "id": "a1d0c30b-29f8-46a8-844c-8fac3b571aaf",
                          "blockType": "revocationBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "updatePrevDoc": true,
                          "prevDocStatus": "Waiting for Verification",
                          "tag": "revoke_reassign_report",
                          "children": [],
                          "events": [],
                          "artifacts": []
                        },
                        {
                          "id": "8f6f7d23-c51b-4696-86cb-17c6bdf1f88b",
                          "blockType": "sendToGuardianBlock",
                          "defaultActive": false,
                          "permissions": [
                            "VVB"
                          ],
                          "onErrorAction": "no-action",
                          "uiMetaData": {},
                          "options": [
                            {
                              "name": "status",
                              "value": "Revoked"
                            }
                          ],
                          "dataSource": "database",
                          "documentType": "document",
                          "stopPropagation": true,
                          "tag": "save_revoke_reassign_report",
                          "children": [],
                          "events": [
                            {
                              "target": "report_grid_verra",
                              "source": "save_revoke_reassign_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "report_grid_pp",
                              "source": "save_revoke_reassign_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            },
                            {
                              "target": "report_grid_vvb",
                              "source": "save_revoke_reassign_report",
                              "input": "RefreshEvent",
                              "output": "RefreshEvent",
                              "actor": "",
                              "disabled": false
                            }
                          ],
                          "artifacts": []
                        }
                      ],
                      "events": [],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "123a00d3-16bf-45bc-9941-2c58a012b7c2",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "uiMetaData": {},
                  "entityType": "vvb",
                  "dataType": "",
                  "options": [],
                  "onErrorAction": "no-action",
                  "dataSource": "database",
                  "documentType": "vc",
                  "tag": "update_approve_document_status_2",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "b49dafc7-f6f0-4438-a452-2bd145645722",
                  "blockType": "reassigningBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "issuer": "policyOwner",
                  "actor": "owner",
                  "tag": "reassign_rejected_vvb",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "6cae1b35-515f-4f1c-acf2-9421c40b842b",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {},
                  "options": [],
                  "dataSource": "hedera",
                  "documentType": "vc",
                  "topic": "Project",
                  "topicOwner": "",
                  "entityType": "rejected_vvb",
                  "stopPropagation": false,
                  "forceNew": false,
                  "tag": "reassign_rejected_vvb_hedera",
                  "children": [],
                  "events": [],
                  "artifacts": []
                },
                {
                  "id": "4b17b59e-d021-406a-a30b-9656d0edc87d",
                  "blockType": "sendToGuardianBlock",
                  "defaultActive": false,
                  "permissions": [
                    "VVB"
                  ],
                  "uiMetaData": {},
                  "entityType": "rejected_vvb",
                  "dataType": "",
                  "onErrorAction": "no-action",
                  "options": [],
                  "dataSource": "database",
                  "documentType": "vc",
                  "forceNew": true,
                  "tag": "save_reassign_rejected_vvb",
                  "children": [],
                  "events": [
                    {
                      "target": "vvb_grid_verra",
                      "source": "save_reassign_rejected_vvb",
                      "input": "RefreshEvent",
                      "output": "RefreshEvent",
                      "actor": "",
                      "disabled": false
                    }
                  ],
                  "artifacts": []
                },
                {
                  "id": "b43072b6-1931-4223-8a4f-aed949cff8fb",
                  "blockType": "interfaceContainerBlock",
                  "defaultActive": true,
                  "permissions": [
                    "VVB"
                  ],
                  "onErrorAction": "no-action",
                  "uiMetaData": {
                    "type": "blank"
                  },
                  "tag": "rewrite_vvb",
                  "children": [
                    {
                      "id": "fe6fdabd-2a8d-45ba-a252-b4fe4923c9cc",
                      "blockType": "informationBlock",
                      "defaultActive": true,
                      "permissions": [
                        "VVB"
                      ],
                      "uiMetaData": {
                        "description": "Your application was rejected",
                        "title": "Rejected",
                        "type": "text",
                        "bindBlock": "return_vvb_btn"
                      },
                      "stopPropagation": true,
                      "onErrorAction": "no-action",
                      "tag": "vvb_rejected",
                      "children": [],
                      "events": [],
                      "artifacts": []
                    },
                    {
                      "id": "157d2060-ed1c-4065-8c2a-df67ccefb641",
                      "blockType": "buttonBlock",
                      "defaultActive": true,
                      "permissions": [
                        "VVB"
                      ],
                      "onErrorAction": "no-action",
                      "uiMetaData": {
                        "buttons": [
                          {
                            "tag": "Button_0",
                            "name": "Return",
                            "type": "selector",
                            "filters": []
                          }
                        ]
                      },
                      "tag": "return_vvb_btn",
                      "children": [],
                      "events": [
                        {
                          "target": "create_new_vvb",
                          "source": "return_vvb_btn",
                          "input": "RunEvent",
                          "output": "Button_0",
                          "actor": "",
                          "disabled": false
                        }
                      ],
                      "artifacts": []
                    }
                  ],
                  "events": [],
                  "artifacts": []
                }
              ],
              "events": [],
              "artifacts": []
            }
          ],
          "events": [],
          "artifacts": []
        }
      ],
      "events": [],
      "artifacts": []
    }
  }