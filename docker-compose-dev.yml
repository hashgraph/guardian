version: '3.8'
services:
    mongo:
        image: mongo:6.0.13
        command: "--setParameter allowDiskUseByDefault=true"
        restart: always
        expose:
            - 27017
        ports:
            - 27017:27017
    cache:
        image: registry.redict.io/redict
        restart: always
        expose:
            - 6379
        ports:
            - "6379:6379"
    ipfs-node:
        image: ipfs/kubo:v0.26.0
        ports:
            - "5001:5001"
            - "4001:4001"
            - "8080:8080"
        volumes:
            - ./runtime-data/ipfs/staging:/export:rw
            - ./runtime-data/ipfs/data:/data/ipfs:rw
    message-broker:
        image: nats:2.9.24
        expose:
            - 4222
        ports:
            - '8222:8222'
            - '4222:4222'
            - '6222:6222'
        command: '--http_port 8222'
    dev-tools:
        build: .
        image: guardian-development
        volumes:
            - ./:/app
            - ~/.npm/:/root/.npm
        restart: "no"
        command: 'node dev.mjs'

    logger-service:
        image: guardian-development
        depends_on:
            - dev-tools
            - message-broker
        volumes:
            - ./:/app
        restart: always
        command: npm run dev:docker --prefix /app/logger-service
        environment:
            - MQ_ADDRESS=message-broker
            - DB_HOST=mongo

    notification-service:
        image: guardian-development
        depends_on:
            - dev-tools
            - message-broker
        volumes:
            - ./:/app
        restart: always
        command: npm run dev:docker --prefix /app/notification-service
        environment:
            - MQ_ADDRESS=message-broker
            - DB_HOST=mongo

    auth-service:
        image: guardian-development
        restart: always
        depends_on:
            - dev-tools
            - mongo
            - message-broker
            - logger-service

        environment:
            - MQ_ADDRESS=message-broker
            - DB_HOST=mongo
        volumes:
            - ./:/app
        command: npm run dev:docker --prefix /app/auth-service

    api-gateway:
        image: guardian-development
        restart: always
        expose:
            - 3002
        ports:
            - 3002:3002
        depends_on:
            - dev-tools
            - cache
            - mongo
            - message-broker
            - guardian-service
            - auth-service
            - logger-service
        environment:
            - MQ_ADDRESS=message-broker
            - DB_HOST=mongo
        volumes:
            - ./:/app
        command: npm run dev:docker --prefix /app/api-gateway

    topic-viewer:
        image: guardian-development
        restart: always
        expose:
            - 3006
        ports:
            - 3006:3006
        depends_on:
            - dev-tools
            - mongo
            - message-broker
            - guardian-service
            - auth-service
            - logger-service
        environment:
            - MQ_ADDRESS=message-broker
            - DB_HOST=mongo
        volumes:
            - ./:/app
        command: npm run dev:docker --prefix /app/topic-viewer

    guardian-service:
        image: guardian-development
        restart: always
        depends_on:
            - mongo
            - message-broker
            - auth-service
            - logger-service
        environment:
            - MQ_ADDRESS=message-broker
            - DB_HOST=mongo
            - OPERATOR_ID=${OPERATOR_ID}
            - OPERATOR_KEY=${OPERATOR_KEY}
            - INITIALIZATION_TOPIC_ID=${INITIALIZATION_TOPIC_ID}
        volumes:
            - ./:/app
        command: npm run dev:docker --prefix /app/guardian-service
    mrv-sender:
        image: guardian-development
        expose:
            - 3005
        depends_on:
            - dev-tools
        volumes:
            - ./:/app
        command: npm run dev:docker --prefix /app/mrv-sender
    front-end:
        image: guardian-development
        expose:
            - 4200
        ports:
            - 4200:4200
        depends_on:
            - dev-tools
        volumes:
            - ./:/app
        environment:
            - NG_PERSISTENT_BUILD_CACHE=1
            - CI=local
        command: npm run dev:docker --prefix /app/frontend

    web-proxy:
        image: nginx:1.23.2
        ports:
            - '3000:80'
        depends_on:
            - guardian-service
            - auth-service
            - api-gateway
            - mrv-sender
            - front-end
        volumes:
            - ./web-proxy/configs/local.conf:/etc/nginx/conf.d/default.conf

