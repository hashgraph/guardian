name: Guardian CI UI Tests (Manual)
run-name: Guardian CI UI Tests (Manual)
on:
  workflow_dispatch:

jobs:
  buildAndTest:
    name: Build and Test (Manual)
    runs-on: guardian-linux-medium
    services:
      cache:
        image: registry.redict.io/redict
        ports:
          - 6379:6379
    strategy:
      matrix:
        node-version: [20.19.5]
        mongodb-version: [7.0.21]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 #v6.0.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Yarn
        uses: Borales/actions-yarn@3766bb1335b98fb13c60eaf358fe20811b730a88 # v5.0.0
        with:
          cmd: install

      - name: Install dependencies
        run: yarn install

      - name: Build packages
        run: |
          pushd interfaces
          yarn run build
          popd
          pushd common
          yarn run build
          popd
          pushd frontend
          npm install
          popd
          pushd notification-service
          yarn run build
          popd
          pushd logger-service
          yarn run build
          popd
          pushd auth-service
          yarn run build
          popd
          pushd queue-service
          yarn run build
          popd
          pushd topic-listener-service
          yarn run build
          popd
          pushd guardian-service
          yarn run build
          popd
          pushd policy-service
          yarn run build
          popd
          pushd worker-service
          yarn run build
          popd
          pushd api-gateway
          yarn run build
          popd
      - name: Start NatsMQ
        uses: step-security/nats-action@4c3a6529e7e03047bc23f178a4b47ea8f901d215 # v0.1.3
        with:
          port: "4222"

      - name: Start MongoDB
        uses: step-security/mongodb-github-action@7263579321780efeb685cdd6a2a356aad687ebab # v1.12.3
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Run Guardian
        run: |
          pushd notification-service
          npm start &
          sleep 20
          popd
          pushd logger-service
          npm start &
          sleep 20
          popd
          pushd auth-service
          npm start &
          sleep 20
          popd
          pushd guardian-service
          npm start &
          sleep 20
          popd
          pushd policy-service
          npm start &
          sleep 20
          popd
          pushd queue-service
          npm start &
          sleep 20
          popd
          pushd topic-listener-service
          npm start &
          sleep 20
          popd
          pushd worker-service
          npm start &
          npm start &
          npm start &
          npm start &
          npm start &
          sleep 20
          popd
          pushd api-gateway
          npm start &
          sleep 30
          popd
          pushd frontend
          ./node_modules/.bin/ng  serve --proxy-config ./proxy.conf.json &
          sleep 120
          popd
        env:
          CI: true
          OPERATOR_ID: ${{ secrets.CI_HEDERA_ACCOUNT }}
          OPERATOR_KEY: ${{ secrets.CI_HEDERA_PRIV_KEY }}
          JWT_PRIVATE_KEY: ${{ secrets.CI_JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.CI_JWT_PUBLIC_KEY }}
          SERVICE_JWT_PUBLIC_KEY_ALL: ${{ secrets.CI_JWT_PUBLIC_KEY }}
          SERVICE_JWT_SECRET_KEY_ALL: ${{ secrets.CI_JWT_PRIVATE_KEY }}
          IPFS_NODE_ADDRESS: http://localhost:5001
          IPFS_PROVIDER: web3storage
          IPFS_PUBLIC_GATEWAY: https://dweb.link/ipfs/${cid}
          IPFS_STORAGE_KEY: ${{ secrets.E2E_IPFS_STORAGE_KEY }}
          IPFS_STORAGE_PROOF: ${{ secrets.E2E_IPFS_STORAGE_PROOF }}
          ACCESS_TOKEN_UPDATE_INTERVAL: 600000
          MIN_PASSWORD_LENGTH: 4
          PASSWORD_COMPLEXITY: easy
          NODE_OPTIONS: "--openssl-legacy-provider"

      - name: Build Cypress Docker image
        run: docker build -t cypress-runner ./e2e-tests

      - name: Run Cypress Tests in Docker
        run: |
          docker run --network host --name cypress-test-run \
            -e CYPRESS_operatorId=${{ secrets.CI_HEDERA_ACCOUNT }} \
            -e CYPRESS_operatorKey=${{ secrets.CI_HEDERA_PRIV_KEY }} \
            -e CYPRESS_grepTags="ui" \
            -e CYPRESS_grepFilterSpecs=true \
            cypress-runner \
            --headed \
            --browser chrome

      - name: Copy test results from Docker container
        if: always()
        run: |
          docker cp cypress-test-run:/e2e/cypress/test_results ./e2e-tests/cypress/test_results || true
          docker cp cypress-test-run:/e2e/cypress/screenshots ./e2e-tests/cypress/screenshots || true

      - name: Cleanup Docker resources
        if: always()
        run: |
          docker rm -f cypress-test-run || true

      - name: Upload screenshots
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        if: failure()
        with:
          name: cypress-screenshots
          path: e2e-tests/cypress/screenshots

      - name: Publish API Test Results
        uses: step-security/publish-unit-test-result-action@c8537a200a435e2560109a6a8ed9cac838b62656 # v2.20.5
        if: always()
        with:
          files: e2e-tests/cypress/test_results/**/*.xml
