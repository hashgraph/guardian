name: Guardian CI UI Tests(Manual)
run-name: Guardian CI UI Tests(Manual)
on:
    workflow_dispatch:
        description: 'Manual run'
jobs:
    buildAndTest:
        name: Build and Test (Manual)
        runs-on: ubuntu-latest
        services:
            cache:
                image: registry.redict.io/redict
                ports:
                    - 6379:6379
        strategy:
            matrix:
                node-version: [ 20.18.1 ]
                mongodb-version: [ 7.0.5 ]
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
              with:
                  egress-policy: audit

            - name: Checkout Code
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Setup Yarn
              uses: Borales/actions-yarn@3766bb1335b98fb13c60eaf358fe20811b730a88 # v5.0.0
              with:
                  cmd: install

            - name: Install dependencies
              run: yarn install

            - name: Build packages
              run: |
                  # sudo apt-get update
                  # sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb
                  pushd interfaces
                  yarn run build
                  popd
                  pushd common
                  yarn run build
                  popd
                  pushd notification-service
                  yarn run build
                  popd
                  pushd logger-service
                  yarn run build
                  popd
                  pushd auth-service
                  yarn run build
                  popd
                  pushd queue-service
                  yarn run build
                  popd
                  pushd guardian-service
                  yarn run build
                  popd
                  pushd policy-service
                  yarn run build
                  popd
                  pushd worker-service
                  yarn run build
                  popd
                  pushd api-gateway
                  yarn run build
                  popd
            - name: Start NatsMQ
              uses: step-security/nats-action@0306fc1c4e4f49dbe4db5865a3135ab1516a5aee # v0.1.0
              with:
                  port: '4222'

            - name: Start MongoDB
              uses: step-security/mongodb-github-action@ff3d5a3dec0957be7ef99d3d1c9ca4499e8a4cb8 # v1.11.0
              with:
                  mongodb-version: ${{ matrix.mongodb-version }}

            - name: Run Guardian
              run: |
                  pushd notification-service
                  npm start &
                  sleep 20
                  popd
                  pushd logger-service
                  npm start &
                  sleep 20
                  popd
                  pushd auth-service
                  npm start &
                  sleep 20
                  popd
                  pushd guardian-service
                  npm start &
                  sleep 20
                  popd
                  pushd policy-service
                  npm start &
                  sleep 20
                  popd
                  pushd queue-service
                  npm start &
                  sleep 20
                  popd
                  pushd worker-service
                  npm start &
                  npm start &
                  npm start &
                  npm start &
                  npm start &
                  sleep 20
                  popd
                  pushd api-gateway
                  npm start &
                  sleep 20
                  popd
                  sleep 60
              env:
                  CI: true
                  OPERATOR_ID: ${{ secrets.CI_HEDERA_ACCOUNT }}
                  OPERATOR_KEY: ${{ secrets.CI_HEDERA_PRIV_KEY }}
                  JWT_PRIVATE_KEY: ${{ secrets.CI_JWT_PRIVATE_KEY }}
                  JWT_PUBLIC_KEY: ${{ secrets.CI_JWT_PUBLIC_KEY }}
                  IPFS_NODE_ADDRESS: http://localhost:5001
                  IPFS_PROVIDER: web3storage
                  IPFS_PUBLIC_GATEWAY: https://dweb.link/ipfs/${cid}
                  IPFS_STORAGE_KEY: ${{ secrets.E2E_IPFS_STORAGE_KEY }}
                  IPFS_STORAGE_PROOF: ${{ secrets.E2E_IPFS_STORAGE_PROOF }}
                  ACCESS_TOKEN_UPDATE_INTERVAL: 600000

            - name: Run tests with Cypress
              run: |
                  pushd e2e-tests
                  npm install
                  npx cypress run --headed --env "operatorId=${{ secrets.CI_HEDERA_ACCOUNT }},operatorKey=${{ secrets.CI_HEDERA_PRIV_KEY }},grepTags=ui,grepFilterSpecs=true" --spec "cypress/e2e/ui-tests/**/*.cy.js" --browser chrome         
                  popd
            - name: Publish API Test Results
              uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # v2.18.0
              if: always()
              with:
                  files: e2e-tests/cypress/test_results/**/*.xml