# Please note variables defined in the "environment" section will override the same variables defined in the "env_file"
# See # https://docs.docker.com/compose/environment-variables/envvars-precedence/ for more details

# YAML anchor that contains common configuration elements for our services
x-service-template: &service-template
    init: true
    env_file:
        - ./configs/.env.quickstart.guardian.system
    environment:
        - GUARDIAN_ENV=${GUARDIAN_ENV}

services:
    mongo:
        image: mongo:6.0.25
        #command: "--setParameter allowDiskUseByDefault=true"
        # This command line options gets rid of mongodb messages in the logs, so you can see more clearly what's happening
        command: "--setParameter allowDiskUseByDefault=true  --quiet --logpath /dev/null"
        restart: always
        expose:
            - 27017

    cache:
        image: registry.redict.io/redict
        platform: linux/amd64
        restart: always
        expose:
            - 6379

    ipfs-node:
        image: ipfs/kubo:v0.36.0
        ports:
            - "5001:5001"
            - "4001:4001"
            - "8080:8080"
        volumes:
            - ipfs_data:/data/ipfs:rw
            - ipfs_export:/export:rw

    message-broker:
        image: nats:2.9.25
        expose:
            - 4222
        ports:
            - "8222:8222"
        command: "-c /etc/nats/nats.conf --http_port 8222"
        volumes:
            - ./configs/nats.conf:/etc/nats/nats.conf

    notification-service:
        <<: *service-template
        image: gcr.io/hedera-registry/notification-service:${GUARDIAN_VERSION:-latest}
        depends_on:
            - message-broker
        volumes:
            - ./notification-service/configs:/usr/local/app/configs:ro

    logger-service:
        <<: *service-template
        image: gcr.io/hedera-registry/logger-service:${GUARDIAN_VERSION:-latest}
        depends_on:
            - message-broker
        expose:
            - 6555
        volumes:
            - ./logger-service/configs:/usr/local/app/configs:ro

    queue-service:
        <<: *service-template
        image: gcr.io/hedera-registry/queue-service:${GUARDIAN_VERSION:-latest}
        depends_on:
            - mongo
            - message-broker
            - logger-service
        expose:
            - 6555
        volumes:
            - ./queue-service/configs:/usr/local/app/configs:ro

    topic-listener-service:
        <<: *service-template
        image: gcr.io/hedera-registry/topic-listener-service:${GUARDIAN_VERSION:-latest}
        depends_on:
            - mongo
            - message-broker
            - queue-service
        expose:
            - 6555
        volumes:
            - ./topic-listener-service/configs:/usr/local/app/configs:ro

    worker-service:
        <<: *service-template
        image: gcr.io/hedera-registry/worker-service:${GUARDIAN_VERSION:-latest}
        depends_on:
            queue-service:
                condition: service_started
            ipfs-node:
                condition: service_healthy
            auth-service:
                condition: service_started
        expose:
            - 6555
        volumes:
            - ./worker-service/tls:/usr/local/app/tls:ro
            - ./worker-service/configs:/usr/local/app/configs:ro
        deploy:
            replicas: 1
        environment:
            - OPERATOR_ID=${OPERATOR_ID}
            - OPERATOR_KEY=${OPERATOR_KEY}

    auth-service:
        <<: *service-template
        image: gcr.io/hedera-registry/auth-service-demo:${GUARDIAN_VERSION:-latest}
        volumes:
            - ./auth-service/tls:/usr/local/app/tls:ro
            - ./auth-service/configs:/usr/local/app/configs:ro
        depends_on:
            - mongo
            - message-broker
            - logger-service
        expose:
            - 6555
            - 5005

    api-gateway:
        <<: *service-template
        image: gcr.io/hedera-registry/api-gateway-demo:${GUARDIAN_VERSION:-latest}
        expose:
            - 3002
            - 6555
        depends_on:
            - mongo
            - cache
            - message-broker
            - guardian-service
            - auth-service
            - logger-service
        volumes:
            - ./api-gateway/configs:/usr/local/app/configs:ro

    policy-service:
        <<: *service-template
        image: gcr.io/hedera-registry/policy-service:${GUARDIAN_VERSION:-latest}
        depends_on:
            - mongo
            - message-broker
            - auth-service
            - logger-service
        expose:
            - 50000-60000
            - 5006
        volumes:
            - ./policy-service/tls:/usr/local/app/tls:ro
            - ./policy-service/configs:/usr/local/app/configs:ro

    guardian-service:
        <<: *service-template
        image: gcr.io/hedera-registry/guardian-service:${GUARDIAN_VERSION:-latest}
        volumes:
            - ./guardian-service/tls:/usr/local/app/tls:ro
            - ./guardian-service/configs:/usr/local/app/configs:ro
        depends_on:
            - mongo
            - message-broker
            - auth-service
            - logger-service
            - worker-service
            - policy-service
        expose:
            - 6555
            - 5007
        environment:
            - OPERATOR_ID=${OPERATOR_ID}
            - OPERATOR_KEY=${OPERATOR_KEY}

    topic-viewer:
        image: gcr.io/hedera-registry/topic-viewer:${GUARDIAN_VERSION:-latest}
        init: true
        expose:
            - 3006
            - 5009

    web-proxy:
        image: gcr.io/hedera-registry/frontend-demo:${GUARDIAN_VERSION:-latest}
        init: true
        environment:
            GATEWAY_CLIENT_MAX_BODY_SIZE: 1024m
            GATEWAY_HOST: api-gateway
            GATEWAY_PORT: 3002
            MRV_SENDER_HOST: mrv-sender
            MRV_SENDER_PORT: 3005
            TOPIC_VIEWER_HOST: topic-viewer
            TOPIC_VIEWER_PORT: 3006
        ports:
            - "3000:80"
        depends_on:
            - guardian-service
            - auth-service
            - api-gateway

volumes:
    ipfs_data:
    ipfs_export:

networks:
    monitoring:
        driver: bridge
